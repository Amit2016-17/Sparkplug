// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sparkplug_b.proto

package com.cirruslink.sparkplug.protobuf;

public final class SparkplugBProto {
  private SparkplugBProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface PayloadOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.cirruslink.sparkplug.protobuf.Payload)
      com.google.protobuf.GeneratedMessage.
          ExtendableMessageOrBuilder<Payload> {

    /**
     * <code>optional uint64 timestamp = 1;</code>
     *
     * <pre>
     * Timestamp at message sending time
     * </pre>
     */
    boolean hasTimestamp();
    /**
     * <code>optional uint64 timestamp = 1;</code>
     *
     * <pre>
     * Timestamp at message sending time
     * </pre>
     */
    long getTimestamp();

    /**
     * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric metric = 2;</code>
     *
     * <pre>
     * Repeated forever - no limit in Google Protobufs
     * </pre>
     */
    java.util.List<com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric> 
        getMetricList();
    /**
     * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric metric = 2;</code>
     *
     * <pre>
     * Repeated forever - no limit in Google Protobufs
     * </pre>
     */
    com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric getMetric(int index);
    /**
     * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric metric = 2;</code>
     *
     * <pre>
     * Repeated forever - no limit in Google Protobufs
     * </pre>
     */
    int getMetricCount();
    /**
     * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric metric = 2;</code>
     *
     * <pre>
     * Repeated forever - no limit in Google Protobufs
     * </pre>
     */
    java.util.List<? extends com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.MetricOrBuilder> 
        getMetricOrBuilderList();
    /**
     * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric metric = 2;</code>
     *
     * <pre>
     * Repeated forever - no limit in Google Protobufs
     * </pre>
     */
    com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.MetricOrBuilder getMetricOrBuilder(
        int index);

    /**
     * <code>optional uint64 seq = 3;</code>
     *
     * <pre>
     * Sequence number
     * </pre>
     */
    boolean hasSeq();
    /**
     * <code>optional uint64 seq = 3;</code>
     *
     * <pre>
     * Sequence number
     * </pre>
     */
    long getSeq();

    /**
     * <code>optional string uuid = 4;</code>
     *
     * <pre>
     * UUID to track message type in terms of schema definitions
     * </pre>
     */
    boolean hasUuid();
    /**
     * <code>optional string uuid = 4;</code>
     *
     * <pre>
     * UUID to track message type in terms of schema definitions
     * </pre>
     */
    java.lang.String getUuid();
    /**
     * <code>optional string uuid = 4;</code>
     *
     * <pre>
     * UUID to track message type in terms of schema definitions
     * </pre>
     */
    com.google.protobuf.ByteString
        getUuidBytes();

    /**
     * <code>optional bytes body = 5;</code>
     *
     * <pre>
     * To optionally bypass the whole definition above
     * </pre>
     */
    boolean hasBody();
    /**
     * <code>optional bytes body = 5;</code>
     *
     * <pre>
     * To optionally bypass the whole definition above
     * </pre>
     */
    com.google.protobuf.ByteString getBody();
  }
  /**
   * Protobuf type {@code com.cirruslink.sparkplug.protobuf.Payload}
   */
  public static final class Payload extends
      com.google.protobuf.GeneratedMessage.ExtendableMessage<
        Payload> implements
      // @@protoc_insertion_point(message_implements:com.cirruslink.sparkplug.protobuf.Payload)
      PayloadOrBuilder {
    // Use Payload.newBuilder() to construct.
    private Payload(com.google.protobuf.GeneratedMessage.ExtendableBuilder<com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload, ?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Payload(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Payload defaultInstance;
    public static Payload getDefaultInstance() {
      return defaultInstance;
    }

    public Payload getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Payload(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              timestamp_ = input.readUInt64();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                metric_ = new java.util.ArrayList<com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric>();
                mutable_bitField0_ |= 0x00000002;
              }
              metric_.add(input.readMessage(com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.PARSER, extensionRegistry));
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              seq_ = input.readUInt64();
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              uuid_ = bs;
              break;
            }
            case 42: {
              bitField0_ |= 0x00000008;
              body_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          metric_ = java.util.Collections.unmodifiableList(metric_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.cirruslink.sparkplug.protobuf.SparkplugBProto.internal_static_com_cirruslink_sparkplug_protobuf_Payload_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.cirruslink.sparkplug.protobuf.SparkplugBProto.internal_static_com_cirruslink_sparkplug_protobuf_Payload_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.class, com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Builder.class);
    }

    public static com.google.protobuf.Parser<Payload> PARSER =
        new com.google.protobuf.AbstractParser<Payload>() {
      public Payload parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Payload(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Payload> getParserForType() {
      return PARSER;
    }

    public interface MetricOrBuilder extends
        // @@protoc_insertion_point(interface_extends:com.cirruslink.sparkplug.protobuf.Payload.Metric)
        com.google.protobuf.GeneratedMessage.
            ExtendableMessageOrBuilder<Metric> {

      /**
       * <code>optional string name = 1;</code>
       *
       * <pre>
       * Metric name - should only be included on birth
       * </pre>
       */
      boolean hasName();
      /**
       * <code>optional string name = 1;</code>
       *
       * <pre>
       * Metric name - should only be included on birth
       * </pre>
       */
      java.lang.String getName();
      /**
       * <code>optional string name = 1;</code>
       *
       * <pre>
       * Metric name - should only be included on birth
       * </pre>
       */
      com.google.protobuf.ByteString
          getNameBytes();

      /**
       * <code>optional uint64 alias = 2;</code>
       *
       * <pre>
       * Metric alias - tied to name on birth and included in all later DATA messages
       * </pre>
       */
      boolean hasAlias();
      /**
       * <code>optional uint64 alias = 2;</code>
       *
       * <pre>
       * Metric alias - tied to name on birth and included in all later DATA messages
       * </pre>
       */
      long getAlias();

      /**
       * <code>optional uint64 timestamp = 3;</code>
       *
       * <pre>
       * Timestamp associated with data acquisition time
       * </pre>
       */
      boolean hasTimestamp();
      /**
       * <code>optional uint64 timestamp = 3;</code>
       *
       * <pre>
       * Timestamp associated with data acquisition time
       * </pre>
       */
      long getTimestamp();

      /**
       * <code>optional .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataType datatype = 4;</code>
       *
       * <pre>
       * DataType of the metric/tag value
       * </pre>
       */
      boolean hasDatatype();
      /**
       * <code>optional .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataType datatype = 4;</code>
       *
       * <pre>
       * DataType of the metric/tag value
       * </pre>
       */
      com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataType getDatatype();

      /**
       * <code>optional bool historical = 5;</code>
       *
       * <pre>
       * If this is historical data and should not update real time tag
       * </pre>
       */
      boolean hasHistorical();
      /**
       * <code>optional bool historical = 5;</code>
       *
       * <pre>
       * If this is historical data and should not update real time tag
       * </pre>
       */
      boolean getHistorical();

      /**
       * <code>optional .com.cirruslink.sparkplug.protobuf.Payload.Metric.MetaData metadata = 6;</code>
       *
       * <pre>
       * Metadata for the payload
       * </pre>
       */
      boolean hasMetadata();
      /**
       * <code>optional .com.cirruslink.sparkplug.protobuf.Payload.Metric.MetaData metadata = 6;</code>
       *
       * <pre>
       * Metadata for the payload
       * </pre>
       */
      com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaData getMetadata();
      /**
       * <code>optional .com.cirruslink.sparkplug.protobuf.Payload.Metric.MetaData metadata = 6;</code>
       *
       * <pre>
       * Metadata for the payload
       * </pre>
       */
      com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaDataOrBuilder getMetadataOrBuilder();

      /**
       * <code>optional uint32 int_value = 7;</code>
       *
       * <pre>
       * Int1, Int2, Int4
       * </pre>
       */
      boolean hasIntValue();
      /**
       * <code>optional uint32 int_value = 7;</code>
       *
       * <pre>
       * Int1, Int2, Int4
       * </pre>
       */
      int getIntValue();

      /**
       * <code>optional uint64 long_value = 8;</code>
       *
       * <pre>
       * Int8, DateTime
       * </pre>
       */
      boolean hasLongValue();
      /**
       * <code>optional uint64 long_value = 8;</code>
       *
       * <pre>
       * Int8, DateTime
       * </pre>
       */
      long getLongValue();

      /**
       * <code>optional float float_value = 9;</code>
       *
       * <pre>
       * Float4
       * </pre>
       */
      boolean hasFloatValue();
      /**
       * <code>optional float float_value = 9;</code>
       *
       * <pre>
       * Float4
       * </pre>
       */
      float getFloatValue();

      /**
       * <code>optional double double_value = 10;</code>
       *
       * <pre>
       * Float8
       * </pre>
       */
      boolean hasDoubleValue();
      /**
       * <code>optional double double_value = 10;</code>
       *
       * <pre>
       * Float8
       * </pre>
       */
      double getDoubleValue();

      /**
       * <code>optional bool boolean_value = 11;</code>
       *
       * <pre>
       * Boolean
       * </pre>
       */
      boolean hasBooleanValue();
      /**
       * <code>optional bool boolean_value = 11;</code>
       *
       * <pre>
       * Boolean
       * </pre>
       */
      boolean getBooleanValue();

      /**
       * <code>optional string string_value = 12;</code>
       *
       * <pre>
       * String, Text
       * </pre>
       */
      boolean hasStringValue();
      /**
       * <code>optional string string_value = 12;</code>
       *
       * <pre>
       * String, Text
       * </pre>
       */
      java.lang.String getStringValue();
      /**
       * <code>optional string string_value = 12;</code>
       *
       * <pre>
       * String, Text
       * </pre>
       */
      com.google.protobuf.ByteString
          getStringValueBytes();

      /**
       * <code>optional bytes bytes_value = 13;</code>
       *
       * <pre>
       * Bytes, File, Script
       * </pre>
       */
      boolean hasBytesValue();
      /**
       * <code>optional bytes bytes_value = 13;</code>
       *
       * <pre>
       * Bytes, File, Script
       * </pre>
       */
      com.google.protobuf.ByteString getBytesValue();

      /**
       * <code>optional .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet dataset_value = 14;</code>
       *
       * <pre>
       * DataSet
       * </pre>
       */
      boolean hasDatasetValue();
      /**
       * <code>optional .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet dataset_value = 14;</code>
       *
       * <pre>
       * DataSet
       * </pre>
       */
      com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet getDatasetValue();
      /**
       * <code>optional .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet dataset_value = 14;</code>
       *
       * <pre>
       * DataSet
       * </pre>
       */
      com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSetOrBuilder getDatasetValueOrBuilder();
    }
    /**
     * Protobuf type {@code com.cirruslink.sparkplug.protobuf.Payload.Metric}
     */
    public static final class Metric extends
        com.google.protobuf.GeneratedMessage.ExtendableMessage<
          Metric> implements
        // @@protoc_insertion_point(message_implements:com.cirruslink.sparkplug.protobuf.Payload.Metric)
        MetricOrBuilder {
      // Use Metric.newBuilder() to construct.
      private Metric(com.google.protobuf.GeneratedMessage.ExtendableBuilder<com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric, ?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Metric(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Metric defaultInstance;
      public static Metric getDefaultInstance() {
        return defaultInstance;
      }

      public Metric getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Metric(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000001;
                name_ = bs;
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                alias_ = input.readUInt64();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                timestamp_ = input.readUInt64();
                break;
              }
              case 32: {
                int rawValue = input.readEnum();
                com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataType value = com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataType.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(4, rawValue);
                } else {
                  bitField0_ |= 0x00000008;
                  datatype_ = value;
                }
                break;
              }
              case 40: {
                bitField0_ |= 0x00000010;
                historical_ = input.readBool();
                break;
              }
              case 50: {
                com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaData.Builder subBuilder = null;
                if (((bitField0_ & 0x00000020) == 0x00000020)) {
                  subBuilder = metadata_.toBuilder();
                }
                metadata_ = input.readMessage(com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaData.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(metadata_);
                  metadata_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000020;
                break;
              }
              case 56: {
                bitField0_ |= 0x00000040;
                intValue_ = input.readUInt32();
                break;
              }
              case 64: {
                bitField0_ |= 0x00000080;
                longValue_ = input.readUInt64();
                break;
              }
              case 77: {
                bitField0_ |= 0x00000100;
                floatValue_ = input.readFloat();
                break;
              }
              case 81: {
                bitField0_ |= 0x00000200;
                doubleValue_ = input.readDouble();
                break;
              }
              case 88: {
                bitField0_ |= 0x00000400;
                booleanValue_ = input.readBool();
                break;
              }
              case 98: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000800;
                stringValue_ = bs;
                break;
              }
              case 106: {
                bitField0_ |= 0x00001000;
                bytesValue_ = input.readBytes();
                break;
              }
              case 114: {
                com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Builder subBuilder = null;
                if (((bitField0_ & 0x00002000) == 0x00002000)) {
                  subBuilder = datasetValue_.toBuilder();
                }
                datasetValue_ = input.readMessage(com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(datasetValue_);
                  datasetValue_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00002000;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.cirruslink.sparkplug.protobuf.SparkplugBProto.internal_static_com_cirruslink_sparkplug_protobuf_Payload_Metric_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.cirruslink.sparkplug.protobuf.SparkplugBProto.internal_static_com_cirruslink_sparkplug_protobuf_Payload_Metric_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.class, com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.Builder.class);
      }

      public static com.google.protobuf.Parser<Metric> PARSER =
          new com.google.protobuf.AbstractParser<Metric>() {
        public Metric parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Metric(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<Metric> getParserForType() {
        return PARSER;
      }

      /**
       * Protobuf enum {@code com.cirruslink.sparkplug.protobuf.Payload.Metric.DataType}
       */
      public enum DataType
          implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <code>Unknown = 0;</code>
         *
         * <pre>
         * Unknown placeholder for future expansion.
         * </pre>
         */
        Unknown(0, 0),
        /**
         * <code>Int1 = 1;</code>
         *
         * <pre>
         * Ignition Data Types
         * </pre>
         */
        Int1(1, 1),
        /**
         * <code>Int2 = 2;</code>
         */
        Int2(2, 2),
        /**
         * <code>Int4 = 3;</code>
         */
        Int4(3, 3),
        /**
         * <code>Int8 = 4;</code>
         */
        Int8(4, 4),
        /**
         * <code>Float4 = 5;</code>
         */
        Float4(5, 5),
        /**
         * <code>Float8 = 6;</code>
         */
        Float8(6, 6),
        /**
         * <code>Boolean = 7;</code>
         */
        Boolean(7, 7),
        /**
         * <code>String = 8;</code>
         */
        String(8, 8),
        /**
         * <code>DateTime = 9;</code>
         */
        DateTime(9, 9),
        /**
         * <code>Dataset = 10;</code>
         */
        Dataset(10, 10),
        /**
         * <code>Text = 11;</code>
         */
        Text(11, 11),
        /**
         * <code>Bytes = 12;</code>
         *
         * <pre>
         * Additional Data Types
         * </pre>
         */
        Bytes(12, 12),
        /**
         * <code>File = 13;</code>
         */
        File(13, 13),
        /**
         * <code>UDT = 14;</code>
         */
        UDT(14, 14),
        ;

        /**
         * <code>Unknown = 0;</code>
         *
         * <pre>
         * Unknown placeholder for future expansion.
         * </pre>
         */
        public static final int Unknown_VALUE = 0;
        /**
         * <code>Int1 = 1;</code>
         *
         * <pre>
         * Ignition Data Types
         * </pre>
         */
        public static final int Int1_VALUE = 1;
        /**
         * <code>Int2 = 2;</code>
         */
        public static final int Int2_VALUE = 2;
        /**
         * <code>Int4 = 3;</code>
         */
        public static final int Int4_VALUE = 3;
        /**
         * <code>Int8 = 4;</code>
         */
        public static final int Int8_VALUE = 4;
        /**
         * <code>Float4 = 5;</code>
         */
        public static final int Float4_VALUE = 5;
        /**
         * <code>Float8 = 6;</code>
         */
        public static final int Float8_VALUE = 6;
        /**
         * <code>Boolean = 7;</code>
         */
        public static final int Boolean_VALUE = 7;
        /**
         * <code>String = 8;</code>
         */
        public static final int String_VALUE = 8;
        /**
         * <code>DateTime = 9;</code>
         */
        public static final int DateTime_VALUE = 9;
        /**
         * <code>Dataset = 10;</code>
         */
        public static final int Dataset_VALUE = 10;
        /**
         * <code>Text = 11;</code>
         */
        public static final int Text_VALUE = 11;
        /**
         * <code>Bytes = 12;</code>
         *
         * <pre>
         * Additional Data Types
         * </pre>
         */
        public static final int Bytes_VALUE = 12;
        /**
         * <code>File = 13;</code>
         */
        public static final int File_VALUE = 13;
        /**
         * <code>UDT = 14;</code>
         */
        public static final int UDT_VALUE = 14;


        public final int getNumber() { return value; }

        public static DataType valueOf(int value) {
          switch (value) {
            case 0: return Unknown;
            case 1: return Int1;
            case 2: return Int2;
            case 3: return Int4;
            case 4: return Int8;
            case 5: return Float4;
            case 6: return Float8;
            case 7: return Boolean;
            case 8: return String;
            case 9: return DateTime;
            case 10: return Dataset;
            case 11: return Text;
            case 12: return Bytes;
            case 13: return File;
            case 14: return UDT;
            default: return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<DataType>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static com.google.protobuf.Internal.EnumLiteMap<DataType>
            internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<DataType>() {
                public DataType findValueByNumber(int number) {
                  return DataType.valueOf(number);
                }
              };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
          return getDescriptor().getValues().get(index);
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
          return com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.getDescriptor().getEnumTypes().get(0);
        }

        private static final DataType[] VALUES = values();

        public static DataType valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
          if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "EnumValueDescriptor is not for this type.");
          }
          return VALUES[desc.getIndex()];
        }

        private final int index;
        private final int value;

        private DataType(int index, int value) {
          this.index = index;
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:com.cirruslink.sparkplug.protobuf.Payload.Metric.DataType)
      }

      public interface MetaDataOrBuilder extends
          // @@protoc_insertion_point(interface_extends:com.cirruslink.sparkplug.protobuf.Payload.Metric.MetaData)
          com.google.protobuf.GeneratedMessage.
              ExtendableMessageOrBuilder<MetaData> {

        /**
         * <code>optional bool isMultiPart = 1;</code>
         *
         * <pre>
         * Bytes specific metadata
         * </pre>
         */
        boolean hasIsMultiPart();
        /**
         * <code>optional bool isMultiPart = 1;</code>
         *
         * <pre>
         * Bytes specific metadata
         * </pre>
         */
        boolean getIsMultiPart();

        /**
         * <code>optional string content_type = 2;</code>
         *
         * <pre>
         * General metadata
         * </pre>
         */
        boolean hasContentType();
        /**
         * <code>optional string content_type = 2;</code>
         *
         * <pre>
         * General metadata
         * </pre>
         */
        java.lang.String getContentType();
        /**
         * <code>optional string content_type = 2;</code>
         *
         * <pre>
         * General metadata
         * </pre>
         */
        com.google.protobuf.ByteString
            getContentTypeBytes();

        /**
         * <code>optional uint64 size = 3;</code>
         *
         * <pre>
         * File size, String size, Multi-part size, etc
         * </pre>
         */
        boolean hasSize();
        /**
         * <code>optional uint64 size = 3;</code>
         *
         * <pre>
         * File size, String size, Multi-part size, etc
         * </pre>
         */
        long getSize();

        /**
         * <code>optional uint64 seq = 4;</code>
         *
         * <pre>
         * Sequence number for multi-part messages
         * </pre>
         */
        boolean hasSeq();
        /**
         * <code>optional uint64 seq = 4;</code>
         *
         * <pre>
         * Sequence number for multi-part messages
         * </pre>
         */
        long getSeq();

        /**
         * <code>optional string file_name = 5;</code>
         *
         * <pre>
         * File metadata
         * </pre>
         */
        boolean hasFileName();
        /**
         * <code>optional string file_name = 5;</code>
         *
         * <pre>
         * File metadata
         * </pre>
         */
        java.lang.String getFileName();
        /**
         * <code>optional string file_name = 5;</code>
         *
         * <pre>
         * File metadata
         * </pre>
         */
        com.google.protobuf.ByteString
            getFileNameBytes();

        /**
         * <code>optional string file_type = 6;</code>
         *
         * <pre>
         * File type (i.e. xml, json, txt, cpp, etc)
         * </pre>
         */
        boolean hasFileType();
        /**
         * <code>optional string file_type = 6;</code>
         *
         * <pre>
         * File type (i.e. xml, json, txt, cpp, etc)
         * </pre>
         */
        java.lang.String getFileType();
        /**
         * <code>optional string file_type = 6;</code>
         *
         * <pre>
         * File type (i.e. xml, json, txt, cpp, etc)
         * </pre>
         */
        com.google.protobuf.ByteString
            getFileTypeBytes();

        /**
         * <code>optional string md5 = 7;</code>
         *
         * <pre>
         * md5 of data
         * </pre>
         */
        boolean hasMd5();
        /**
         * <code>optional string md5 = 7;</code>
         *
         * <pre>
         * md5 of data
         * </pre>
         */
        java.lang.String getMd5();
        /**
         * <code>optional string md5 = 7;</code>
         *
         * <pre>
         * md5 of data
         * </pre>
         */
        com.google.protobuf.ByteString
            getMd5Bytes();

        /**
         * <code>optional string typeId = 8;</code>
         *
         * <pre>
         * UDT specifics
         * </pre>
         */
        boolean hasTypeId();
        /**
         * <code>optional string typeId = 8;</code>
         *
         * <pre>
         * UDT specifics
         * </pre>
         */
        java.lang.String getTypeId();
        /**
         * <code>optional string typeId = 8;</code>
         *
         * <pre>
         * UDT specifics
         * </pre>
         */
        com.google.protobuf.ByteString
            getTypeIdBytes();

        /**
         * <code>optional string description = 9;</code>
         *
         * <pre>
         * Catchalls and future expansion
         * </pre>
         */
        boolean hasDescription();
        /**
         * <code>optional string description = 9;</code>
         *
         * <pre>
         * Catchalls and future expansion
         * </pre>
         */
        java.lang.String getDescription();
        /**
         * <code>optional string description = 9;</code>
         *
         * <pre>
         * Catchalls and future expansion
         * </pre>
         */
        com.google.protobuf.ByteString
            getDescriptionBytes();

        /**
         * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.MetaField members = 10;</code>
         */
        java.util.List<com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaField> 
            getMembersList();
        /**
         * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.MetaField members = 10;</code>
         */
        com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaField getMembers(int index);
        /**
         * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.MetaField members = 10;</code>
         */
        int getMembersCount();
        /**
         * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.MetaField members = 10;</code>
         */
        java.util.List<? extends com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaFieldOrBuilder> 
            getMembersOrBuilderList();
        /**
         * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.MetaField members = 10;</code>
         */
        com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaFieldOrBuilder getMembersOrBuilder(
            int index);
      }
      /**
       * Protobuf type {@code com.cirruslink.sparkplug.protobuf.Payload.Metric.MetaData}
       */
      public static final class MetaData extends
          com.google.protobuf.GeneratedMessage.ExtendableMessage<
            MetaData> implements
          // @@protoc_insertion_point(message_implements:com.cirruslink.sparkplug.protobuf.Payload.Metric.MetaData)
          MetaDataOrBuilder {
        // Use MetaData.newBuilder() to construct.
        private MetaData(com.google.protobuf.GeneratedMessage.ExtendableBuilder<com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaData, ?> builder) {
          super(builder);
          this.unknownFields = builder.getUnknownFields();
        }
        private MetaData(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

        private static final MetaData defaultInstance;
        public static MetaData getDefaultInstance() {
          return defaultInstance;
        }

        public MetaData getDefaultInstanceForType() {
          return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;
        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
            getUnknownFields() {
          return this.unknownFields;
        }
        private MetaData(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          initFields();
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(input, unknownFields,
                                         extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  isMultiPart_ = input.readBool();
                  break;
                }
                case 18: {
                  com.google.protobuf.ByteString bs = input.readBytes();
                  bitField0_ |= 0x00000002;
                  contentType_ = bs;
                  break;
                }
                case 24: {
                  bitField0_ |= 0x00000004;
                  size_ = input.readUInt64();
                  break;
                }
                case 32: {
                  bitField0_ |= 0x00000008;
                  seq_ = input.readUInt64();
                  break;
                }
                case 42: {
                  com.google.protobuf.ByteString bs = input.readBytes();
                  bitField0_ |= 0x00000010;
                  fileName_ = bs;
                  break;
                }
                case 50: {
                  com.google.protobuf.ByteString bs = input.readBytes();
                  bitField0_ |= 0x00000020;
                  fileType_ = bs;
                  break;
                }
                case 58: {
                  com.google.protobuf.ByteString bs = input.readBytes();
                  bitField0_ |= 0x00000040;
                  md5_ = bs;
                  break;
                }
                case 66: {
                  com.google.protobuf.ByteString bs = input.readBytes();
                  bitField0_ |= 0x00000080;
                  typeId_ = bs;
                  break;
                }
                case 74: {
                  com.google.protobuf.ByteString bs = input.readBytes();
                  bitField0_ |= 0x00000100;
                  description_ = bs;
                  break;
                }
                case 82: {
                  if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                    members_ = new java.util.ArrayList<com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaField>();
                    mutable_bitField0_ |= 0x00000200;
                  }
                  members_.add(input.readMessage(com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaField.PARSER, extensionRegistry));
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this);
          } finally {
            if (((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
              members_ = java.util.Collections.unmodifiableList(members_);
            }
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.cirruslink.sparkplug.protobuf.SparkplugBProto.internal_static_com_cirruslink_sparkplug_protobuf_Payload_Metric_MetaData_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.cirruslink.sparkplug.protobuf.SparkplugBProto.internal_static_com_cirruslink_sparkplug_protobuf_Payload_Metric_MetaData_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaData.class, com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaData.Builder.class);
        }

        public static com.google.protobuf.Parser<MetaData> PARSER =
            new com.google.protobuf.AbstractParser<MetaData>() {
          public MetaData parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new MetaData(input, extensionRegistry);
          }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<MetaData> getParserForType() {
          return PARSER;
        }

        private int bitField0_;
        public static final int ISMULTIPART_FIELD_NUMBER = 1;
        private boolean isMultiPart_;
        /**
         * <code>optional bool isMultiPart = 1;</code>
         *
         * <pre>
         * Bytes specific metadata
         * </pre>
         */
        public boolean hasIsMultiPart() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional bool isMultiPart = 1;</code>
         *
         * <pre>
         * Bytes specific metadata
         * </pre>
         */
        public boolean getIsMultiPart() {
          return isMultiPart_;
        }

        public static final int CONTENT_TYPE_FIELD_NUMBER = 2;
        private java.lang.Object contentType_;
        /**
         * <code>optional string content_type = 2;</code>
         *
         * <pre>
         * General metadata
         * </pre>
         */
        public boolean hasContentType() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional string content_type = 2;</code>
         *
         * <pre>
         * General metadata
         * </pre>
         */
        public java.lang.String getContentType() {
          java.lang.Object ref = contentType_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              contentType_ = s;
            }
            return s;
          }
        }
        /**
         * <code>optional string content_type = 2;</code>
         *
         * <pre>
         * General metadata
         * </pre>
         */
        public com.google.protobuf.ByteString
            getContentTypeBytes() {
          java.lang.Object ref = contentType_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            contentType_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int SIZE_FIELD_NUMBER = 3;
        private long size_;
        /**
         * <code>optional uint64 size = 3;</code>
         *
         * <pre>
         * File size, String size, Multi-part size, etc
         * </pre>
         */
        public boolean hasSize() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional uint64 size = 3;</code>
         *
         * <pre>
         * File size, String size, Multi-part size, etc
         * </pre>
         */
        public long getSize() {
          return size_;
        }

        public static final int SEQ_FIELD_NUMBER = 4;
        private long seq_;
        /**
         * <code>optional uint64 seq = 4;</code>
         *
         * <pre>
         * Sequence number for multi-part messages
         * </pre>
         */
        public boolean hasSeq() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional uint64 seq = 4;</code>
         *
         * <pre>
         * Sequence number for multi-part messages
         * </pre>
         */
        public long getSeq() {
          return seq_;
        }

        public static final int FILE_NAME_FIELD_NUMBER = 5;
        private java.lang.Object fileName_;
        /**
         * <code>optional string file_name = 5;</code>
         *
         * <pre>
         * File metadata
         * </pre>
         */
        public boolean hasFileName() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional string file_name = 5;</code>
         *
         * <pre>
         * File metadata
         * </pre>
         */
        public java.lang.String getFileName() {
          java.lang.Object ref = fileName_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              fileName_ = s;
            }
            return s;
          }
        }
        /**
         * <code>optional string file_name = 5;</code>
         *
         * <pre>
         * File metadata
         * </pre>
         */
        public com.google.protobuf.ByteString
            getFileNameBytes() {
          java.lang.Object ref = fileName_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            fileName_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int FILE_TYPE_FIELD_NUMBER = 6;
        private java.lang.Object fileType_;
        /**
         * <code>optional string file_type = 6;</code>
         *
         * <pre>
         * File type (i.e. xml, json, txt, cpp, etc)
         * </pre>
         */
        public boolean hasFileType() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>optional string file_type = 6;</code>
         *
         * <pre>
         * File type (i.e. xml, json, txt, cpp, etc)
         * </pre>
         */
        public java.lang.String getFileType() {
          java.lang.Object ref = fileType_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              fileType_ = s;
            }
            return s;
          }
        }
        /**
         * <code>optional string file_type = 6;</code>
         *
         * <pre>
         * File type (i.e. xml, json, txt, cpp, etc)
         * </pre>
         */
        public com.google.protobuf.ByteString
            getFileTypeBytes() {
          java.lang.Object ref = fileType_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            fileType_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int MD5_FIELD_NUMBER = 7;
        private java.lang.Object md5_;
        /**
         * <code>optional string md5 = 7;</code>
         *
         * <pre>
         * md5 of data
         * </pre>
         */
        public boolean hasMd5() {
          return ((bitField0_ & 0x00000040) == 0x00000040);
        }
        /**
         * <code>optional string md5 = 7;</code>
         *
         * <pre>
         * md5 of data
         * </pre>
         */
        public java.lang.String getMd5() {
          java.lang.Object ref = md5_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              md5_ = s;
            }
            return s;
          }
        }
        /**
         * <code>optional string md5 = 7;</code>
         *
         * <pre>
         * md5 of data
         * </pre>
         */
        public com.google.protobuf.ByteString
            getMd5Bytes() {
          java.lang.Object ref = md5_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            md5_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int TYPEID_FIELD_NUMBER = 8;
        private java.lang.Object typeId_;
        /**
         * <code>optional string typeId = 8;</code>
         *
         * <pre>
         * UDT specifics
         * </pre>
         */
        public boolean hasTypeId() {
          return ((bitField0_ & 0x00000080) == 0x00000080);
        }
        /**
         * <code>optional string typeId = 8;</code>
         *
         * <pre>
         * UDT specifics
         * </pre>
         */
        public java.lang.String getTypeId() {
          java.lang.Object ref = typeId_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              typeId_ = s;
            }
            return s;
          }
        }
        /**
         * <code>optional string typeId = 8;</code>
         *
         * <pre>
         * UDT specifics
         * </pre>
         */
        public com.google.protobuf.ByteString
            getTypeIdBytes() {
          java.lang.Object ref = typeId_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            typeId_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int DESCRIPTION_FIELD_NUMBER = 9;
        private java.lang.Object description_;
        /**
         * <code>optional string description = 9;</code>
         *
         * <pre>
         * Catchalls and future expansion
         * </pre>
         */
        public boolean hasDescription() {
          return ((bitField0_ & 0x00000100) == 0x00000100);
        }
        /**
         * <code>optional string description = 9;</code>
         *
         * <pre>
         * Catchalls and future expansion
         * </pre>
         */
        public java.lang.String getDescription() {
          java.lang.Object ref = description_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              description_ = s;
            }
            return s;
          }
        }
        /**
         * <code>optional string description = 9;</code>
         *
         * <pre>
         * Catchalls and future expansion
         * </pre>
         */
        public com.google.protobuf.ByteString
            getDescriptionBytes() {
          java.lang.Object ref = description_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            description_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int MEMBERS_FIELD_NUMBER = 10;
        private java.util.List<com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaField> members_;
        /**
         * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.MetaField members = 10;</code>
         */
        public java.util.List<com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaField> getMembersList() {
          return members_;
        }
        /**
         * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.MetaField members = 10;</code>
         */
        public java.util.List<? extends com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaFieldOrBuilder> 
            getMembersOrBuilderList() {
          return members_;
        }
        /**
         * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.MetaField members = 10;</code>
         */
        public int getMembersCount() {
          return members_.size();
        }
        /**
         * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.MetaField members = 10;</code>
         */
        public com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaField getMembers(int index) {
          return members_.get(index);
        }
        /**
         * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.MetaField members = 10;</code>
         */
        public com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaFieldOrBuilder getMembersOrBuilder(
            int index) {
          return members_.get(index);
        }

        private void initFields() {
          isMultiPart_ = false;
          contentType_ = "";
          size_ = 0L;
          seq_ = 0L;
          fileName_ = "";
          fileType_ = "";
          md5_ = "";
          typeId_ = "";
          description_ = "";
          members_ = java.util.Collections.emptyList();
        }
        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          for (int i = 0; i < getMembersCount(); i++) {
            if (!getMembers(i).isInitialized()) {
              memoizedIsInitialized = 0;
              return false;
            }
          }
          if (!extensionsAreInitialized()) {
            memoizedIsInitialized = 0;
            return false;
          }
          memoizedIsInitialized = 1;
          return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          com.google.protobuf.GeneratedMessage
            .ExtendableMessage<com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaData>.ExtensionWriter extensionWriter =
              newExtensionWriter();
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            output.writeBool(1, isMultiPart_);
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            output.writeBytes(2, getContentTypeBytes());
          }
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            output.writeUInt64(3, size_);
          }
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            output.writeUInt64(4, seq_);
          }
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            output.writeBytes(5, getFileNameBytes());
          }
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            output.writeBytes(6, getFileTypeBytes());
          }
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            output.writeBytes(7, getMd5Bytes());
          }
          if (((bitField0_ & 0x00000080) == 0x00000080)) {
            output.writeBytes(8, getTypeIdBytes());
          }
          if (((bitField0_ & 0x00000100) == 0x00000100)) {
            output.writeBytes(9, getDescriptionBytes());
          }
          for (int i = 0; i < members_.size(); i++) {
            output.writeMessage(10, members_.get(i));
          }
          extensionWriter.writeUntil(536870912, output);
          getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(1, isMultiPart_);
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBytesSize(2, getContentTypeBytes());
          }
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt64Size(3, size_);
          }
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt64Size(4, seq_);
          }
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBytesSize(5, getFileNameBytes());
          }
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBytesSize(6, getFileTypeBytes());
          }
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBytesSize(7, getMd5Bytes());
          }
          if (((bitField0_ & 0x00000080) == 0x00000080)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBytesSize(8, getTypeIdBytes());
          }
          if (((bitField0_ & 0x00000100) == 0x00000100)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBytesSize(9, getDescriptionBytes());
          }
          for (int i = 0; i < members_.size(); i++) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(10, members_.get(i));
          }
          size += extensionsSerializedSize();
          size += getUnknownFields().getSerializedSize();
          memoizedSerializedSize = size;
          return size;
        }

        private static final long serialVersionUID = 0L;
        @java.lang.Override
        protected java.lang.Object writeReplace()
            throws java.io.ObjectStreamException {
          return super.writeReplace();
        }

        public static com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaData parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaData parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaData parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaData parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaData parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaData parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }
        public static com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaData parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input);
        }
        public static com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaData parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        public static com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaData parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaData parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaData prototype) {
          return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code com.cirruslink.sparkplug.protobuf.Payload.Metric.MetaData}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessage.ExtendableBuilder<
              com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaData, Builder> implements
            // @@protoc_insertion_point(builder_implements:com.cirruslink.sparkplug.protobuf.Payload.Metric.MetaData)
            com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaDataOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return com.cirruslink.sparkplug.protobuf.SparkplugBProto.internal_static_com_cirruslink_sparkplug_protobuf_Payload_Metric_MetaData_descriptor;
          }

          protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return com.cirruslink.sparkplug.protobuf.SparkplugBProto.internal_static_com_cirruslink_sparkplug_protobuf_Payload_Metric_MetaData_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaData.class, com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaData.Builder.class);
          }

          // Construct using com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaData.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
              getMembersFieldBuilder();
            }
          }
          private static Builder create() {
            return new Builder();
          }

          public Builder clear() {
            super.clear();
            isMultiPart_ = false;
            bitField0_ = (bitField0_ & ~0x00000001);
            contentType_ = "";
            bitField0_ = (bitField0_ & ~0x00000002);
            size_ = 0L;
            bitField0_ = (bitField0_ & ~0x00000004);
            seq_ = 0L;
            bitField0_ = (bitField0_ & ~0x00000008);
            fileName_ = "";
            bitField0_ = (bitField0_ & ~0x00000010);
            fileType_ = "";
            bitField0_ = (bitField0_ & ~0x00000020);
            md5_ = "";
            bitField0_ = (bitField0_ & ~0x00000040);
            typeId_ = "";
            bitField0_ = (bitField0_ & ~0x00000080);
            description_ = "";
            bitField0_ = (bitField0_ & ~0x00000100);
            if (membersBuilder_ == null) {
              members_ = java.util.Collections.emptyList();
              bitField0_ = (bitField0_ & ~0x00000200);
            } else {
              membersBuilder_.clear();
            }
            return this;
          }

          public Builder clone() {
            return create().mergeFrom(buildPartial());
          }

          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return com.cirruslink.sparkplug.protobuf.SparkplugBProto.internal_static_com_cirruslink_sparkplug_protobuf_Payload_Metric_MetaData_descriptor;
          }

          public com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaData getDefaultInstanceForType() {
            return com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaData.getDefaultInstance();
          }

          public com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaData build() {
            com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaData result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          public com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaData buildPartial() {
            com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaData result = new com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaData(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
              to_bitField0_ |= 0x00000001;
            }
            result.isMultiPart_ = isMultiPart_;
            if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
              to_bitField0_ |= 0x00000002;
            }
            result.contentType_ = contentType_;
            if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
              to_bitField0_ |= 0x00000004;
            }
            result.size_ = size_;
            if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
              to_bitField0_ |= 0x00000008;
            }
            result.seq_ = seq_;
            if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
              to_bitField0_ |= 0x00000010;
            }
            result.fileName_ = fileName_;
            if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
              to_bitField0_ |= 0x00000020;
            }
            result.fileType_ = fileType_;
            if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
              to_bitField0_ |= 0x00000040;
            }
            result.md5_ = md5_;
            if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
              to_bitField0_ |= 0x00000080;
            }
            result.typeId_ = typeId_;
            if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
              to_bitField0_ |= 0x00000100;
            }
            result.description_ = description_;
            if (membersBuilder_ == null) {
              if (((bitField0_ & 0x00000200) == 0x00000200)) {
                members_ = java.util.Collections.unmodifiableList(members_);
                bitField0_ = (bitField0_ & ~0x00000200);
              }
              result.members_ = members_;
            } else {
              result.members_ = membersBuilder_.build();
            }
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaData) {
              return mergeFrom((com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaData)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaData other) {
            if (other == com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaData.getDefaultInstance()) return this;
            if (other.hasIsMultiPart()) {
              setIsMultiPart(other.getIsMultiPart());
            }
            if (other.hasContentType()) {
              bitField0_ |= 0x00000002;
              contentType_ = other.contentType_;
              onChanged();
            }
            if (other.hasSize()) {
              setSize(other.getSize());
            }
            if (other.hasSeq()) {
              setSeq(other.getSeq());
            }
            if (other.hasFileName()) {
              bitField0_ |= 0x00000010;
              fileName_ = other.fileName_;
              onChanged();
            }
            if (other.hasFileType()) {
              bitField0_ |= 0x00000020;
              fileType_ = other.fileType_;
              onChanged();
            }
            if (other.hasMd5()) {
              bitField0_ |= 0x00000040;
              md5_ = other.md5_;
              onChanged();
            }
            if (other.hasTypeId()) {
              bitField0_ |= 0x00000080;
              typeId_ = other.typeId_;
              onChanged();
            }
            if (other.hasDescription()) {
              bitField0_ |= 0x00000100;
              description_ = other.description_;
              onChanged();
            }
            if (membersBuilder_ == null) {
              if (!other.members_.isEmpty()) {
                if (members_.isEmpty()) {
                  members_ = other.members_;
                  bitField0_ = (bitField0_ & ~0x00000200);
                } else {
                  ensureMembersIsMutable();
                  members_.addAll(other.members_);
                }
                onChanged();
              }
            } else {
              if (!other.members_.isEmpty()) {
                if (membersBuilder_.isEmpty()) {
                  membersBuilder_.dispose();
                  membersBuilder_ = null;
                  members_ = other.members_;
                  bitField0_ = (bitField0_ & ~0x00000200);
                  membersBuilder_ = 
                    com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                       getMembersFieldBuilder() : null;
                } else {
                  membersBuilder_.addAllMessages(other.members_);
                }
              }
            }
            this.mergeExtensionFields(other);
            this.mergeUnknownFields(other.getUnknownFields());
            return this;
          }

          public final boolean isInitialized() {
            for (int i = 0; i < getMembersCount(); i++) {
              if (!getMembers(i).isInitialized()) {
                
                return false;
              }
            }
            if (!extensionsAreInitialized()) {
              
              return false;
            }
            return true;
          }

          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaData parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaData) e.getUnfinishedMessage();
              throw e;
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          private boolean isMultiPart_ ;
          /**
           * <code>optional bool isMultiPart = 1;</code>
           *
           * <pre>
           * Bytes specific metadata
           * </pre>
           */
          public boolean hasIsMultiPart() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
          }
          /**
           * <code>optional bool isMultiPart = 1;</code>
           *
           * <pre>
           * Bytes specific metadata
           * </pre>
           */
          public boolean getIsMultiPart() {
            return isMultiPart_;
          }
          /**
           * <code>optional bool isMultiPart = 1;</code>
           *
           * <pre>
           * Bytes specific metadata
           * </pre>
           */
          public Builder setIsMultiPart(boolean value) {
            bitField0_ |= 0x00000001;
            isMultiPart_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional bool isMultiPart = 1;</code>
           *
           * <pre>
           * Bytes specific metadata
           * </pre>
           */
          public Builder clearIsMultiPart() {
            bitField0_ = (bitField0_ & ~0x00000001);
            isMultiPart_ = false;
            onChanged();
            return this;
          }

          private java.lang.Object contentType_ = "";
          /**
           * <code>optional string content_type = 2;</code>
           *
           * <pre>
           * General metadata
           * </pre>
           */
          public boolean hasContentType() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
          }
          /**
           * <code>optional string content_type = 2;</code>
           *
           * <pre>
           * General metadata
           * </pre>
           */
          public java.lang.String getContentType() {
            java.lang.Object ref = contentType_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              if (bs.isValidUtf8()) {
                contentType_ = s;
              }
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <code>optional string content_type = 2;</code>
           *
           * <pre>
           * General metadata
           * </pre>
           */
          public com.google.protobuf.ByteString
              getContentTypeBytes() {
            java.lang.Object ref = contentType_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              contentType_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <code>optional string content_type = 2;</code>
           *
           * <pre>
           * General metadata
           * </pre>
           */
          public Builder setContentType(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
            contentType_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional string content_type = 2;</code>
           *
           * <pre>
           * General metadata
           * </pre>
           */
          public Builder clearContentType() {
            bitField0_ = (bitField0_ & ~0x00000002);
            contentType_ = getDefaultInstance().getContentType();
            onChanged();
            return this;
          }
          /**
           * <code>optional string content_type = 2;</code>
           *
           * <pre>
           * General metadata
           * </pre>
           */
          public Builder setContentTypeBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
            contentType_ = value;
            onChanged();
            return this;
          }

          private long size_ ;
          /**
           * <code>optional uint64 size = 3;</code>
           *
           * <pre>
           * File size, String size, Multi-part size, etc
           * </pre>
           */
          public boolean hasSize() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
          }
          /**
           * <code>optional uint64 size = 3;</code>
           *
           * <pre>
           * File size, String size, Multi-part size, etc
           * </pre>
           */
          public long getSize() {
            return size_;
          }
          /**
           * <code>optional uint64 size = 3;</code>
           *
           * <pre>
           * File size, String size, Multi-part size, etc
           * </pre>
           */
          public Builder setSize(long value) {
            bitField0_ |= 0x00000004;
            size_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint64 size = 3;</code>
           *
           * <pre>
           * File size, String size, Multi-part size, etc
           * </pre>
           */
          public Builder clearSize() {
            bitField0_ = (bitField0_ & ~0x00000004);
            size_ = 0L;
            onChanged();
            return this;
          }

          private long seq_ ;
          /**
           * <code>optional uint64 seq = 4;</code>
           *
           * <pre>
           * Sequence number for multi-part messages
           * </pre>
           */
          public boolean hasSeq() {
            return ((bitField0_ & 0x00000008) == 0x00000008);
          }
          /**
           * <code>optional uint64 seq = 4;</code>
           *
           * <pre>
           * Sequence number for multi-part messages
           * </pre>
           */
          public long getSeq() {
            return seq_;
          }
          /**
           * <code>optional uint64 seq = 4;</code>
           *
           * <pre>
           * Sequence number for multi-part messages
           * </pre>
           */
          public Builder setSeq(long value) {
            bitField0_ |= 0x00000008;
            seq_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint64 seq = 4;</code>
           *
           * <pre>
           * Sequence number for multi-part messages
           * </pre>
           */
          public Builder clearSeq() {
            bitField0_ = (bitField0_ & ~0x00000008);
            seq_ = 0L;
            onChanged();
            return this;
          }

          private java.lang.Object fileName_ = "";
          /**
           * <code>optional string file_name = 5;</code>
           *
           * <pre>
           * File metadata
           * </pre>
           */
          public boolean hasFileName() {
            return ((bitField0_ & 0x00000010) == 0x00000010);
          }
          /**
           * <code>optional string file_name = 5;</code>
           *
           * <pre>
           * File metadata
           * </pre>
           */
          public java.lang.String getFileName() {
            java.lang.Object ref = fileName_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              if (bs.isValidUtf8()) {
                fileName_ = s;
              }
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <code>optional string file_name = 5;</code>
           *
           * <pre>
           * File metadata
           * </pre>
           */
          public com.google.protobuf.ByteString
              getFileNameBytes() {
            java.lang.Object ref = fileName_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              fileName_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <code>optional string file_name = 5;</code>
           *
           * <pre>
           * File metadata
           * </pre>
           */
          public Builder setFileName(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
            fileName_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional string file_name = 5;</code>
           *
           * <pre>
           * File metadata
           * </pre>
           */
          public Builder clearFileName() {
            bitField0_ = (bitField0_ & ~0x00000010);
            fileName_ = getDefaultInstance().getFileName();
            onChanged();
            return this;
          }
          /**
           * <code>optional string file_name = 5;</code>
           *
           * <pre>
           * File metadata
           * </pre>
           */
          public Builder setFileNameBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
            fileName_ = value;
            onChanged();
            return this;
          }

          private java.lang.Object fileType_ = "";
          /**
           * <code>optional string file_type = 6;</code>
           *
           * <pre>
           * File type (i.e. xml, json, txt, cpp, etc)
           * </pre>
           */
          public boolean hasFileType() {
            return ((bitField0_ & 0x00000020) == 0x00000020);
          }
          /**
           * <code>optional string file_type = 6;</code>
           *
           * <pre>
           * File type (i.e. xml, json, txt, cpp, etc)
           * </pre>
           */
          public java.lang.String getFileType() {
            java.lang.Object ref = fileType_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              if (bs.isValidUtf8()) {
                fileType_ = s;
              }
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <code>optional string file_type = 6;</code>
           *
           * <pre>
           * File type (i.e. xml, json, txt, cpp, etc)
           * </pre>
           */
          public com.google.protobuf.ByteString
              getFileTypeBytes() {
            java.lang.Object ref = fileType_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              fileType_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <code>optional string file_type = 6;</code>
           *
           * <pre>
           * File type (i.e. xml, json, txt, cpp, etc)
           * </pre>
           */
          public Builder setFileType(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
            fileType_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional string file_type = 6;</code>
           *
           * <pre>
           * File type (i.e. xml, json, txt, cpp, etc)
           * </pre>
           */
          public Builder clearFileType() {
            bitField0_ = (bitField0_ & ~0x00000020);
            fileType_ = getDefaultInstance().getFileType();
            onChanged();
            return this;
          }
          /**
           * <code>optional string file_type = 6;</code>
           *
           * <pre>
           * File type (i.e. xml, json, txt, cpp, etc)
           * </pre>
           */
          public Builder setFileTypeBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
            fileType_ = value;
            onChanged();
            return this;
          }

          private java.lang.Object md5_ = "";
          /**
           * <code>optional string md5 = 7;</code>
           *
           * <pre>
           * md5 of data
           * </pre>
           */
          public boolean hasMd5() {
            return ((bitField0_ & 0x00000040) == 0x00000040);
          }
          /**
           * <code>optional string md5 = 7;</code>
           *
           * <pre>
           * md5 of data
           * </pre>
           */
          public java.lang.String getMd5() {
            java.lang.Object ref = md5_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              if (bs.isValidUtf8()) {
                md5_ = s;
              }
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <code>optional string md5 = 7;</code>
           *
           * <pre>
           * md5 of data
           * </pre>
           */
          public com.google.protobuf.ByteString
              getMd5Bytes() {
            java.lang.Object ref = md5_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              md5_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <code>optional string md5 = 7;</code>
           *
           * <pre>
           * md5 of data
           * </pre>
           */
          public Builder setMd5(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
            md5_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional string md5 = 7;</code>
           *
           * <pre>
           * md5 of data
           * </pre>
           */
          public Builder clearMd5() {
            bitField0_ = (bitField0_ & ~0x00000040);
            md5_ = getDefaultInstance().getMd5();
            onChanged();
            return this;
          }
          /**
           * <code>optional string md5 = 7;</code>
           *
           * <pre>
           * md5 of data
           * </pre>
           */
          public Builder setMd5Bytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
            md5_ = value;
            onChanged();
            return this;
          }

          private java.lang.Object typeId_ = "";
          /**
           * <code>optional string typeId = 8;</code>
           *
           * <pre>
           * UDT specifics
           * </pre>
           */
          public boolean hasTypeId() {
            return ((bitField0_ & 0x00000080) == 0x00000080);
          }
          /**
           * <code>optional string typeId = 8;</code>
           *
           * <pre>
           * UDT specifics
           * </pre>
           */
          public java.lang.String getTypeId() {
            java.lang.Object ref = typeId_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              if (bs.isValidUtf8()) {
                typeId_ = s;
              }
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <code>optional string typeId = 8;</code>
           *
           * <pre>
           * UDT specifics
           * </pre>
           */
          public com.google.protobuf.ByteString
              getTypeIdBytes() {
            java.lang.Object ref = typeId_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              typeId_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <code>optional string typeId = 8;</code>
           *
           * <pre>
           * UDT specifics
           * </pre>
           */
          public Builder setTypeId(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
            typeId_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional string typeId = 8;</code>
           *
           * <pre>
           * UDT specifics
           * </pre>
           */
          public Builder clearTypeId() {
            bitField0_ = (bitField0_ & ~0x00000080);
            typeId_ = getDefaultInstance().getTypeId();
            onChanged();
            return this;
          }
          /**
           * <code>optional string typeId = 8;</code>
           *
           * <pre>
           * UDT specifics
           * </pre>
           */
          public Builder setTypeIdBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
            typeId_ = value;
            onChanged();
            return this;
          }

          private java.lang.Object description_ = "";
          /**
           * <code>optional string description = 9;</code>
           *
           * <pre>
           * Catchalls and future expansion
           * </pre>
           */
          public boolean hasDescription() {
            return ((bitField0_ & 0x00000100) == 0x00000100);
          }
          /**
           * <code>optional string description = 9;</code>
           *
           * <pre>
           * Catchalls and future expansion
           * </pre>
           */
          public java.lang.String getDescription() {
            java.lang.Object ref = description_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              if (bs.isValidUtf8()) {
                description_ = s;
              }
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <code>optional string description = 9;</code>
           *
           * <pre>
           * Catchalls and future expansion
           * </pre>
           */
          public com.google.protobuf.ByteString
              getDescriptionBytes() {
            java.lang.Object ref = description_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              description_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <code>optional string description = 9;</code>
           *
           * <pre>
           * Catchalls and future expansion
           * </pre>
           */
          public Builder setDescription(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
            description_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional string description = 9;</code>
           *
           * <pre>
           * Catchalls and future expansion
           * </pre>
           */
          public Builder clearDescription() {
            bitField0_ = (bitField0_ & ~0x00000100);
            description_ = getDefaultInstance().getDescription();
            onChanged();
            return this;
          }
          /**
           * <code>optional string description = 9;</code>
           *
           * <pre>
           * Catchalls and future expansion
           * </pre>
           */
          public Builder setDescriptionBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
            description_ = value;
            onChanged();
            return this;
          }

          private java.util.List<com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaField> members_ =
            java.util.Collections.emptyList();
          private void ensureMembersIsMutable() {
            if (!((bitField0_ & 0x00000200) == 0x00000200)) {
              members_ = new java.util.ArrayList<com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaField>(members_);
              bitField0_ |= 0x00000200;
             }
          }

          private com.google.protobuf.RepeatedFieldBuilder<
              com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaField, com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaField.Builder, com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaFieldOrBuilder> membersBuilder_;

          /**
           * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.MetaField members = 10;</code>
           */
          public java.util.List<com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaField> getMembersList() {
            if (membersBuilder_ == null) {
              return java.util.Collections.unmodifiableList(members_);
            } else {
              return membersBuilder_.getMessageList();
            }
          }
          /**
           * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.MetaField members = 10;</code>
           */
          public int getMembersCount() {
            if (membersBuilder_ == null) {
              return members_.size();
            } else {
              return membersBuilder_.getCount();
            }
          }
          /**
           * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.MetaField members = 10;</code>
           */
          public com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaField getMembers(int index) {
            if (membersBuilder_ == null) {
              return members_.get(index);
            } else {
              return membersBuilder_.getMessage(index);
            }
          }
          /**
           * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.MetaField members = 10;</code>
           */
          public Builder setMembers(
              int index, com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaField value) {
            if (membersBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureMembersIsMutable();
              members_.set(index, value);
              onChanged();
            } else {
              membersBuilder_.setMessage(index, value);
            }
            return this;
          }
          /**
           * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.MetaField members = 10;</code>
           */
          public Builder setMembers(
              int index, com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaField.Builder builderForValue) {
            if (membersBuilder_ == null) {
              ensureMembersIsMutable();
              members_.set(index, builderForValue.build());
              onChanged();
            } else {
              membersBuilder_.setMessage(index, builderForValue.build());
            }
            return this;
          }
          /**
           * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.MetaField members = 10;</code>
           */
          public Builder addMembers(com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaField value) {
            if (membersBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureMembersIsMutable();
              members_.add(value);
              onChanged();
            } else {
              membersBuilder_.addMessage(value);
            }
            return this;
          }
          /**
           * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.MetaField members = 10;</code>
           */
          public Builder addMembers(
              int index, com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaField value) {
            if (membersBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureMembersIsMutable();
              members_.add(index, value);
              onChanged();
            } else {
              membersBuilder_.addMessage(index, value);
            }
            return this;
          }
          /**
           * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.MetaField members = 10;</code>
           */
          public Builder addMembers(
              com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaField.Builder builderForValue) {
            if (membersBuilder_ == null) {
              ensureMembersIsMutable();
              members_.add(builderForValue.build());
              onChanged();
            } else {
              membersBuilder_.addMessage(builderForValue.build());
            }
            return this;
          }
          /**
           * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.MetaField members = 10;</code>
           */
          public Builder addMembers(
              int index, com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaField.Builder builderForValue) {
            if (membersBuilder_ == null) {
              ensureMembersIsMutable();
              members_.add(index, builderForValue.build());
              onChanged();
            } else {
              membersBuilder_.addMessage(index, builderForValue.build());
            }
            return this;
          }
          /**
           * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.MetaField members = 10;</code>
           */
          public Builder addAllMembers(
              java.lang.Iterable<? extends com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaField> values) {
            if (membersBuilder_ == null) {
              ensureMembersIsMutable();
              com.google.protobuf.AbstractMessageLite.Builder.addAll(
                  values, members_);
              onChanged();
            } else {
              membersBuilder_.addAllMessages(values);
            }
            return this;
          }
          /**
           * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.MetaField members = 10;</code>
           */
          public Builder clearMembers() {
            if (membersBuilder_ == null) {
              members_ = java.util.Collections.emptyList();
              bitField0_ = (bitField0_ & ~0x00000200);
              onChanged();
            } else {
              membersBuilder_.clear();
            }
            return this;
          }
          /**
           * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.MetaField members = 10;</code>
           */
          public Builder removeMembers(int index) {
            if (membersBuilder_ == null) {
              ensureMembersIsMutable();
              members_.remove(index);
              onChanged();
            } else {
              membersBuilder_.remove(index);
            }
            return this;
          }
          /**
           * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.MetaField members = 10;</code>
           */
          public com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaField.Builder getMembersBuilder(
              int index) {
            return getMembersFieldBuilder().getBuilder(index);
          }
          /**
           * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.MetaField members = 10;</code>
           */
          public com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaFieldOrBuilder getMembersOrBuilder(
              int index) {
            if (membersBuilder_ == null) {
              return members_.get(index);  } else {
              return membersBuilder_.getMessageOrBuilder(index);
            }
          }
          /**
           * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.MetaField members = 10;</code>
           */
          public java.util.List<? extends com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaFieldOrBuilder> 
               getMembersOrBuilderList() {
            if (membersBuilder_ != null) {
              return membersBuilder_.getMessageOrBuilderList();
            } else {
              return java.util.Collections.unmodifiableList(members_);
            }
          }
          /**
           * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.MetaField members = 10;</code>
           */
          public com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaField.Builder addMembersBuilder() {
            return getMembersFieldBuilder().addBuilder(
                com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaField.getDefaultInstance());
          }
          /**
           * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.MetaField members = 10;</code>
           */
          public com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaField.Builder addMembersBuilder(
              int index) {
            return getMembersFieldBuilder().addBuilder(
                index, com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaField.getDefaultInstance());
          }
          /**
           * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.MetaField members = 10;</code>
           */
          public java.util.List<com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaField.Builder> 
               getMembersBuilderList() {
            return getMembersFieldBuilder().getBuilderList();
          }
          private com.google.protobuf.RepeatedFieldBuilder<
              com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaField, com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaField.Builder, com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaFieldOrBuilder> 
              getMembersFieldBuilder() {
            if (membersBuilder_ == null) {
              membersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                  com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaField, com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaField.Builder, com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaFieldOrBuilder>(
                      members_,
                      ((bitField0_ & 0x00000200) == 0x00000200),
                      getParentForChildren(),
                      isClean());
              members_ = null;
            }
            return membersBuilder_;
          }

          // @@protoc_insertion_point(builder_scope:com.cirruslink.sparkplug.protobuf.Payload.Metric.MetaData)
        }

        static {
          defaultInstance = new MetaData(true);
          defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:com.cirruslink.sparkplug.protobuf.Payload.Metric.MetaData)
      }

      public interface MetaFieldOrBuilder extends
          // @@protoc_insertion_point(interface_extends:com.cirruslink.sparkplug.protobuf.Payload.Metric.MetaField)
          com.google.protobuf.GeneratedMessage.
              ExtendableMessageOrBuilder<MetaField> {

        /**
         * <code>optional string name = 1;</code>
         *
         * <pre>
         * Metric name - should only be included on birth
         * </pre>
         */
        boolean hasName();
        /**
         * <code>optional string name = 1;</code>
         *
         * <pre>
         * Metric name - should only be included on birth
         * </pre>
         */
        java.lang.String getName();
        /**
         * <code>optional string name = 1;</code>
         *
         * <pre>
         * Metric name - should only be included on birth
         * </pre>
         */
        com.google.protobuf.ByteString
            getNameBytes();

        /**
         * <code>optional .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataType datatype = 2;</code>
         *
         * <pre>
         * DataType of the metric/tag value
         * </pre>
         */
        boolean hasDatatype();
        /**
         * <code>optional .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataType datatype = 2;</code>
         *
         * <pre>
         * DataType of the metric/tag value
         * </pre>
         */
        com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataType getDatatype();

        /**
         * <code>optional uint32 int_value = 3;</code>
         *
         * <pre>
         * Int1, Int2, Int4
         * </pre>
         */
        boolean hasIntValue();
        /**
         * <code>optional uint32 int_value = 3;</code>
         *
         * <pre>
         * Int1, Int2, Int4
         * </pre>
         */
        int getIntValue();

        /**
         * <code>optional uint64 long_value = 4;</code>
         *
         * <pre>
         * Int8, DateTime
         * </pre>
         */
        boolean hasLongValue();
        /**
         * <code>optional uint64 long_value = 4;</code>
         *
         * <pre>
         * Int8, DateTime
         * </pre>
         */
        long getLongValue();

        /**
         * <code>optional float float_value = 5;</code>
         *
         * <pre>
         * Float4
         * </pre>
         */
        boolean hasFloatValue();
        /**
         * <code>optional float float_value = 5;</code>
         *
         * <pre>
         * Float4
         * </pre>
         */
        float getFloatValue();

        /**
         * <code>optional double double_value = 6;</code>
         *
         * <pre>
         * Float8
         * </pre>
         */
        boolean hasDoubleValue();
        /**
         * <code>optional double double_value = 6;</code>
         *
         * <pre>
         * Float8
         * </pre>
         */
        double getDoubleValue();

        /**
         * <code>optional bool boolean_value = 7;</code>
         *
         * <pre>
         * Boolean
         * </pre>
         */
        boolean hasBooleanValue();
        /**
         * <code>optional bool boolean_value = 7;</code>
         *
         * <pre>
         * Boolean
         * </pre>
         */
        boolean getBooleanValue();

        /**
         * <code>optional string string_value = 8;</code>
         *
         * <pre>
         * String, Text
         * </pre>
         */
        boolean hasStringValue();
        /**
         * <code>optional string string_value = 8;</code>
         *
         * <pre>
         * String, Text
         * </pre>
         */
        java.lang.String getStringValue();
        /**
         * <code>optional string string_value = 8;</code>
         *
         * <pre>
         * String, Text
         * </pre>
         */
        com.google.protobuf.ByteString
            getStringValueBytes();

        /**
         * <code>optional bytes bytes_value = 9;</code>
         *
         * <pre>
         * Bytes, File, Script
         * </pre>
         */
        boolean hasBytesValue();
        /**
         * <code>optional bytes bytes_value = 9;</code>
         *
         * <pre>
         * Bytes, File, Script
         * </pre>
         */
        com.google.protobuf.ByteString getBytesValue();

        /**
         * <code>optional .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet dataset_value = 10;</code>
         *
         * <pre>
         * DataSet
         * </pre>
         */
        boolean hasDatasetValue();
        /**
         * <code>optional .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet dataset_value = 10;</code>
         *
         * <pre>
         * DataSet
         * </pre>
         */
        com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet getDatasetValue();
        /**
         * <code>optional .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet dataset_value = 10;</code>
         *
         * <pre>
         * DataSet
         * </pre>
         */
        com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSetOrBuilder getDatasetValueOrBuilder();
      }
      /**
       * Protobuf type {@code com.cirruslink.sparkplug.protobuf.Payload.Metric.MetaField}
       */
      public static final class MetaField extends
          com.google.protobuf.GeneratedMessage.ExtendableMessage<
            MetaField> implements
          // @@protoc_insertion_point(message_implements:com.cirruslink.sparkplug.protobuf.Payload.Metric.MetaField)
          MetaFieldOrBuilder {
        // Use MetaField.newBuilder() to construct.
        private MetaField(com.google.protobuf.GeneratedMessage.ExtendableBuilder<com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaField, ?> builder) {
          super(builder);
          this.unknownFields = builder.getUnknownFields();
        }
        private MetaField(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

        private static final MetaField defaultInstance;
        public static MetaField getDefaultInstance() {
          return defaultInstance;
        }

        public MetaField getDefaultInstanceForType() {
          return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;
        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
            getUnknownFields() {
          return this.unknownFields;
        }
        private MetaField(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          initFields();
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(input, unknownFields,
                                         extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  com.google.protobuf.ByteString bs = input.readBytes();
                  bitField0_ |= 0x00000001;
                  name_ = bs;
                  break;
                }
                case 16: {
                  int rawValue = input.readEnum();
                  com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataType value = com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataType.valueOf(rawValue);
                  if (value == null) {
                    unknownFields.mergeVarintField(2, rawValue);
                  } else {
                    bitField0_ |= 0x00000002;
                    datatype_ = value;
                  }
                  break;
                }
                case 24: {
                  bitField0_ |= 0x00000004;
                  intValue_ = input.readUInt32();
                  break;
                }
                case 32: {
                  bitField0_ |= 0x00000008;
                  longValue_ = input.readUInt64();
                  break;
                }
                case 45: {
                  bitField0_ |= 0x00000010;
                  floatValue_ = input.readFloat();
                  break;
                }
                case 49: {
                  bitField0_ |= 0x00000020;
                  doubleValue_ = input.readDouble();
                  break;
                }
                case 56: {
                  bitField0_ |= 0x00000040;
                  booleanValue_ = input.readBool();
                  break;
                }
                case 66: {
                  com.google.protobuf.ByteString bs = input.readBytes();
                  bitField0_ |= 0x00000080;
                  stringValue_ = bs;
                  break;
                }
                case 74: {
                  bitField0_ |= 0x00000100;
                  bytesValue_ = input.readBytes();
                  break;
                }
                case 82: {
                  com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000200) == 0x00000200)) {
                    subBuilder = datasetValue_.toBuilder();
                  }
                  datasetValue_ = input.readMessage(com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.PARSER, extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(datasetValue_);
                    datasetValue_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000200;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.cirruslink.sparkplug.protobuf.SparkplugBProto.internal_static_com_cirruslink_sparkplug_protobuf_Payload_Metric_MetaField_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.cirruslink.sparkplug.protobuf.SparkplugBProto.internal_static_com_cirruslink_sparkplug_protobuf_Payload_Metric_MetaField_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaField.class, com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaField.Builder.class);
        }

        public static com.google.protobuf.Parser<MetaField> PARSER =
            new com.google.protobuf.AbstractParser<MetaField>() {
          public MetaField parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new MetaField(input, extensionRegistry);
          }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<MetaField> getParserForType() {
          return PARSER;
        }

        private int bitField0_;
        public static final int NAME_FIELD_NUMBER = 1;
        private java.lang.Object name_;
        /**
         * <code>optional string name = 1;</code>
         *
         * <pre>
         * Metric name - should only be included on birth
         * </pre>
         */
        public boolean hasName() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional string name = 1;</code>
         *
         * <pre>
         * Metric name - should only be included on birth
         * </pre>
         */
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              name_ = s;
            }
            return s;
          }
        }
        /**
         * <code>optional string name = 1;</code>
         *
         * <pre>
         * Metric name - should only be included on birth
         * </pre>
         */
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int DATATYPE_FIELD_NUMBER = 2;
        private com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataType datatype_;
        /**
         * <code>optional .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataType datatype = 2;</code>
         *
         * <pre>
         * DataType of the metric/tag value
         * </pre>
         */
        public boolean hasDatatype() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataType datatype = 2;</code>
         *
         * <pre>
         * DataType of the metric/tag value
         * </pre>
         */
        public com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataType getDatatype() {
          return datatype_;
        }

        public static final int INT_VALUE_FIELD_NUMBER = 3;
        private int intValue_;
        /**
         * <code>optional uint32 int_value = 3;</code>
         *
         * <pre>
         * Int1, Int2, Int4
         * </pre>
         */
        public boolean hasIntValue() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional uint32 int_value = 3;</code>
         *
         * <pre>
         * Int1, Int2, Int4
         * </pre>
         */
        public int getIntValue() {
          return intValue_;
        }

        public static final int LONG_VALUE_FIELD_NUMBER = 4;
        private long longValue_;
        /**
         * <code>optional uint64 long_value = 4;</code>
         *
         * <pre>
         * Int8, DateTime
         * </pre>
         */
        public boolean hasLongValue() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional uint64 long_value = 4;</code>
         *
         * <pre>
         * Int8, DateTime
         * </pre>
         */
        public long getLongValue() {
          return longValue_;
        }

        public static final int FLOAT_VALUE_FIELD_NUMBER = 5;
        private float floatValue_;
        /**
         * <code>optional float float_value = 5;</code>
         *
         * <pre>
         * Float4
         * </pre>
         */
        public boolean hasFloatValue() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional float float_value = 5;</code>
         *
         * <pre>
         * Float4
         * </pre>
         */
        public float getFloatValue() {
          return floatValue_;
        }

        public static final int DOUBLE_VALUE_FIELD_NUMBER = 6;
        private double doubleValue_;
        /**
         * <code>optional double double_value = 6;</code>
         *
         * <pre>
         * Float8
         * </pre>
         */
        public boolean hasDoubleValue() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>optional double double_value = 6;</code>
         *
         * <pre>
         * Float8
         * </pre>
         */
        public double getDoubleValue() {
          return doubleValue_;
        }

        public static final int BOOLEAN_VALUE_FIELD_NUMBER = 7;
        private boolean booleanValue_;
        /**
         * <code>optional bool boolean_value = 7;</code>
         *
         * <pre>
         * Boolean
         * </pre>
         */
        public boolean hasBooleanValue() {
          return ((bitField0_ & 0x00000040) == 0x00000040);
        }
        /**
         * <code>optional bool boolean_value = 7;</code>
         *
         * <pre>
         * Boolean
         * </pre>
         */
        public boolean getBooleanValue() {
          return booleanValue_;
        }

        public static final int STRING_VALUE_FIELD_NUMBER = 8;
        private java.lang.Object stringValue_;
        /**
         * <code>optional string string_value = 8;</code>
         *
         * <pre>
         * String, Text
         * </pre>
         */
        public boolean hasStringValue() {
          return ((bitField0_ & 0x00000080) == 0x00000080);
        }
        /**
         * <code>optional string string_value = 8;</code>
         *
         * <pre>
         * String, Text
         * </pre>
         */
        public java.lang.String getStringValue() {
          java.lang.Object ref = stringValue_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              stringValue_ = s;
            }
            return s;
          }
        }
        /**
         * <code>optional string string_value = 8;</code>
         *
         * <pre>
         * String, Text
         * </pre>
         */
        public com.google.protobuf.ByteString
            getStringValueBytes() {
          java.lang.Object ref = stringValue_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            stringValue_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int BYTES_VALUE_FIELD_NUMBER = 9;
        private com.google.protobuf.ByteString bytesValue_;
        /**
         * <code>optional bytes bytes_value = 9;</code>
         *
         * <pre>
         * Bytes, File, Script
         * </pre>
         */
        public boolean hasBytesValue() {
          return ((bitField0_ & 0x00000100) == 0x00000100);
        }
        /**
         * <code>optional bytes bytes_value = 9;</code>
         *
         * <pre>
         * Bytes, File, Script
         * </pre>
         */
        public com.google.protobuf.ByteString getBytesValue() {
          return bytesValue_;
        }

        public static final int DATASET_VALUE_FIELD_NUMBER = 10;
        private com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet datasetValue_;
        /**
         * <code>optional .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet dataset_value = 10;</code>
         *
         * <pre>
         * DataSet
         * </pre>
         */
        public boolean hasDatasetValue() {
          return ((bitField0_ & 0x00000200) == 0x00000200);
        }
        /**
         * <code>optional .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet dataset_value = 10;</code>
         *
         * <pre>
         * DataSet
         * </pre>
         */
        public com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet getDatasetValue() {
          return datasetValue_;
        }
        /**
         * <code>optional .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet dataset_value = 10;</code>
         *
         * <pre>
         * DataSet
         * </pre>
         */
        public com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSetOrBuilder getDatasetValueOrBuilder() {
          return datasetValue_;
        }

        private void initFields() {
          name_ = "";
          datatype_ = com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataType.Unknown;
          intValue_ = 0;
          longValue_ = 0L;
          floatValue_ = 0F;
          doubleValue_ = 0D;
          booleanValue_ = false;
          stringValue_ = "";
          bytesValue_ = com.google.protobuf.ByteString.EMPTY;
          datasetValue_ = com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.getDefaultInstance();
        }
        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          if (hasDatasetValue()) {
            if (!getDatasetValue().isInitialized()) {
              memoizedIsInitialized = 0;
              return false;
            }
          }
          if (!extensionsAreInitialized()) {
            memoizedIsInitialized = 0;
            return false;
          }
          memoizedIsInitialized = 1;
          return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          com.google.protobuf.GeneratedMessage
            .ExtendableMessage<com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaField>.ExtensionWriter extensionWriter =
              newExtensionWriter();
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            output.writeBytes(1, getNameBytes());
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            output.writeEnum(2, datatype_.getNumber());
          }
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            output.writeUInt32(3, intValue_);
          }
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            output.writeUInt64(4, longValue_);
          }
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            output.writeFloat(5, floatValue_);
          }
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            output.writeDouble(6, doubleValue_);
          }
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            output.writeBool(7, booleanValue_);
          }
          if (((bitField0_ & 0x00000080) == 0x00000080)) {
            output.writeBytes(8, getStringValueBytes());
          }
          if (((bitField0_ & 0x00000100) == 0x00000100)) {
            output.writeBytes(9, bytesValue_);
          }
          if (((bitField0_ & 0x00000200) == 0x00000200)) {
            output.writeMessage(10, datasetValue_);
          }
          extensionWriter.writeUntil(536870912, output);
          getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBytesSize(1, getNameBytes());
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            size += com.google.protobuf.CodedOutputStream
              .computeEnumSize(2, datatype_.getNumber());
          }
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(3, intValue_);
          }
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt64Size(4, longValue_);
          }
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(5, floatValue_);
          }
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            size += com.google.protobuf.CodedOutputStream
              .computeDoubleSize(6, doubleValue_);
          }
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(7, booleanValue_);
          }
          if (((bitField0_ & 0x00000080) == 0x00000080)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBytesSize(8, getStringValueBytes());
          }
          if (((bitField0_ & 0x00000100) == 0x00000100)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBytesSize(9, bytesValue_);
          }
          if (((bitField0_ & 0x00000200) == 0x00000200)) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(10, datasetValue_);
          }
          size += extensionsSerializedSize();
          size += getUnknownFields().getSerializedSize();
          memoizedSerializedSize = size;
          return size;
        }

        private static final long serialVersionUID = 0L;
        @java.lang.Override
        protected java.lang.Object writeReplace()
            throws java.io.ObjectStreamException {
          return super.writeReplace();
        }

        public static com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaField parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaField parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaField parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaField parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaField parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaField parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }
        public static com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaField parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input);
        }
        public static com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaField parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        public static com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaField parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaField parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaField prototype) {
          return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code com.cirruslink.sparkplug.protobuf.Payload.Metric.MetaField}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessage.ExtendableBuilder<
              com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaField, Builder> implements
            // @@protoc_insertion_point(builder_implements:com.cirruslink.sparkplug.protobuf.Payload.Metric.MetaField)
            com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaFieldOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return com.cirruslink.sparkplug.protobuf.SparkplugBProto.internal_static_com_cirruslink_sparkplug_protobuf_Payload_Metric_MetaField_descriptor;
          }

          protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return com.cirruslink.sparkplug.protobuf.SparkplugBProto.internal_static_com_cirruslink_sparkplug_protobuf_Payload_Metric_MetaField_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaField.class, com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaField.Builder.class);
          }

          // Construct using com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaField.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
              getDatasetValueFieldBuilder();
            }
          }
          private static Builder create() {
            return new Builder();
          }

          public Builder clear() {
            super.clear();
            name_ = "";
            bitField0_ = (bitField0_ & ~0x00000001);
            datatype_ = com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataType.Unknown;
            bitField0_ = (bitField0_ & ~0x00000002);
            intValue_ = 0;
            bitField0_ = (bitField0_ & ~0x00000004);
            longValue_ = 0L;
            bitField0_ = (bitField0_ & ~0x00000008);
            floatValue_ = 0F;
            bitField0_ = (bitField0_ & ~0x00000010);
            doubleValue_ = 0D;
            bitField0_ = (bitField0_ & ~0x00000020);
            booleanValue_ = false;
            bitField0_ = (bitField0_ & ~0x00000040);
            stringValue_ = "";
            bitField0_ = (bitField0_ & ~0x00000080);
            bytesValue_ = com.google.protobuf.ByteString.EMPTY;
            bitField0_ = (bitField0_ & ~0x00000100);
            if (datasetValueBuilder_ == null) {
              datasetValue_ = com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.getDefaultInstance();
            } else {
              datasetValueBuilder_.clear();
            }
            bitField0_ = (bitField0_ & ~0x00000200);
            return this;
          }

          public Builder clone() {
            return create().mergeFrom(buildPartial());
          }

          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return com.cirruslink.sparkplug.protobuf.SparkplugBProto.internal_static_com_cirruslink_sparkplug_protobuf_Payload_Metric_MetaField_descriptor;
          }

          public com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaField getDefaultInstanceForType() {
            return com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaField.getDefaultInstance();
          }

          public com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaField build() {
            com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaField result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          public com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaField buildPartial() {
            com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaField result = new com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaField(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
              to_bitField0_ |= 0x00000001;
            }
            result.name_ = name_;
            if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
              to_bitField0_ |= 0x00000002;
            }
            result.datatype_ = datatype_;
            if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
              to_bitField0_ |= 0x00000004;
            }
            result.intValue_ = intValue_;
            if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
              to_bitField0_ |= 0x00000008;
            }
            result.longValue_ = longValue_;
            if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
              to_bitField0_ |= 0x00000010;
            }
            result.floatValue_ = floatValue_;
            if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
              to_bitField0_ |= 0x00000020;
            }
            result.doubleValue_ = doubleValue_;
            if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
              to_bitField0_ |= 0x00000040;
            }
            result.booleanValue_ = booleanValue_;
            if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
              to_bitField0_ |= 0x00000080;
            }
            result.stringValue_ = stringValue_;
            if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
              to_bitField0_ |= 0x00000100;
            }
            result.bytesValue_ = bytesValue_;
            if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
              to_bitField0_ |= 0x00000200;
            }
            if (datasetValueBuilder_ == null) {
              result.datasetValue_ = datasetValue_;
            } else {
              result.datasetValue_ = datasetValueBuilder_.build();
            }
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaField) {
              return mergeFrom((com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaField)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaField other) {
            if (other == com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaField.getDefaultInstance()) return this;
            if (other.hasName()) {
              bitField0_ |= 0x00000001;
              name_ = other.name_;
              onChanged();
            }
            if (other.hasDatatype()) {
              setDatatype(other.getDatatype());
            }
            if (other.hasIntValue()) {
              setIntValue(other.getIntValue());
            }
            if (other.hasLongValue()) {
              setLongValue(other.getLongValue());
            }
            if (other.hasFloatValue()) {
              setFloatValue(other.getFloatValue());
            }
            if (other.hasDoubleValue()) {
              setDoubleValue(other.getDoubleValue());
            }
            if (other.hasBooleanValue()) {
              setBooleanValue(other.getBooleanValue());
            }
            if (other.hasStringValue()) {
              bitField0_ |= 0x00000080;
              stringValue_ = other.stringValue_;
              onChanged();
            }
            if (other.hasBytesValue()) {
              setBytesValue(other.getBytesValue());
            }
            if (other.hasDatasetValue()) {
              mergeDatasetValue(other.getDatasetValue());
            }
            this.mergeExtensionFields(other);
            this.mergeUnknownFields(other.getUnknownFields());
            return this;
          }

          public final boolean isInitialized() {
            if (hasDatasetValue()) {
              if (!getDatasetValue().isInitialized()) {
                
                return false;
              }
            }
            if (!extensionsAreInitialized()) {
              
              return false;
            }
            return true;
          }

          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaField parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaField) e.getUnfinishedMessage();
              throw e;
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          private java.lang.Object name_ = "";
          /**
           * <code>optional string name = 1;</code>
           *
           * <pre>
           * Metric name - should only be included on birth
           * </pre>
           */
          public boolean hasName() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
          }
          /**
           * <code>optional string name = 1;</code>
           *
           * <pre>
           * Metric name - should only be included on birth
           * </pre>
           */
          public java.lang.String getName() {
            java.lang.Object ref = name_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              if (bs.isValidUtf8()) {
                name_ = s;
              }
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <code>optional string name = 1;</code>
           *
           * <pre>
           * Metric name - should only be included on birth
           * </pre>
           */
          public com.google.protobuf.ByteString
              getNameBytes() {
            java.lang.Object ref = name_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              name_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <code>optional string name = 1;</code>
           *
           * <pre>
           * Metric name - should only be included on birth
           * </pre>
           */
          public Builder setName(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
            name_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional string name = 1;</code>
           *
           * <pre>
           * Metric name - should only be included on birth
           * </pre>
           */
          public Builder clearName() {
            bitField0_ = (bitField0_ & ~0x00000001);
            name_ = getDefaultInstance().getName();
            onChanged();
            return this;
          }
          /**
           * <code>optional string name = 1;</code>
           *
           * <pre>
           * Metric name - should only be included on birth
           * </pre>
           */
          public Builder setNameBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
            name_ = value;
            onChanged();
            return this;
          }

          private com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataType datatype_ = com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataType.Unknown;
          /**
           * <code>optional .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataType datatype = 2;</code>
           *
           * <pre>
           * DataType of the metric/tag value
           * </pre>
           */
          public boolean hasDatatype() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
          }
          /**
           * <code>optional .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataType datatype = 2;</code>
           *
           * <pre>
           * DataType of the metric/tag value
           * </pre>
           */
          public com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataType getDatatype() {
            return datatype_;
          }
          /**
           * <code>optional .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataType datatype = 2;</code>
           *
           * <pre>
           * DataType of the metric/tag value
           * </pre>
           */
          public Builder setDatatype(com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataType value) {
            if (value == null) {
              throw new NullPointerException();
            }
            bitField0_ |= 0x00000002;
            datatype_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataType datatype = 2;</code>
           *
           * <pre>
           * DataType of the metric/tag value
           * </pre>
           */
          public Builder clearDatatype() {
            bitField0_ = (bitField0_ & ~0x00000002);
            datatype_ = com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataType.Unknown;
            onChanged();
            return this;
          }

          private int intValue_ ;
          /**
           * <code>optional uint32 int_value = 3;</code>
           *
           * <pre>
           * Int1, Int2, Int4
           * </pre>
           */
          public boolean hasIntValue() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
          }
          /**
           * <code>optional uint32 int_value = 3;</code>
           *
           * <pre>
           * Int1, Int2, Int4
           * </pre>
           */
          public int getIntValue() {
            return intValue_;
          }
          /**
           * <code>optional uint32 int_value = 3;</code>
           *
           * <pre>
           * Int1, Int2, Int4
           * </pre>
           */
          public Builder setIntValue(int value) {
            bitField0_ |= 0x00000004;
            intValue_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint32 int_value = 3;</code>
           *
           * <pre>
           * Int1, Int2, Int4
           * </pre>
           */
          public Builder clearIntValue() {
            bitField0_ = (bitField0_ & ~0x00000004);
            intValue_ = 0;
            onChanged();
            return this;
          }

          private long longValue_ ;
          /**
           * <code>optional uint64 long_value = 4;</code>
           *
           * <pre>
           * Int8, DateTime
           * </pre>
           */
          public boolean hasLongValue() {
            return ((bitField0_ & 0x00000008) == 0x00000008);
          }
          /**
           * <code>optional uint64 long_value = 4;</code>
           *
           * <pre>
           * Int8, DateTime
           * </pre>
           */
          public long getLongValue() {
            return longValue_;
          }
          /**
           * <code>optional uint64 long_value = 4;</code>
           *
           * <pre>
           * Int8, DateTime
           * </pre>
           */
          public Builder setLongValue(long value) {
            bitField0_ |= 0x00000008;
            longValue_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint64 long_value = 4;</code>
           *
           * <pre>
           * Int8, DateTime
           * </pre>
           */
          public Builder clearLongValue() {
            bitField0_ = (bitField0_ & ~0x00000008);
            longValue_ = 0L;
            onChanged();
            return this;
          }

          private float floatValue_ ;
          /**
           * <code>optional float float_value = 5;</code>
           *
           * <pre>
           * Float4
           * </pre>
           */
          public boolean hasFloatValue() {
            return ((bitField0_ & 0x00000010) == 0x00000010);
          }
          /**
           * <code>optional float float_value = 5;</code>
           *
           * <pre>
           * Float4
           * </pre>
           */
          public float getFloatValue() {
            return floatValue_;
          }
          /**
           * <code>optional float float_value = 5;</code>
           *
           * <pre>
           * Float4
           * </pre>
           */
          public Builder setFloatValue(float value) {
            bitField0_ |= 0x00000010;
            floatValue_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional float float_value = 5;</code>
           *
           * <pre>
           * Float4
           * </pre>
           */
          public Builder clearFloatValue() {
            bitField0_ = (bitField0_ & ~0x00000010);
            floatValue_ = 0F;
            onChanged();
            return this;
          }

          private double doubleValue_ ;
          /**
           * <code>optional double double_value = 6;</code>
           *
           * <pre>
           * Float8
           * </pre>
           */
          public boolean hasDoubleValue() {
            return ((bitField0_ & 0x00000020) == 0x00000020);
          }
          /**
           * <code>optional double double_value = 6;</code>
           *
           * <pre>
           * Float8
           * </pre>
           */
          public double getDoubleValue() {
            return doubleValue_;
          }
          /**
           * <code>optional double double_value = 6;</code>
           *
           * <pre>
           * Float8
           * </pre>
           */
          public Builder setDoubleValue(double value) {
            bitField0_ |= 0x00000020;
            doubleValue_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional double double_value = 6;</code>
           *
           * <pre>
           * Float8
           * </pre>
           */
          public Builder clearDoubleValue() {
            bitField0_ = (bitField0_ & ~0x00000020);
            doubleValue_ = 0D;
            onChanged();
            return this;
          }

          private boolean booleanValue_ ;
          /**
           * <code>optional bool boolean_value = 7;</code>
           *
           * <pre>
           * Boolean
           * </pre>
           */
          public boolean hasBooleanValue() {
            return ((bitField0_ & 0x00000040) == 0x00000040);
          }
          /**
           * <code>optional bool boolean_value = 7;</code>
           *
           * <pre>
           * Boolean
           * </pre>
           */
          public boolean getBooleanValue() {
            return booleanValue_;
          }
          /**
           * <code>optional bool boolean_value = 7;</code>
           *
           * <pre>
           * Boolean
           * </pre>
           */
          public Builder setBooleanValue(boolean value) {
            bitField0_ |= 0x00000040;
            booleanValue_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional bool boolean_value = 7;</code>
           *
           * <pre>
           * Boolean
           * </pre>
           */
          public Builder clearBooleanValue() {
            bitField0_ = (bitField0_ & ~0x00000040);
            booleanValue_ = false;
            onChanged();
            return this;
          }

          private java.lang.Object stringValue_ = "";
          /**
           * <code>optional string string_value = 8;</code>
           *
           * <pre>
           * String, Text
           * </pre>
           */
          public boolean hasStringValue() {
            return ((bitField0_ & 0x00000080) == 0x00000080);
          }
          /**
           * <code>optional string string_value = 8;</code>
           *
           * <pre>
           * String, Text
           * </pre>
           */
          public java.lang.String getStringValue() {
            java.lang.Object ref = stringValue_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              if (bs.isValidUtf8()) {
                stringValue_ = s;
              }
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <code>optional string string_value = 8;</code>
           *
           * <pre>
           * String, Text
           * </pre>
           */
          public com.google.protobuf.ByteString
              getStringValueBytes() {
            java.lang.Object ref = stringValue_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              stringValue_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <code>optional string string_value = 8;</code>
           *
           * <pre>
           * String, Text
           * </pre>
           */
          public Builder setStringValue(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
            stringValue_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional string string_value = 8;</code>
           *
           * <pre>
           * String, Text
           * </pre>
           */
          public Builder clearStringValue() {
            bitField0_ = (bitField0_ & ~0x00000080);
            stringValue_ = getDefaultInstance().getStringValue();
            onChanged();
            return this;
          }
          /**
           * <code>optional string string_value = 8;</code>
           *
           * <pre>
           * String, Text
           * </pre>
           */
          public Builder setStringValueBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
            stringValue_ = value;
            onChanged();
            return this;
          }

          private com.google.protobuf.ByteString bytesValue_ = com.google.protobuf.ByteString.EMPTY;
          /**
           * <code>optional bytes bytes_value = 9;</code>
           *
           * <pre>
           * Bytes, File, Script
           * </pre>
           */
          public boolean hasBytesValue() {
            return ((bitField0_ & 0x00000100) == 0x00000100);
          }
          /**
           * <code>optional bytes bytes_value = 9;</code>
           *
           * <pre>
           * Bytes, File, Script
           * </pre>
           */
          public com.google.protobuf.ByteString getBytesValue() {
            return bytesValue_;
          }
          /**
           * <code>optional bytes bytes_value = 9;</code>
           *
           * <pre>
           * Bytes, File, Script
           * </pre>
           */
          public Builder setBytesValue(com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
            bytesValue_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional bytes bytes_value = 9;</code>
           *
           * <pre>
           * Bytes, File, Script
           * </pre>
           */
          public Builder clearBytesValue() {
            bitField0_ = (bitField0_ & ~0x00000100);
            bytesValue_ = getDefaultInstance().getBytesValue();
            onChanged();
            return this;
          }

          private com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet datasetValue_ = com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.getDefaultInstance();
          private com.google.protobuf.SingleFieldBuilder<
              com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet, com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Builder, com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSetOrBuilder> datasetValueBuilder_;
          /**
           * <code>optional .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet dataset_value = 10;</code>
           *
           * <pre>
           * DataSet
           * </pre>
           */
          public boolean hasDatasetValue() {
            return ((bitField0_ & 0x00000200) == 0x00000200);
          }
          /**
           * <code>optional .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet dataset_value = 10;</code>
           *
           * <pre>
           * DataSet
           * </pre>
           */
          public com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet getDatasetValue() {
            if (datasetValueBuilder_ == null) {
              return datasetValue_;
            } else {
              return datasetValueBuilder_.getMessage();
            }
          }
          /**
           * <code>optional .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet dataset_value = 10;</code>
           *
           * <pre>
           * DataSet
           * </pre>
           */
          public Builder setDatasetValue(com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet value) {
            if (datasetValueBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              datasetValue_ = value;
              onChanged();
            } else {
              datasetValueBuilder_.setMessage(value);
            }
            bitField0_ |= 0x00000200;
            return this;
          }
          /**
           * <code>optional .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet dataset_value = 10;</code>
           *
           * <pre>
           * DataSet
           * </pre>
           */
          public Builder setDatasetValue(
              com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Builder builderForValue) {
            if (datasetValueBuilder_ == null) {
              datasetValue_ = builderForValue.build();
              onChanged();
            } else {
              datasetValueBuilder_.setMessage(builderForValue.build());
            }
            bitField0_ |= 0x00000200;
            return this;
          }
          /**
           * <code>optional .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet dataset_value = 10;</code>
           *
           * <pre>
           * DataSet
           * </pre>
           */
          public Builder mergeDatasetValue(com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet value) {
            if (datasetValueBuilder_ == null) {
              if (((bitField0_ & 0x00000200) == 0x00000200) &&
                  datasetValue_ != com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.getDefaultInstance()) {
                datasetValue_ =
                  com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.newBuilder(datasetValue_).mergeFrom(value).buildPartial();
              } else {
                datasetValue_ = value;
              }
              onChanged();
            } else {
              datasetValueBuilder_.mergeFrom(value);
            }
            bitField0_ |= 0x00000200;
            return this;
          }
          /**
           * <code>optional .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet dataset_value = 10;</code>
           *
           * <pre>
           * DataSet
           * </pre>
           */
          public Builder clearDatasetValue() {
            if (datasetValueBuilder_ == null) {
              datasetValue_ = com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.getDefaultInstance();
              onChanged();
            } else {
              datasetValueBuilder_.clear();
            }
            bitField0_ = (bitField0_ & ~0x00000200);
            return this;
          }
          /**
           * <code>optional .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet dataset_value = 10;</code>
           *
           * <pre>
           * DataSet
           * </pre>
           */
          public com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Builder getDatasetValueBuilder() {
            bitField0_ |= 0x00000200;
            onChanged();
            return getDatasetValueFieldBuilder().getBuilder();
          }
          /**
           * <code>optional .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet dataset_value = 10;</code>
           *
           * <pre>
           * DataSet
           * </pre>
           */
          public com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSetOrBuilder getDatasetValueOrBuilder() {
            if (datasetValueBuilder_ != null) {
              return datasetValueBuilder_.getMessageOrBuilder();
            } else {
              return datasetValue_;
            }
          }
          /**
           * <code>optional .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet dataset_value = 10;</code>
           *
           * <pre>
           * DataSet
           * </pre>
           */
          private com.google.protobuf.SingleFieldBuilder<
              com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet, com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Builder, com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSetOrBuilder> 
              getDatasetValueFieldBuilder() {
            if (datasetValueBuilder_ == null) {
              datasetValueBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                  com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet, com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Builder, com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSetOrBuilder>(
                      getDatasetValue(),
                      getParentForChildren(),
                      isClean());
              datasetValue_ = null;
            }
            return datasetValueBuilder_;
          }

          // @@protoc_insertion_point(builder_scope:com.cirruslink.sparkplug.protobuf.Payload.Metric.MetaField)
        }

        static {
          defaultInstance = new MetaField(true);
          defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:com.cirruslink.sparkplug.protobuf.Payload.Metric.MetaField)
      }

      public interface DataSetOrBuilder extends
          // @@protoc_insertion_point(interface_extends:com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet)
          com.google.protobuf.GeneratedMessage.
              ExtendableMessageOrBuilder<DataSet> {

        /**
         * <code>optional uint64 num_of_columns = 1;</code>
         */
        boolean hasNumOfColumns();
        /**
         * <code>optional uint64 num_of_columns = 1;</code>
         */
        long getNumOfColumns();

        /**
         * <code>repeated string columns = 2;</code>
         */
        com.google.protobuf.ProtocolStringList
            getColumnsList();
        /**
         * <code>repeated string columns = 2;</code>
         */
        int getColumnsCount();
        /**
         * <code>repeated string columns = 2;</code>
         */
        java.lang.String getColumns(int index);
        /**
         * <code>repeated string columns = 2;</code>
         */
        com.google.protobuf.ByteString
            getColumnsBytes(int index);

        /**
         * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet.DataType types = 3;</code>
         */
        java.util.List<com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.DataType> getTypesList();
        /**
         * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet.DataType types = 3;</code>
         */
        int getTypesCount();
        /**
         * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet.DataType types = 3;</code>
         */
        com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.DataType getTypes(int index);

        /**
         * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet.Row rows = 4;</code>
         */
        java.util.List<com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Row> 
            getRowsList();
        /**
         * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet.Row rows = 4;</code>
         */
        com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Row getRows(int index);
        /**
         * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet.Row rows = 4;</code>
         */
        int getRowsCount();
        /**
         * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet.Row rows = 4;</code>
         */
        java.util.List<? extends com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.RowOrBuilder> 
            getRowsOrBuilderList();
        /**
         * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet.Row rows = 4;</code>
         */
        com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.RowOrBuilder getRowsOrBuilder(
            int index);
      }
      /**
       * Protobuf type {@code com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet}
       */
      public static final class DataSet extends
          com.google.protobuf.GeneratedMessage.ExtendableMessage<
            DataSet> implements
          // @@protoc_insertion_point(message_implements:com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet)
          DataSetOrBuilder {
        // Use DataSet.newBuilder() to construct.
        private DataSet(com.google.protobuf.GeneratedMessage.ExtendableBuilder<com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet, ?> builder) {
          super(builder);
          this.unknownFields = builder.getUnknownFields();
        }
        private DataSet(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

        private static final DataSet defaultInstance;
        public static DataSet getDefaultInstance() {
          return defaultInstance;
        }

        public DataSet getDefaultInstanceForType() {
          return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;
        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
            getUnknownFields() {
          return this.unknownFields;
        }
        private DataSet(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          initFields();
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(input, unknownFields,
                                         extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  numOfColumns_ = input.readUInt64();
                  break;
                }
                case 18: {
                  com.google.protobuf.ByteString bs = input.readBytes();
                  if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                    columns_ = new com.google.protobuf.LazyStringArrayList();
                    mutable_bitField0_ |= 0x00000002;
                  }
                  columns_.add(bs);
                  break;
                }
                case 24: {
                  int rawValue = input.readEnum();
                  com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.DataType value = com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.DataType.valueOf(rawValue);
                  if (value == null) {
                    unknownFields.mergeVarintField(3, rawValue);
                    } else {
                    if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                      types_ = new java.util.ArrayList<com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.DataType>();
                      mutable_bitField0_ |= 0x00000004;
                    }
                    types_.add(value);
                  }
                  break;
                }
                case 26: {
                  int length = input.readRawVarint32();
                  int oldLimit = input.pushLimit(length);
                  while(input.getBytesUntilLimit() > 0) {
                    int rawValue = input.readEnum();
                    com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.DataType value = com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.DataType.valueOf(rawValue);
                    if (value == null) {
                      unknownFields.mergeVarintField(3, rawValue);
                      } else {
                      if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                        types_ = new java.util.ArrayList<com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.DataType>();
                        mutable_bitField0_ |= 0x00000004;
                      }
                      types_.add(value);
                    }
                  }
                  input.popLimit(oldLimit);
                  break;
                }
                case 34: {
                  if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                    rows_ = new java.util.ArrayList<com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Row>();
                    mutable_bitField0_ |= 0x00000008;
                  }
                  rows_.add(input.readMessage(com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Row.PARSER, extensionRegistry));
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this);
          } finally {
            if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
              columns_ = columns_.getUnmodifiableView();
            }
            if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
              types_ = java.util.Collections.unmodifiableList(types_);
            }
            if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
              rows_ = java.util.Collections.unmodifiableList(rows_);
            }
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.cirruslink.sparkplug.protobuf.SparkplugBProto.internal_static_com_cirruslink_sparkplug_protobuf_Payload_Metric_DataSet_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.cirruslink.sparkplug.protobuf.SparkplugBProto.internal_static_com_cirruslink_sparkplug_protobuf_Payload_Metric_DataSet_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.class, com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Builder.class);
        }

        public static com.google.protobuf.Parser<DataSet> PARSER =
            new com.google.protobuf.AbstractParser<DataSet>() {
          public DataSet parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new DataSet(input, extensionRegistry);
          }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<DataSet> getParserForType() {
          return PARSER;
        }

        /**
         * Protobuf enum {@code com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet.DataType}
         */
        public enum DataType
            implements com.google.protobuf.ProtocolMessageEnum {
          /**
           * <code>Unknown = 0;</code>
           */
          Unknown(0, 0),
          /**
           * <code>Int1 = 1;</code>
           */
          Int1(1, 1),
          /**
           * <code>Int2 = 2;</code>
           */
          Int2(2, 2),
          /**
           * <code>Int4 = 3;</code>
           */
          Int4(3, 3),
          /**
           * <code>Int8 = 4;</code>
           */
          Int8(4, 4),
          /**
           * <code>Float4 = 5;</code>
           */
          Float4(5, 5),
          /**
           * <code>Float8 = 6;</code>
           */
          Float8(6, 6),
          /**
           * <code>Boolean = 7;</code>
           */
          Boolean(7, 7),
          /**
           * <code>String = 8;</code>
           */
          String(8, 8),
          /**
           * <code>DateTime = 9;</code>
           */
          DateTime(9, 9),
          /**
           * <code>Text = 10;</code>
           */
          Text(10, 10),
          /**
           * <code>Null = 11;</code>
           */
          Null(11, 11),
          ;

          /**
           * <code>Unknown = 0;</code>
           */
          public static final int Unknown_VALUE = 0;
          /**
           * <code>Int1 = 1;</code>
           */
          public static final int Int1_VALUE = 1;
          /**
           * <code>Int2 = 2;</code>
           */
          public static final int Int2_VALUE = 2;
          /**
           * <code>Int4 = 3;</code>
           */
          public static final int Int4_VALUE = 3;
          /**
           * <code>Int8 = 4;</code>
           */
          public static final int Int8_VALUE = 4;
          /**
           * <code>Float4 = 5;</code>
           */
          public static final int Float4_VALUE = 5;
          /**
           * <code>Float8 = 6;</code>
           */
          public static final int Float8_VALUE = 6;
          /**
           * <code>Boolean = 7;</code>
           */
          public static final int Boolean_VALUE = 7;
          /**
           * <code>String = 8;</code>
           */
          public static final int String_VALUE = 8;
          /**
           * <code>DateTime = 9;</code>
           */
          public static final int DateTime_VALUE = 9;
          /**
           * <code>Text = 10;</code>
           */
          public static final int Text_VALUE = 10;
          /**
           * <code>Null = 11;</code>
           */
          public static final int Null_VALUE = 11;


          public final int getNumber() { return value; }

          public static DataType valueOf(int value) {
            switch (value) {
              case 0: return Unknown;
              case 1: return Int1;
              case 2: return Int2;
              case 3: return Int4;
              case 4: return Int8;
              case 5: return Float4;
              case 6: return Float8;
              case 7: return Boolean;
              case 8: return String;
              case 9: return DateTime;
              case 10: return Text;
              case 11: return Null;
              default: return null;
            }
          }

          public static com.google.protobuf.Internal.EnumLiteMap<DataType>
              internalGetValueMap() {
            return internalValueMap;
          }
          private static com.google.protobuf.Internal.EnumLiteMap<DataType>
              internalValueMap =
                new com.google.protobuf.Internal.EnumLiteMap<DataType>() {
                  public DataType findValueByNumber(int number) {
                    return DataType.valueOf(number);
                  }
                };

          public final com.google.protobuf.Descriptors.EnumValueDescriptor
              getValueDescriptor() {
            return getDescriptor().getValues().get(index);
          }
          public final com.google.protobuf.Descriptors.EnumDescriptor
              getDescriptorForType() {
            return getDescriptor();
          }
          public static final com.google.protobuf.Descriptors.EnumDescriptor
              getDescriptor() {
            return com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.getDescriptor().getEnumTypes().get(0);
          }

          private static final DataType[] VALUES = values();

          public static DataType valueOf(
              com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
            if (desc.getType() != getDescriptor()) {
              throw new java.lang.IllegalArgumentException(
                "EnumValueDescriptor is not for this type.");
            }
            return VALUES[desc.getIndex()];
          }

          private final int index;
          private final int value;

          private DataType(int index, int value) {
            this.index = index;
            this.value = value;
          }

          // @@protoc_insertion_point(enum_scope:com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet.DataType)
        }

        public interface ValueOrBuilder extends
            // @@protoc_insertion_point(interface_extends:com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet.Value)
            com.google.protobuf.GeneratedMessage.
                ExtendableMessageOrBuilder<Value> {

          /**
           * <code>optional uint32 int_value = 1;</code>
           *
           * <pre>
           * Int1, Int2, Int4
           * </pre>
           */
          boolean hasIntValue();
          /**
           * <code>optional uint32 int_value = 1;</code>
           *
           * <pre>
           * Int1, Int2, Int4
           * </pre>
           */
          int getIntValue();

          /**
           * <code>optional uint64 long_value = 2;</code>
           *
           * <pre>
           * Int8, DateTime
           * </pre>
           */
          boolean hasLongValue();
          /**
           * <code>optional uint64 long_value = 2;</code>
           *
           * <pre>
           * Int8, DateTime
           * </pre>
           */
          long getLongValue();

          /**
           * <code>optional float float_value = 3;</code>
           *
           * <pre>
           * Float4
           * </pre>
           */
          boolean hasFloatValue();
          /**
           * <code>optional float float_value = 3;</code>
           *
           * <pre>
           * Float4
           * </pre>
           */
          float getFloatValue();

          /**
           * <code>optional double double_value = 4;</code>
           *
           * <pre>
           * Float8
           * </pre>
           */
          boolean hasDoubleValue();
          /**
           * <code>optional double double_value = 4;</code>
           *
           * <pre>
           * Float8
           * </pre>
           */
          double getDoubleValue();

          /**
           * <code>optional bool boolean_value = 5;</code>
           *
           * <pre>
           * Boolean 
           * </pre>
           */
          boolean hasBooleanValue();
          /**
           * <code>optional bool boolean_value = 5;</code>
           *
           * <pre>
           * Boolean 
           * </pre>
           */
          boolean getBooleanValue();

          /**
           * <code>optional string string_value = 6;</code>
           *
           * <pre>
           * String, Text
           * </pre>
           */
          boolean hasStringValue();
          /**
           * <code>optional string string_value = 6;</code>
           *
           * <pre>
           * String, Text
           * </pre>
           */
          java.lang.String getStringValue();
          /**
           * <code>optional string string_value = 6;</code>
           *
           * <pre>
           * String, Text
           * </pre>
           */
          com.google.protobuf.ByteString
              getStringValueBytes();
        }
        /**
         * Protobuf type {@code com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet.Value}
         */
        public static final class Value extends
            com.google.protobuf.GeneratedMessage.ExtendableMessage<
              Value> implements
            // @@protoc_insertion_point(message_implements:com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet.Value)
            ValueOrBuilder {
          // Use Value.newBuilder() to construct.
          private Value(com.google.protobuf.GeneratedMessage.ExtendableBuilder<com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Value, ?> builder) {
            super(builder);
            this.unknownFields = builder.getUnknownFields();
          }
          private Value(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

          private static final Value defaultInstance;
          public static Value getDefaultInstance() {
            return defaultInstance;
          }

          public Value getDefaultInstanceForType() {
            return defaultInstance;
          }

          private final com.google.protobuf.UnknownFieldSet unknownFields;
          @java.lang.Override
          public final com.google.protobuf.UnknownFieldSet
              getUnknownFields() {
            return this.unknownFields;
          }
          private Value(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            initFields();
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
              boolean done = false;
              while (!done) {
                int tag = input.readTag();
                switch (tag) {
                  case 0:
                    done = true;
                    break;
                  default: {
                    if (!parseUnknownField(input, unknownFields,
                                           extensionRegistry, tag)) {
                      done = true;
                    }
                    break;
                  }
                  case 8: {
                    bitField0_ |= 0x00000001;
                    intValue_ = input.readUInt32();
                    break;
                  }
                  case 16: {
                    bitField0_ |= 0x00000002;
                    longValue_ = input.readUInt64();
                    break;
                  }
                  case 29: {
                    bitField0_ |= 0x00000004;
                    floatValue_ = input.readFloat();
                    break;
                  }
                  case 33: {
                    bitField0_ |= 0x00000008;
                    doubleValue_ = input.readDouble();
                    break;
                  }
                  case 40: {
                    bitField0_ |= 0x00000010;
                    booleanValue_ = input.readBool();
                    break;
                  }
                  case 50: {
                    com.google.protobuf.ByteString bs = input.readBytes();
                    bitField0_ |= 0x00000020;
                    stringValue_ = bs;
                    break;
                  }
                }
              }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this);
            } finally {
              this.unknownFields = unknownFields.build();
              makeExtensionsImmutable();
            }
          }
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return com.cirruslink.sparkplug.protobuf.SparkplugBProto.internal_static_com_cirruslink_sparkplug_protobuf_Payload_Metric_DataSet_Value_descriptor;
          }

          protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return com.cirruslink.sparkplug.protobuf.SparkplugBProto.internal_static_com_cirruslink_sparkplug_protobuf_Payload_Metric_DataSet_Value_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Value.class, com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Value.Builder.class);
          }

          public static com.google.protobuf.Parser<Value> PARSER =
              new com.google.protobuf.AbstractParser<Value>() {
            public Value parsePartialFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
              return new Value(input, extensionRegistry);
            }
          };

          @java.lang.Override
          public com.google.protobuf.Parser<Value> getParserForType() {
            return PARSER;
          }

          private int bitField0_;
          public static final int INT_VALUE_FIELD_NUMBER = 1;
          private int intValue_;
          /**
           * <code>optional uint32 int_value = 1;</code>
           *
           * <pre>
           * Int1, Int2, Int4
           * </pre>
           */
          public boolean hasIntValue() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
          }
          /**
           * <code>optional uint32 int_value = 1;</code>
           *
           * <pre>
           * Int1, Int2, Int4
           * </pre>
           */
          public int getIntValue() {
            return intValue_;
          }

          public static final int LONG_VALUE_FIELD_NUMBER = 2;
          private long longValue_;
          /**
           * <code>optional uint64 long_value = 2;</code>
           *
           * <pre>
           * Int8, DateTime
           * </pre>
           */
          public boolean hasLongValue() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
          }
          /**
           * <code>optional uint64 long_value = 2;</code>
           *
           * <pre>
           * Int8, DateTime
           * </pre>
           */
          public long getLongValue() {
            return longValue_;
          }

          public static final int FLOAT_VALUE_FIELD_NUMBER = 3;
          private float floatValue_;
          /**
           * <code>optional float float_value = 3;</code>
           *
           * <pre>
           * Float4
           * </pre>
           */
          public boolean hasFloatValue() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
          }
          /**
           * <code>optional float float_value = 3;</code>
           *
           * <pre>
           * Float4
           * </pre>
           */
          public float getFloatValue() {
            return floatValue_;
          }

          public static final int DOUBLE_VALUE_FIELD_NUMBER = 4;
          private double doubleValue_;
          /**
           * <code>optional double double_value = 4;</code>
           *
           * <pre>
           * Float8
           * </pre>
           */
          public boolean hasDoubleValue() {
            return ((bitField0_ & 0x00000008) == 0x00000008);
          }
          /**
           * <code>optional double double_value = 4;</code>
           *
           * <pre>
           * Float8
           * </pre>
           */
          public double getDoubleValue() {
            return doubleValue_;
          }

          public static final int BOOLEAN_VALUE_FIELD_NUMBER = 5;
          private boolean booleanValue_;
          /**
           * <code>optional bool boolean_value = 5;</code>
           *
           * <pre>
           * Boolean 
           * </pre>
           */
          public boolean hasBooleanValue() {
            return ((bitField0_ & 0x00000010) == 0x00000010);
          }
          /**
           * <code>optional bool boolean_value = 5;</code>
           *
           * <pre>
           * Boolean 
           * </pre>
           */
          public boolean getBooleanValue() {
            return booleanValue_;
          }

          public static final int STRING_VALUE_FIELD_NUMBER = 6;
          private java.lang.Object stringValue_;
          /**
           * <code>optional string string_value = 6;</code>
           *
           * <pre>
           * String, Text
           * </pre>
           */
          public boolean hasStringValue() {
            return ((bitField0_ & 0x00000020) == 0x00000020);
          }
          /**
           * <code>optional string string_value = 6;</code>
           *
           * <pre>
           * String, Text
           * </pre>
           */
          public java.lang.String getStringValue() {
            java.lang.Object ref = stringValue_;
            if (ref instanceof java.lang.String) {
              return (java.lang.String) ref;
            } else {
              com.google.protobuf.ByteString bs = 
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              if (bs.isValidUtf8()) {
                stringValue_ = s;
              }
              return s;
            }
          }
          /**
           * <code>optional string string_value = 6;</code>
           *
           * <pre>
           * String, Text
           * </pre>
           */
          public com.google.protobuf.ByteString
              getStringValueBytes() {
            java.lang.Object ref = stringValue_;
            if (ref instanceof java.lang.String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              stringValue_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }

          private void initFields() {
            intValue_ = 0;
            longValue_ = 0L;
            floatValue_ = 0F;
            doubleValue_ = 0D;
            booleanValue_ = false;
            stringValue_ = "";
          }
          private byte memoizedIsInitialized = -1;
          public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            if (!extensionsAreInitialized()) {
              memoizedIsInitialized = 0;
              return false;
            }
            memoizedIsInitialized = 1;
            return true;
          }

          public void writeTo(com.google.protobuf.CodedOutputStream output)
                              throws java.io.IOException {
            getSerializedSize();
            com.google.protobuf.GeneratedMessage
              .ExtendableMessage<com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Value>.ExtensionWriter extensionWriter =
                newExtensionWriter();
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
              output.writeUInt32(1, intValue_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
              output.writeUInt64(2, longValue_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
              output.writeFloat(3, floatValue_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
              output.writeDouble(4, doubleValue_);
            }
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
              output.writeBool(5, booleanValue_);
            }
            if (((bitField0_ & 0x00000020) == 0x00000020)) {
              output.writeBytes(6, getStringValueBytes());
            }
            extensionWriter.writeUntil(536870912, output);
            getUnknownFields().writeTo(output);
          }

          private int memoizedSerializedSize = -1;
          public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
              size += com.google.protobuf.CodedOutputStream
                .computeUInt32Size(1, intValue_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
              size += com.google.protobuf.CodedOutputStream
                .computeUInt64Size(2, longValue_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
              size += com.google.protobuf.CodedOutputStream
                .computeFloatSize(3, floatValue_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
              size += com.google.protobuf.CodedOutputStream
                .computeDoubleSize(4, doubleValue_);
            }
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
              size += com.google.protobuf.CodedOutputStream
                .computeBoolSize(5, booleanValue_);
            }
            if (((bitField0_ & 0x00000020) == 0x00000020)) {
              size += com.google.protobuf.CodedOutputStream
                .computeBytesSize(6, getStringValueBytes());
            }
            size += extensionsSerializedSize();
            size += getUnknownFields().getSerializedSize();
            memoizedSerializedSize = size;
            return size;
          }

          private static final long serialVersionUID = 0L;
          @java.lang.Override
          protected java.lang.Object writeReplace()
              throws java.io.ObjectStreamException {
            return super.writeReplace();
          }

          public static com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Value parseFrom(
              com.google.protobuf.ByteString data)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
          }
          public static com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Value parseFrom(
              com.google.protobuf.ByteString data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
          }
          public static com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Value parseFrom(byte[] data)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
          }
          public static com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Value parseFrom(
              byte[] data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
          }
          public static com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Value parseFrom(java.io.InputStream input)
              throws java.io.IOException {
            return PARSER.parseFrom(input);
          }
          public static com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Value parseFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
          }
          public static com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Value parseDelimitedFrom(java.io.InputStream input)
              throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input);
          }
          public static com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Value parseDelimitedFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input, extensionRegistry);
          }
          public static com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Value parseFrom(
              com.google.protobuf.CodedInputStream input)
              throws java.io.IOException {
            return PARSER.parseFrom(input);
          }
          public static com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Value parseFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
          }

          public static Builder newBuilder() { return Builder.create(); }
          public Builder newBuilderForType() { return newBuilder(); }
          public static Builder newBuilder(com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Value prototype) {
            return newBuilder().mergeFrom(prototype);
          }
          public Builder toBuilder() { return newBuilder(this); }

          @java.lang.Override
          protected Builder newBuilderForType(
              com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
          }
          /**
           * Protobuf type {@code com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet.Value}
           */
          public static final class Builder extends
              com.google.protobuf.GeneratedMessage.ExtendableBuilder<
                com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Value, Builder> implements
              // @@protoc_insertion_point(builder_implements:com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet.Value)
              com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.ValueOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
                getDescriptor() {
              return com.cirruslink.sparkplug.protobuf.SparkplugBProto.internal_static_com_cirruslink_sparkplug_protobuf_Payload_Metric_DataSet_Value_descriptor;
            }

            protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
                internalGetFieldAccessorTable() {
              return com.cirruslink.sparkplug.protobuf.SparkplugBProto.internal_static_com_cirruslink_sparkplug_protobuf_Payload_Metric_DataSet_Value_fieldAccessorTable
                  .ensureFieldAccessorsInitialized(
                      com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Value.class, com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Value.Builder.class);
            }

            // Construct using com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Value.newBuilder()
            private Builder() {
              maybeForceBuilderInitialization();
            }

            private Builder(
                com.google.protobuf.GeneratedMessage.BuilderParent parent) {
              super(parent);
              maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
              if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
              }
            }
            private static Builder create() {
              return new Builder();
            }

            public Builder clear() {
              super.clear();
              intValue_ = 0;
              bitField0_ = (bitField0_ & ~0x00000001);
              longValue_ = 0L;
              bitField0_ = (bitField0_ & ~0x00000002);
              floatValue_ = 0F;
              bitField0_ = (bitField0_ & ~0x00000004);
              doubleValue_ = 0D;
              bitField0_ = (bitField0_ & ~0x00000008);
              booleanValue_ = false;
              bitField0_ = (bitField0_ & ~0x00000010);
              stringValue_ = "";
              bitField0_ = (bitField0_ & ~0x00000020);
              return this;
            }

            public Builder clone() {
              return create().mergeFrom(buildPartial());
            }

            public com.google.protobuf.Descriptors.Descriptor
                getDescriptorForType() {
              return com.cirruslink.sparkplug.protobuf.SparkplugBProto.internal_static_com_cirruslink_sparkplug_protobuf_Payload_Metric_DataSet_Value_descriptor;
            }

            public com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Value getDefaultInstanceForType() {
              return com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Value.getDefaultInstance();
            }

            public com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Value build() {
              com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Value result = buildPartial();
              if (!result.isInitialized()) {
                throw newUninitializedMessageException(result);
              }
              return result;
            }

            public com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Value buildPartial() {
              com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Value result = new com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Value(this);
              int from_bitField0_ = bitField0_;
              int to_bitField0_ = 0;
              if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                to_bitField0_ |= 0x00000001;
              }
              result.intValue_ = intValue_;
              if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                to_bitField0_ |= 0x00000002;
              }
              result.longValue_ = longValue_;
              if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
                to_bitField0_ |= 0x00000004;
              }
              result.floatValue_ = floatValue_;
              if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
                to_bitField0_ |= 0x00000008;
              }
              result.doubleValue_ = doubleValue_;
              if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
                to_bitField0_ |= 0x00000010;
              }
              result.booleanValue_ = booleanValue_;
              if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
                to_bitField0_ |= 0x00000020;
              }
              result.stringValue_ = stringValue_;
              result.bitField0_ = to_bitField0_;
              onBuilt();
              return result;
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
              if (other instanceof com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Value) {
                return mergeFrom((com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Value)other);
              } else {
                super.mergeFrom(other);
                return this;
              }
            }

            public Builder mergeFrom(com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Value other) {
              if (other == com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Value.getDefaultInstance()) return this;
              if (other.hasIntValue()) {
                setIntValue(other.getIntValue());
              }
              if (other.hasLongValue()) {
                setLongValue(other.getLongValue());
              }
              if (other.hasFloatValue()) {
                setFloatValue(other.getFloatValue());
              }
              if (other.hasDoubleValue()) {
                setDoubleValue(other.getDoubleValue());
              }
              if (other.hasBooleanValue()) {
                setBooleanValue(other.getBooleanValue());
              }
              if (other.hasStringValue()) {
                bitField0_ |= 0x00000020;
                stringValue_ = other.stringValue_;
                onChanged();
              }
              this.mergeExtensionFields(other);
              this.mergeUnknownFields(other.getUnknownFields());
              return this;
            }

            public final boolean isInitialized() {
              if (!extensionsAreInitialized()) {
                
                return false;
              }
              return true;
            }

            public Builder mergeFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
              com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Value parsedMessage = null;
              try {
                parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
              } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                parsedMessage = (com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Value) e.getUnfinishedMessage();
                throw e;
              } finally {
                if (parsedMessage != null) {
                  mergeFrom(parsedMessage);
                }
              }
              return this;
            }
            private int bitField0_;

            private int intValue_ ;
            /**
             * <code>optional uint32 int_value = 1;</code>
             *
             * <pre>
             * Int1, Int2, Int4
             * </pre>
             */
            public boolean hasIntValue() {
              return ((bitField0_ & 0x00000001) == 0x00000001);
            }
            /**
             * <code>optional uint32 int_value = 1;</code>
             *
             * <pre>
             * Int1, Int2, Int4
             * </pre>
             */
            public int getIntValue() {
              return intValue_;
            }
            /**
             * <code>optional uint32 int_value = 1;</code>
             *
             * <pre>
             * Int1, Int2, Int4
             * </pre>
             */
            public Builder setIntValue(int value) {
              bitField0_ |= 0x00000001;
              intValue_ = value;
              onChanged();
              return this;
            }
            /**
             * <code>optional uint32 int_value = 1;</code>
             *
             * <pre>
             * Int1, Int2, Int4
             * </pre>
             */
            public Builder clearIntValue() {
              bitField0_ = (bitField0_ & ~0x00000001);
              intValue_ = 0;
              onChanged();
              return this;
            }

            private long longValue_ ;
            /**
             * <code>optional uint64 long_value = 2;</code>
             *
             * <pre>
             * Int8, DateTime
             * </pre>
             */
            public boolean hasLongValue() {
              return ((bitField0_ & 0x00000002) == 0x00000002);
            }
            /**
             * <code>optional uint64 long_value = 2;</code>
             *
             * <pre>
             * Int8, DateTime
             * </pre>
             */
            public long getLongValue() {
              return longValue_;
            }
            /**
             * <code>optional uint64 long_value = 2;</code>
             *
             * <pre>
             * Int8, DateTime
             * </pre>
             */
            public Builder setLongValue(long value) {
              bitField0_ |= 0x00000002;
              longValue_ = value;
              onChanged();
              return this;
            }
            /**
             * <code>optional uint64 long_value = 2;</code>
             *
             * <pre>
             * Int8, DateTime
             * </pre>
             */
            public Builder clearLongValue() {
              bitField0_ = (bitField0_ & ~0x00000002);
              longValue_ = 0L;
              onChanged();
              return this;
            }

            private float floatValue_ ;
            /**
             * <code>optional float float_value = 3;</code>
             *
             * <pre>
             * Float4
             * </pre>
             */
            public boolean hasFloatValue() {
              return ((bitField0_ & 0x00000004) == 0x00000004);
            }
            /**
             * <code>optional float float_value = 3;</code>
             *
             * <pre>
             * Float4
             * </pre>
             */
            public float getFloatValue() {
              return floatValue_;
            }
            /**
             * <code>optional float float_value = 3;</code>
             *
             * <pre>
             * Float4
             * </pre>
             */
            public Builder setFloatValue(float value) {
              bitField0_ |= 0x00000004;
              floatValue_ = value;
              onChanged();
              return this;
            }
            /**
             * <code>optional float float_value = 3;</code>
             *
             * <pre>
             * Float4
             * </pre>
             */
            public Builder clearFloatValue() {
              bitField0_ = (bitField0_ & ~0x00000004);
              floatValue_ = 0F;
              onChanged();
              return this;
            }

            private double doubleValue_ ;
            /**
             * <code>optional double double_value = 4;</code>
             *
             * <pre>
             * Float8
             * </pre>
             */
            public boolean hasDoubleValue() {
              return ((bitField0_ & 0x00000008) == 0x00000008);
            }
            /**
             * <code>optional double double_value = 4;</code>
             *
             * <pre>
             * Float8
             * </pre>
             */
            public double getDoubleValue() {
              return doubleValue_;
            }
            /**
             * <code>optional double double_value = 4;</code>
             *
             * <pre>
             * Float8
             * </pre>
             */
            public Builder setDoubleValue(double value) {
              bitField0_ |= 0x00000008;
              doubleValue_ = value;
              onChanged();
              return this;
            }
            /**
             * <code>optional double double_value = 4;</code>
             *
             * <pre>
             * Float8
             * </pre>
             */
            public Builder clearDoubleValue() {
              bitField0_ = (bitField0_ & ~0x00000008);
              doubleValue_ = 0D;
              onChanged();
              return this;
            }

            private boolean booleanValue_ ;
            /**
             * <code>optional bool boolean_value = 5;</code>
             *
             * <pre>
             * Boolean 
             * </pre>
             */
            public boolean hasBooleanValue() {
              return ((bitField0_ & 0x00000010) == 0x00000010);
            }
            /**
             * <code>optional bool boolean_value = 5;</code>
             *
             * <pre>
             * Boolean 
             * </pre>
             */
            public boolean getBooleanValue() {
              return booleanValue_;
            }
            /**
             * <code>optional bool boolean_value = 5;</code>
             *
             * <pre>
             * Boolean 
             * </pre>
             */
            public Builder setBooleanValue(boolean value) {
              bitField0_ |= 0x00000010;
              booleanValue_ = value;
              onChanged();
              return this;
            }
            /**
             * <code>optional bool boolean_value = 5;</code>
             *
             * <pre>
             * Boolean 
             * </pre>
             */
            public Builder clearBooleanValue() {
              bitField0_ = (bitField0_ & ~0x00000010);
              booleanValue_ = false;
              onChanged();
              return this;
            }

            private java.lang.Object stringValue_ = "";
            /**
             * <code>optional string string_value = 6;</code>
             *
             * <pre>
             * String, Text
             * </pre>
             */
            public boolean hasStringValue() {
              return ((bitField0_ & 0x00000020) == 0x00000020);
            }
            /**
             * <code>optional string string_value = 6;</code>
             *
             * <pre>
             * String, Text
             * </pre>
             */
            public java.lang.String getStringValue() {
              java.lang.Object ref = stringValue_;
              if (!(ref instanceof java.lang.String)) {
                com.google.protobuf.ByteString bs =
                    (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                if (bs.isValidUtf8()) {
                  stringValue_ = s;
                }
                return s;
              } else {
                return (java.lang.String) ref;
              }
            }
            /**
             * <code>optional string string_value = 6;</code>
             *
             * <pre>
             * String, Text
             * </pre>
             */
            public com.google.protobuf.ByteString
                getStringValueBytes() {
              java.lang.Object ref = stringValue_;
              if (ref instanceof String) {
                com.google.protobuf.ByteString b = 
                    com.google.protobuf.ByteString.copyFromUtf8(
                        (java.lang.String) ref);
                stringValue_ = b;
                return b;
              } else {
                return (com.google.protobuf.ByteString) ref;
              }
            }
            /**
             * <code>optional string string_value = 6;</code>
             *
             * <pre>
             * String, Text
             * </pre>
             */
            public Builder setStringValue(
                java.lang.String value) {
              if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
              stringValue_ = value;
              onChanged();
              return this;
            }
            /**
             * <code>optional string string_value = 6;</code>
             *
             * <pre>
             * String, Text
             * </pre>
             */
            public Builder clearStringValue() {
              bitField0_ = (bitField0_ & ~0x00000020);
              stringValue_ = getDefaultInstance().getStringValue();
              onChanged();
              return this;
            }
            /**
             * <code>optional string string_value = 6;</code>
             *
             * <pre>
             * String, Text
             * </pre>
             */
            public Builder setStringValueBytes(
                com.google.protobuf.ByteString value) {
              if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
              stringValue_ = value;
              onChanged();
              return this;
            }

            // @@protoc_insertion_point(builder_scope:com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet.Value)
          }

          static {
            defaultInstance = new Value(true);
            defaultInstance.initFields();
          }

          // @@protoc_insertion_point(class_scope:com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet.Value)
        }

        public interface RowOrBuilder extends
            // @@protoc_insertion_point(interface_extends:com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet.Row)
            com.google.protobuf.GeneratedMessage.
                ExtendableMessageOrBuilder<Row> {

          /**
           * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet.Value element = 1;</code>
           */
          java.util.List<com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Value> 
              getElementList();
          /**
           * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet.Value element = 1;</code>
           */
          com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Value getElement(int index);
          /**
           * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet.Value element = 1;</code>
           */
          int getElementCount();
          /**
           * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet.Value element = 1;</code>
           */
          java.util.List<? extends com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.ValueOrBuilder> 
              getElementOrBuilderList();
          /**
           * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet.Value element = 1;</code>
           */
          com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.ValueOrBuilder getElementOrBuilder(
              int index);
        }
        /**
         * Protobuf type {@code com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet.Row}
         */
        public static final class Row extends
            com.google.protobuf.GeneratedMessage.ExtendableMessage<
              Row> implements
            // @@protoc_insertion_point(message_implements:com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet.Row)
            RowOrBuilder {
          // Use Row.newBuilder() to construct.
          private Row(com.google.protobuf.GeneratedMessage.ExtendableBuilder<com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Row, ?> builder) {
            super(builder);
            this.unknownFields = builder.getUnknownFields();
          }
          private Row(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

          private static final Row defaultInstance;
          public static Row getDefaultInstance() {
            return defaultInstance;
          }

          public Row getDefaultInstanceForType() {
            return defaultInstance;
          }

          private final com.google.protobuf.UnknownFieldSet unknownFields;
          @java.lang.Override
          public final com.google.protobuf.UnknownFieldSet
              getUnknownFields() {
            return this.unknownFields;
          }
          private Row(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            initFields();
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
              boolean done = false;
              while (!done) {
                int tag = input.readTag();
                switch (tag) {
                  case 0:
                    done = true;
                    break;
                  default: {
                    if (!parseUnknownField(input, unknownFields,
                                           extensionRegistry, tag)) {
                      done = true;
                    }
                    break;
                  }
                  case 10: {
                    if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                      element_ = new java.util.ArrayList<com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Value>();
                      mutable_bitField0_ |= 0x00000001;
                    }
                    element_.add(input.readMessage(com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Value.PARSER, extensionRegistry));
                    break;
                  }
                }
              }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this);
            } finally {
              if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                element_ = java.util.Collections.unmodifiableList(element_);
              }
              this.unknownFields = unknownFields.build();
              makeExtensionsImmutable();
            }
          }
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return com.cirruslink.sparkplug.protobuf.SparkplugBProto.internal_static_com_cirruslink_sparkplug_protobuf_Payload_Metric_DataSet_Row_descriptor;
          }

          protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return com.cirruslink.sparkplug.protobuf.SparkplugBProto.internal_static_com_cirruslink_sparkplug_protobuf_Payload_Metric_DataSet_Row_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Row.class, com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Row.Builder.class);
          }

          public static com.google.protobuf.Parser<Row> PARSER =
              new com.google.protobuf.AbstractParser<Row>() {
            public Row parsePartialFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
              return new Row(input, extensionRegistry);
            }
          };

          @java.lang.Override
          public com.google.protobuf.Parser<Row> getParserForType() {
            return PARSER;
          }

          public static final int ELEMENT_FIELD_NUMBER = 1;
          private java.util.List<com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Value> element_;
          /**
           * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet.Value element = 1;</code>
           */
          public java.util.List<com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Value> getElementList() {
            return element_;
          }
          /**
           * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet.Value element = 1;</code>
           */
          public java.util.List<? extends com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.ValueOrBuilder> 
              getElementOrBuilderList() {
            return element_;
          }
          /**
           * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet.Value element = 1;</code>
           */
          public int getElementCount() {
            return element_.size();
          }
          /**
           * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet.Value element = 1;</code>
           */
          public com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Value getElement(int index) {
            return element_.get(index);
          }
          /**
           * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet.Value element = 1;</code>
           */
          public com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.ValueOrBuilder getElementOrBuilder(
              int index) {
            return element_.get(index);
          }

          private void initFields() {
            element_ = java.util.Collections.emptyList();
          }
          private byte memoizedIsInitialized = -1;
          public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            for (int i = 0; i < getElementCount(); i++) {
              if (!getElement(i).isInitialized()) {
                memoizedIsInitialized = 0;
                return false;
              }
            }
            if (!extensionsAreInitialized()) {
              memoizedIsInitialized = 0;
              return false;
            }
            memoizedIsInitialized = 1;
            return true;
          }

          public void writeTo(com.google.protobuf.CodedOutputStream output)
                              throws java.io.IOException {
            getSerializedSize();
            com.google.protobuf.GeneratedMessage
              .ExtendableMessage<com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Row>.ExtensionWriter extensionWriter =
                newExtensionWriter();
            for (int i = 0; i < element_.size(); i++) {
              output.writeMessage(1, element_.get(i));
            }
            extensionWriter.writeUntil(536870912, output);
            getUnknownFields().writeTo(output);
          }

          private int memoizedSerializedSize = -1;
          public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            for (int i = 0; i < element_.size(); i++) {
              size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(1, element_.get(i));
            }
            size += extensionsSerializedSize();
            size += getUnknownFields().getSerializedSize();
            memoizedSerializedSize = size;
            return size;
          }

          private static final long serialVersionUID = 0L;
          @java.lang.Override
          protected java.lang.Object writeReplace()
              throws java.io.ObjectStreamException {
            return super.writeReplace();
          }

          public static com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Row parseFrom(
              com.google.protobuf.ByteString data)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
          }
          public static com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Row parseFrom(
              com.google.protobuf.ByteString data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
          }
          public static com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Row parseFrom(byte[] data)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
          }
          public static com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Row parseFrom(
              byte[] data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
          }
          public static com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Row parseFrom(java.io.InputStream input)
              throws java.io.IOException {
            return PARSER.parseFrom(input);
          }
          public static com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Row parseFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
          }
          public static com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Row parseDelimitedFrom(java.io.InputStream input)
              throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input);
          }
          public static com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Row parseDelimitedFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input, extensionRegistry);
          }
          public static com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Row parseFrom(
              com.google.protobuf.CodedInputStream input)
              throws java.io.IOException {
            return PARSER.parseFrom(input);
          }
          public static com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Row parseFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
          }

          public static Builder newBuilder() { return Builder.create(); }
          public Builder newBuilderForType() { return newBuilder(); }
          public static Builder newBuilder(com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Row prototype) {
            return newBuilder().mergeFrom(prototype);
          }
          public Builder toBuilder() { return newBuilder(this); }

          @java.lang.Override
          protected Builder newBuilderForType(
              com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
          }
          /**
           * Protobuf type {@code com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet.Row}
           */
          public static final class Builder extends
              com.google.protobuf.GeneratedMessage.ExtendableBuilder<
                com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Row, Builder> implements
              // @@protoc_insertion_point(builder_implements:com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet.Row)
              com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.RowOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
                getDescriptor() {
              return com.cirruslink.sparkplug.protobuf.SparkplugBProto.internal_static_com_cirruslink_sparkplug_protobuf_Payload_Metric_DataSet_Row_descriptor;
            }

            protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
                internalGetFieldAccessorTable() {
              return com.cirruslink.sparkplug.protobuf.SparkplugBProto.internal_static_com_cirruslink_sparkplug_protobuf_Payload_Metric_DataSet_Row_fieldAccessorTable
                  .ensureFieldAccessorsInitialized(
                      com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Row.class, com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Row.Builder.class);
            }

            // Construct using com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Row.newBuilder()
            private Builder() {
              maybeForceBuilderInitialization();
            }

            private Builder(
                com.google.protobuf.GeneratedMessage.BuilderParent parent) {
              super(parent);
              maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
              if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
                getElementFieldBuilder();
              }
            }
            private static Builder create() {
              return new Builder();
            }

            public Builder clear() {
              super.clear();
              if (elementBuilder_ == null) {
                element_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000001);
              } else {
                elementBuilder_.clear();
              }
              return this;
            }

            public Builder clone() {
              return create().mergeFrom(buildPartial());
            }

            public com.google.protobuf.Descriptors.Descriptor
                getDescriptorForType() {
              return com.cirruslink.sparkplug.protobuf.SparkplugBProto.internal_static_com_cirruslink_sparkplug_protobuf_Payload_Metric_DataSet_Row_descriptor;
            }

            public com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Row getDefaultInstanceForType() {
              return com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Row.getDefaultInstance();
            }

            public com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Row build() {
              com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Row result = buildPartial();
              if (!result.isInitialized()) {
                throw newUninitializedMessageException(result);
              }
              return result;
            }

            public com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Row buildPartial() {
              com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Row result = new com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Row(this);
              int from_bitField0_ = bitField0_;
              if (elementBuilder_ == null) {
                if (((bitField0_ & 0x00000001) == 0x00000001)) {
                  element_ = java.util.Collections.unmodifiableList(element_);
                  bitField0_ = (bitField0_ & ~0x00000001);
                }
                result.element_ = element_;
              } else {
                result.element_ = elementBuilder_.build();
              }
              onBuilt();
              return result;
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
              if (other instanceof com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Row) {
                return mergeFrom((com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Row)other);
              } else {
                super.mergeFrom(other);
                return this;
              }
            }

            public Builder mergeFrom(com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Row other) {
              if (other == com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Row.getDefaultInstance()) return this;
              if (elementBuilder_ == null) {
                if (!other.element_.isEmpty()) {
                  if (element_.isEmpty()) {
                    element_ = other.element_;
                    bitField0_ = (bitField0_ & ~0x00000001);
                  } else {
                    ensureElementIsMutable();
                    element_.addAll(other.element_);
                  }
                  onChanged();
                }
              } else {
                if (!other.element_.isEmpty()) {
                  if (elementBuilder_.isEmpty()) {
                    elementBuilder_.dispose();
                    elementBuilder_ = null;
                    element_ = other.element_;
                    bitField0_ = (bitField0_ & ~0x00000001);
                    elementBuilder_ = 
                      com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                         getElementFieldBuilder() : null;
                  } else {
                    elementBuilder_.addAllMessages(other.element_);
                  }
                }
              }
              this.mergeExtensionFields(other);
              this.mergeUnknownFields(other.getUnknownFields());
              return this;
            }

            public final boolean isInitialized() {
              for (int i = 0; i < getElementCount(); i++) {
                if (!getElement(i).isInitialized()) {
                  
                  return false;
                }
              }
              if (!extensionsAreInitialized()) {
                
                return false;
              }
              return true;
            }

            public Builder mergeFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
              com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Row parsedMessage = null;
              try {
                parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
              } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                parsedMessage = (com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Row) e.getUnfinishedMessage();
                throw e;
              } finally {
                if (parsedMessage != null) {
                  mergeFrom(parsedMessage);
                }
              }
              return this;
            }
            private int bitField0_;

            private java.util.List<com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Value> element_ =
              java.util.Collections.emptyList();
            private void ensureElementIsMutable() {
              if (!((bitField0_ & 0x00000001) == 0x00000001)) {
                element_ = new java.util.ArrayList<com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Value>(element_);
                bitField0_ |= 0x00000001;
               }
            }

            private com.google.protobuf.RepeatedFieldBuilder<
                com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Value, com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Value.Builder, com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.ValueOrBuilder> elementBuilder_;

            /**
             * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet.Value element = 1;</code>
             */
            public java.util.List<com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Value> getElementList() {
              if (elementBuilder_ == null) {
                return java.util.Collections.unmodifiableList(element_);
              } else {
                return elementBuilder_.getMessageList();
              }
            }
            /**
             * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet.Value element = 1;</code>
             */
            public int getElementCount() {
              if (elementBuilder_ == null) {
                return element_.size();
              } else {
                return elementBuilder_.getCount();
              }
            }
            /**
             * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet.Value element = 1;</code>
             */
            public com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Value getElement(int index) {
              if (elementBuilder_ == null) {
                return element_.get(index);
              } else {
                return elementBuilder_.getMessage(index);
              }
            }
            /**
             * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet.Value element = 1;</code>
             */
            public Builder setElement(
                int index, com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Value value) {
              if (elementBuilder_ == null) {
                if (value == null) {
                  throw new NullPointerException();
                }
                ensureElementIsMutable();
                element_.set(index, value);
                onChanged();
              } else {
                elementBuilder_.setMessage(index, value);
              }
              return this;
            }
            /**
             * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet.Value element = 1;</code>
             */
            public Builder setElement(
                int index, com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Value.Builder builderForValue) {
              if (elementBuilder_ == null) {
                ensureElementIsMutable();
                element_.set(index, builderForValue.build());
                onChanged();
              } else {
                elementBuilder_.setMessage(index, builderForValue.build());
              }
              return this;
            }
            /**
             * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet.Value element = 1;</code>
             */
            public Builder addElement(com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Value value) {
              if (elementBuilder_ == null) {
                if (value == null) {
                  throw new NullPointerException();
                }
                ensureElementIsMutable();
                element_.add(value);
                onChanged();
              } else {
                elementBuilder_.addMessage(value);
              }
              return this;
            }
            /**
             * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet.Value element = 1;</code>
             */
            public Builder addElement(
                int index, com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Value value) {
              if (elementBuilder_ == null) {
                if (value == null) {
                  throw new NullPointerException();
                }
                ensureElementIsMutable();
                element_.add(index, value);
                onChanged();
              } else {
                elementBuilder_.addMessage(index, value);
              }
              return this;
            }
            /**
             * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet.Value element = 1;</code>
             */
            public Builder addElement(
                com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Value.Builder builderForValue) {
              if (elementBuilder_ == null) {
                ensureElementIsMutable();
                element_.add(builderForValue.build());
                onChanged();
              } else {
                elementBuilder_.addMessage(builderForValue.build());
              }
              return this;
            }
            /**
             * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet.Value element = 1;</code>
             */
            public Builder addElement(
                int index, com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Value.Builder builderForValue) {
              if (elementBuilder_ == null) {
                ensureElementIsMutable();
                element_.add(index, builderForValue.build());
                onChanged();
              } else {
                elementBuilder_.addMessage(index, builderForValue.build());
              }
              return this;
            }
            /**
             * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet.Value element = 1;</code>
             */
            public Builder addAllElement(
                java.lang.Iterable<? extends com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Value> values) {
              if (elementBuilder_ == null) {
                ensureElementIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                    values, element_);
                onChanged();
              } else {
                elementBuilder_.addAllMessages(values);
              }
              return this;
            }
            /**
             * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet.Value element = 1;</code>
             */
            public Builder clearElement() {
              if (elementBuilder_ == null) {
                element_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000001);
                onChanged();
              } else {
                elementBuilder_.clear();
              }
              return this;
            }
            /**
             * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet.Value element = 1;</code>
             */
            public Builder removeElement(int index) {
              if (elementBuilder_ == null) {
                ensureElementIsMutable();
                element_.remove(index);
                onChanged();
              } else {
                elementBuilder_.remove(index);
              }
              return this;
            }
            /**
             * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet.Value element = 1;</code>
             */
            public com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Value.Builder getElementBuilder(
                int index) {
              return getElementFieldBuilder().getBuilder(index);
            }
            /**
             * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet.Value element = 1;</code>
             */
            public com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.ValueOrBuilder getElementOrBuilder(
                int index) {
              if (elementBuilder_ == null) {
                return element_.get(index);  } else {
                return elementBuilder_.getMessageOrBuilder(index);
              }
            }
            /**
             * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet.Value element = 1;</code>
             */
            public java.util.List<? extends com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.ValueOrBuilder> 
                 getElementOrBuilderList() {
              if (elementBuilder_ != null) {
                return elementBuilder_.getMessageOrBuilderList();
              } else {
                return java.util.Collections.unmodifiableList(element_);
              }
            }
            /**
             * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet.Value element = 1;</code>
             */
            public com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Value.Builder addElementBuilder() {
              return getElementFieldBuilder().addBuilder(
                  com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Value.getDefaultInstance());
            }
            /**
             * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet.Value element = 1;</code>
             */
            public com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Value.Builder addElementBuilder(
                int index) {
              return getElementFieldBuilder().addBuilder(
                  index, com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Value.getDefaultInstance());
            }
            /**
             * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet.Value element = 1;</code>
             */
            public java.util.List<com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Value.Builder> 
                 getElementBuilderList() {
              return getElementFieldBuilder().getBuilderList();
            }
            private com.google.protobuf.RepeatedFieldBuilder<
                com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Value, com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Value.Builder, com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.ValueOrBuilder> 
                getElementFieldBuilder() {
              if (elementBuilder_ == null) {
                elementBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                    com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Value, com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Value.Builder, com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.ValueOrBuilder>(
                        element_,
                        ((bitField0_ & 0x00000001) == 0x00000001),
                        getParentForChildren(),
                        isClean());
                element_ = null;
              }
              return elementBuilder_;
            }

            // @@protoc_insertion_point(builder_scope:com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet.Row)
          }

          static {
            defaultInstance = new Row(true);
            defaultInstance.initFields();
          }

          // @@protoc_insertion_point(class_scope:com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet.Row)
        }

        private int bitField0_;
        public static final int NUM_OF_COLUMNS_FIELD_NUMBER = 1;
        private long numOfColumns_;
        /**
         * <code>optional uint64 num_of_columns = 1;</code>
         */
        public boolean hasNumOfColumns() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint64 num_of_columns = 1;</code>
         */
        public long getNumOfColumns() {
          return numOfColumns_;
        }

        public static final int COLUMNS_FIELD_NUMBER = 2;
        private com.google.protobuf.LazyStringList columns_;
        /**
         * <code>repeated string columns = 2;</code>
         */
        public com.google.protobuf.ProtocolStringList
            getColumnsList() {
          return columns_;
        }
        /**
         * <code>repeated string columns = 2;</code>
         */
        public int getColumnsCount() {
          return columns_.size();
        }
        /**
         * <code>repeated string columns = 2;</code>
         */
        public java.lang.String getColumns(int index) {
          return columns_.get(index);
        }
        /**
         * <code>repeated string columns = 2;</code>
         */
        public com.google.protobuf.ByteString
            getColumnsBytes(int index) {
          return columns_.getByteString(index);
        }

        public static final int TYPES_FIELD_NUMBER = 3;
        private java.util.List<com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.DataType> types_;
        /**
         * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet.DataType types = 3;</code>
         */
        public java.util.List<com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.DataType> getTypesList() {
          return types_;
        }
        /**
         * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet.DataType types = 3;</code>
         */
        public int getTypesCount() {
          return types_.size();
        }
        /**
         * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet.DataType types = 3;</code>
         */
        public com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.DataType getTypes(int index) {
          return types_.get(index);
        }

        public static final int ROWS_FIELD_NUMBER = 4;
        private java.util.List<com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Row> rows_;
        /**
         * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet.Row rows = 4;</code>
         */
        public java.util.List<com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Row> getRowsList() {
          return rows_;
        }
        /**
         * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet.Row rows = 4;</code>
         */
        public java.util.List<? extends com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.RowOrBuilder> 
            getRowsOrBuilderList() {
          return rows_;
        }
        /**
         * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet.Row rows = 4;</code>
         */
        public int getRowsCount() {
          return rows_.size();
        }
        /**
         * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet.Row rows = 4;</code>
         */
        public com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Row getRows(int index) {
          return rows_.get(index);
        }
        /**
         * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet.Row rows = 4;</code>
         */
        public com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.RowOrBuilder getRowsOrBuilder(
            int index) {
          return rows_.get(index);
        }

        private void initFields() {
          numOfColumns_ = 0L;
          columns_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          types_ = java.util.Collections.emptyList();
          rows_ = java.util.Collections.emptyList();
        }
        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          for (int i = 0; i < getRowsCount(); i++) {
            if (!getRows(i).isInitialized()) {
              memoizedIsInitialized = 0;
              return false;
            }
          }
          if (!extensionsAreInitialized()) {
            memoizedIsInitialized = 0;
            return false;
          }
          memoizedIsInitialized = 1;
          return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          com.google.protobuf.GeneratedMessage
            .ExtendableMessage<com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet>.ExtensionWriter extensionWriter =
              newExtensionWriter();
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            output.writeUInt64(1, numOfColumns_);
          }
          for (int i = 0; i < columns_.size(); i++) {
            output.writeBytes(2, columns_.getByteString(i));
          }
          for (int i = 0; i < types_.size(); i++) {
            output.writeEnum(3, types_.get(i).getNumber());
          }
          for (int i = 0; i < rows_.size(); i++) {
            output.writeMessage(4, rows_.get(i));
          }
          extensionWriter.writeUntil(536870912, output);
          getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt64Size(1, numOfColumns_);
          }
          {
            int dataSize = 0;
            for (int i = 0; i < columns_.size(); i++) {
              dataSize += com.google.protobuf.CodedOutputStream
                .computeBytesSizeNoTag(columns_.getByteString(i));
            }
            size += dataSize;
            size += 1 * getColumnsList().size();
          }
          {
            int dataSize = 0;
            for (int i = 0; i < types_.size(); i++) {
              dataSize += com.google.protobuf.CodedOutputStream
                .computeEnumSizeNoTag(types_.get(i).getNumber());
            }
            size += dataSize;
            size += 1 * types_.size();
          }
          for (int i = 0; i < rows_.size(); i++) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(4, rows_.get(i));
          }
          size += extensionsSerializedSize();
          size += getUnknownFields().getSerializedSize();
          memoizedSerializedSize = size;
          return size;
        }

        private static final long serialVersionUID = 0L;
        @java.lang.Override
        protected java.lang.Object writeReplace()
            throws java.io.ObjectStreamException {
          return super.writeReplace();
        }

        public static com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }
        public static com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input);
        }
        public static com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        public static com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet prototype) {
          return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessage.ExtendableBuilder<
              com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet, Builder> implements
            // @@protoc_insertion_point(builder_implements:com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet)
            com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSetOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return com.cirruslink.sparkplug.protobuf.SparkplugBProto.internal_static_com_cirruslink_sparkplug_protobuf_Payload_Metric_DataSet_descriptor;
          }

          protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return com.cirruslink.sparkplug.protobuf.SparkplugBProto.internal_static_com_cirruslink_sparkplug_protobuf_Payload_Metric_DataSet_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.class, com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Builder.class);
          }

          // Construct using com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
              getRowsFieldBuilder();
            }
          }
          private static Builder create() {
            return new Builder();
          }

          public Builder clear() {
            super.clear();
            numOfColumns_ = 0L;
            bitField0_ = (bitField0_ & ~0x00000001);
            columns_ = com.google.protobuf.LazyStringArrayList.EMPTY;
            bitField0_ = (bitField0_ & ~0x00000002);
            types_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000004);
            if (rowsBuilder_ == null) {
              rows_ = java.util.Collections.emptyList();
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              rowsBuilder_.clear();
            }
            return this;
          }

          public Builder clone() {
            return create().mergeFrom(buildPartial());
          }

          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return com.cirruslink.sparkplug.protobuf.SparkplugBProto.internal_static_com_cirruslink_sparkplug_protobuf_Payload_Metric_DataSet_descriptor;
          }

          public com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet getDefaultInstanceForType() {
            return com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.getDefaultInstance();
          }

          public com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet build() {
            com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          public com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet buildPartial() {
            com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet result = new com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
              to_bitField0_ |= 0x00000001;
            }
            result.numOfColumns_ = numOfColumns_;
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
              columns_ = columns_.getUnmodifiableView();
              bitField0_ = (bitField0_ & ~0x00000002);
            }
            result.columns_ = columns_;
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
              types_ = java.util.Collections.unmodifiableList(types_);
              bitField0_ = (bitField0_ & ~0x00000004);
            }
            result.types_ = types_;
            if (rowsBuilder_ == null) {
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                rows_ = java.util.Collections.unmodifiableList(rows_);
                bitField0_ = (bitField0_ & ~0x00000008);
              }
              result.rows_ = rows_;
            } else {
              result.rows_ = rowsBuilder_.build();
            }
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet) {
              return mergeFrom((com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet other) {
            if (other == com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.getDefaultInstance()) return this;
            if (other.hasNumOfColumns()) {
              setNumOfColumns(other.getNumOfColumns());
            }
            if (!other.columns_.isEmpty()) {
              if (columns_.isEmpty()) {
                columns_ = other.columns_;
                bitField0_ = (bitField0_ & ~0x00000002);
              } else {
                ensureColumnsIsMutable();
                columns_.addAll(other.columns_);
              }
              onChanged();
            }
            if (!other.types_.isEmpty()) {
              if (types_.isEmpty()) {
                types_ = other.types_;
                bitField0_ = (bitField0_ & ~0x00000004);
              } else {
                ensureTypesIsMutable();
                types_.addAll(other.types_);
              }
              onChanged();
            }
            if (rowsBuilder_ == null) {
              if (!other.rows_.isEmpty()) {
                if (rows_.isEmpty()) {
                  rows_ = other.rows_;
                  bitField0_ = (bitField0_ & ~0x00000008);
                } else {
                  ensureRowsIsMutable();
                  rows_.addAll(other.rows_);
                }
                onChanged();
              }
            } else {
              if (!other.rows_.isEmpty()) {
                if (rowsBuilder_.isEmpty()) {
                  rowsBuilder_.dispose();
                  rowsBuilder_ = null;
                  rows_ = other.rows_;
                  bitField0_ = (bitField0_ & ~0x00000008);
                  rowsBuilder_ = 
                    com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                       getRowsFieldBuilder() : null;
                } else {
                  rowsBuilder_.addAllMessages(other.rows_);
                }
              }
            }
            this.mergeExtensionFields(other);
            this.mergeUnknownFields(other.getUnknownFields());
            return this;
          }

          public final boolean isInitialized() {
            for (int i = 0; i < getRowsCount(); i++) {
              if (!getRows(i).isInitialized()) {
                
                return false;
              }
            }
            if (!extensionsAreInitialized()) {
              
              return false;
            }
            return true;
          }

          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet) e.getUnfinishedMessage();
              throw e;
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          private long numOfColumns_ ;
          /**
           * <code>optional uint64 num_of_columns = 1;</code>
           */
          public boolean hasNumOfColumns() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
          }
          /**
           * <code>optional uint64 num_of_columns = 1;</code>
           */
          public long getNumOfColumns() {
            return numOfColumns_;
          }
          /**
           * <code>optional uint64 num_of_columns = 1;</code>
           */
          public Builder setNumOfColumns(long value) {
            bitField0_ |= 0x00000001;
            numOfColumns_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint64 num_of_columns = 1;</code>
           */
          public Builder clearNumOfColumns() {
            bitField0_ = (bitField0_ & ~0x00000001);
            numOfColumns_ = 0L;
            onChanged();
            return this;
          }

          private com.google.protobuf.LazyStringList columns_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          private void ensureColumnsIsMutable() {
            if (!((bitField0_ & 0x00000002) == 0x00000002)) {
              columns_ = new com.google.protobuf.LazyStringArrayList(columns_);
              bitField0_ |= 0x00000002;
             }
          }
          /**
           * <code>repeated string columns = 2;</code>
           */
          public com.google.protobuf.ProtocolStringList
              getColumnsList() {
            return columns_.getUnmodifiableView();
          }
          /**
           * <code>repeated string columns = 2;</code>
           */
          public int getColumnsCount() {
            return columns_.size();
          }
          /**
           * <code>repeated string columns = 2;</code>
           */
          public java.lang.String getColumns(int index) {
            return columns_.get(index);
          }
          /**
           * <code>repeated string columns = 2;</code>
           */
          public com.google.protobuf.ByteString
              getColumnsBytes(int index) {
            return columns_.getByteString(index);
          }
          /**
           * <code>repeated string columns = 2;</code>
           */
          public Builder setColumns(
              int index, java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  ensureColumnsIsMutable();
            columns_.set(index, value);
            onChanged();
            return this;
          }
          /**
           * <code>repeated string columns = 2;</code>
           */
          public Builder addColumns(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  ensureColumnsIsMutable();
            columns_.add(value);
            onChanged();
            return this;
          }
          /**
           * <code>repeated string columns = 2;</code>
           */
          public Builder addAllColumns(
              java.lang.Iterable<java.lang.String> values) {
            ensureColumnsIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, columns_);
            onChanged();
            return this;
          }
          /**
           * <code>repeated string columns = 2;</code>
           */
          public Builder clearColumns() {
            columns_ = com.google.protobuf.LazyStringArrayList.EMPTY;
            bitField0_ = (bitField0_ & ~0x00000002);
            onChanged();
            return this;
          }
          /**
           * <code>repeated string columns = 2;</code>
           */
          public Builder addColumnsBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  ensureColumnsIsMutable();
            columns_.add(value);
            onChanged();
            return this;
          }

          private java.util.List<com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.DataType> types_ =
            java.util.Collections.emptyList();
          private void ensureTypesIsMutable() {
            if (!((bitField0_ & 0x00000004) == 0x00000004)) {
              types_ = new java.util.ArrayList<com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.DataType>(types_);
              bitField0_ |= 0x00000004;
            }
          }
          /**
           * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet.DataType types = 3;</code>
           */
          public java.util.List<com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.DataType> getTypesList() {
            return java.util.Collections.unmodifiableList(types_);
          }
          /**
           * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet.DataType types = 3;</code>
           */
          public int getTypesCount() {
            return types_.size();
          }
          /**
           * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet.DataType types = 3;</code>
           */
          public com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.DataType getTypes(int index) {
            return types_.get(index);
          }
          /**
           * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet.DataType types = 3;</code>
           */
          public Builder setTypes(
              int index, com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.DataType value) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureTypesIsMutable();
            types_.set(index, value);
            onChanged();
            return this;
          }
          /**
           * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet.DataType types = 3;</code>
           */
          public Builder addTypes(com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.DataType value) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureTypesIsMutable();
            types_.add(value);
            onChanged();
            return this;
          }
          /**
           * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet.DataType types = 3;</code>
           */
          public Builder addAllTypes(
              java.lang.Iterable<? extends com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.DataType> values) {
            ensureTypesIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, types_);
            onChanged();
            return this;
          }
          /**
           * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet.DataType types = 3;</code>
           */
          public Builder clearTypes() {
            types_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000004);
            onChanged();
            return this;
          }

          private java.util.List<com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Row> rows_ =
            java.util.Collections.emptyList();
          private void ensureRowsIsMutable() {
            if (!((bitField0_ & 0x00000008) == 0x00000008)) {
              rows_ = new java.util.ArrayList<com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Row>(rows_);
              bitField0_ |= 0x00000008;
             }
          }

          private com.google.protobuf.RepeatedFieldBuilder<
              com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Row, com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Row.Builder, com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.RowOrBuilder> rowsBuilder_;

          /**
           * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet.Row rows = 4;</code>
           */
          public java.util.List<com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Row> getRowsList() {
            if (rowsBuilder_ == null) {
              return java.util.Collections.unmodifiableList(rows_);
            } else {
              return rowsBuilder_.getMessageList();
            }
          }
          /**
           * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet.Row rows = 4;</code>
           */
          public int getRowsCount() {
            if (rowsBuilder_ == null) {
              return rows_.size();
            } else {
              return rowsBuilder_.getCount();
            }
          }
          /**
           * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet.Row rows = 4;</code>
           */
          public com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Row getRows(int index) {
            if (rowsBuilder_ == null) {
              return rows_.get(index);
            } else {
              return rowsBuilder_.getMessage(index);
            }
          }
          /**
           * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet.Row rows = 4;</code>
           */
          public Builder setRows(
              int index, com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Row value) {
            if (rowsBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureRowsIsMutable();
              rows_.set(index, value);
              onChanged();
            } else {
              rowsBuilder_.setMessage(index, value);
            }
            return this;
          }
          /**
           * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet.Row rows = 4;</code>
           */
          public Builder setRows(
              int index, com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Row.Builder builderForValue) {
            if (rowsBuilder_ == null) {
              ensureRowsIsMutable();
              rows_.set(index, builderForValue.build());
              onChanged();
            } else {
              rowsBuilder_.setMessage(index, builderForValue.build());
            }
            return this;
          }
          /**
           * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet.Row rows = 4;</code>
           */
          public Builder addRows(com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Row value) {
            if (rowsBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureRowsIsMutable();
              rows_.add(value);
              onChanged();
            } else {
              rowsBuilder_.addMessage(value);
            }
            return this;
          }
          /**
           * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet.Row rows = 4;</code>
           */
          public Builder addRows(
              int index, com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Row value) {
            if (rowsBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureRowsIsMutable();
              rows_.add(index, value);
              onChanged();
            } else {
              rowsBuilder_.addMessage(index, value);
            }
            return this;
          }
          /**
           * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet.Row rows = 4;</code>
           */
          public Builder addRows(
              com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Row.Builder builderForValue) {
            if (rowsBuilder_ == null) {
              ensureRowsIsMutable();
              rows_.add(builderForValue.build());
              onChanged();
            } else {
              rowsBuilder_.addMessage(builderForValue.build());
            }
            return this;
          }
          /**
           * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet.Row rows = 4;</code>
           */
          public Builder addRows(
              int index, com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Row.Builder builderForValue) {
            if (rowsBuilder_ == null) {
              ensureRowsIsMutable();
              rows_.add(index, builderForValue.build());
              onChanged();
            } else {
              rowsBuilder_.addMessage(index, builderForValue.build());
            }
            return this;
          }
          /**
           * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet.Row rows = 4;</code>
           */
          public Builder addAllRows(
              java.lang.Iterable<? extends com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Row> values) {
            if (rowsBuilder_ == null) {
              ensureRowsIsMutable();
              com.google.protobuf.AbstractMessageLite.Builder.addAll(
                  values, rows_);
              onChanged();
            } else {
              rowsBuilder_.addAllMessages(values);
            }
            return this;
          }
          /**
           * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet.Row rows = 4;</code>
           */
          public Builder clearRows() {
            if (rowsBuilder_ == null) {
              rows_ = java.util.Collections.emptyList();
              bitField0_ = (bitField0_ & ~0x00000008);
              onChanged();
            } else {
              rowsBuilder_.clear();
            }
            return this;
          }
          /**
           * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet.Row rows = 4;</code>
           */
          public Builder removeRows(int index) {
            if (rowsBuilder_ == null) {
              ensureRowsIsMutable();
              rows_.remove(index);
              onChanged();
            } else {
              rowsBuilder_.remove(index);
            }
            return this;
          }
          /**
           * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet.Row rows = 4;</code>
           */
          public com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Row.Builder getRowsBuilder(
              int index) {
            return getRowsFieldBuilder().getBuilder(index);
          }
          /**
           * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet.Row rows = 4;</code>
           */
          public com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.RowOrBuilder getRowsOrBuilder(
              int index) {
            if (rowsBuilder_ == null) {
              return rows_.get(index);  } else {
              return rowsBuilder_.getMessageOrBuilder(index);
            }
          }
          /**
           * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet.Row rows = 4;</code>
           */
          public java.util.List<? extends com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.RowOrBuilder> 
               getRowsOrBuilderList() {
            if (rowsBuilder_ != null) {
              return rowsBuilder_.getMessageOrBuilderList();
            } else {
              return java.util.Collections.unmodifiableList(rows_);
            }
          }
          /**
           * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet.Row rows = 4;</code>
           */
          public com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Row.Builder addRowsBuilder() {
            return getRowsFieldBuilder().addBuilder(
                com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Row.getDefaultInstance());
          }
          /**
           * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet.Row rows = 4;</code>
           */
          public com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Row.Builder addRowsBuilder(
              int index) {
            return getRowsFieldBuilder().addBuilder(
                index, com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Row.getDefaultInstance());
          }
          /**
           * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet.Row rows = 4;</code>
           */
          public java.util.List<com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Row.Builder> 
               getRowsBuilderList() {
            return getRowsFieldBuilder().getBuilderList();
          }
          private com.google.protobuf.RepeatedFieldBuilder<
              com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Row, com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Row.Builder, com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.RowOrBuilder> 
              getRowsFieldBuilder() {
            if (rowsBuilder_ == null) {
              rowsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                  com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Row, com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Row.Builder, com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.RowOrBuilder>(
                      rows_,
                      ((bitField0_ & 0x00000008) == 0x00000008),
                      getParentForChildren(),
                      isClean());
              rows_ = null;
            }
            return rowsBuilder_;
          }

          // @@protoc_insertion_point(builder_scope:com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet)
        }

        static {
          defaultInstance = new DataSet(true);
          defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet)
      }

      private int bitField0_;
      public static final int NAME_FIELD_NUMBER = 1;
      private java.lang.Object name_;
      /**
       * <code>optional string name = 1;</code>
       *
       * <pre>
       * Metric name - should only be included on birth
       * </pre>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string name = 1;</code>
       *
       * <pre>
       * Metric name - should only be included on birth
       * </pre>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string name = 1;</code>
       *
       * <pre>
       * Metric name - should only be included on birth
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int ALIAS_FIELD_NUMBER = 2;
      private long alias_;
      /**
       * <code>optional uint64 alias = 2;</code>
       *
       * <pre>
       * Metric alias - tied to name on birth and included in all later DATA messages
       * </pre>
       */
      public boolean hasAlias() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint64 alias = 2;</code>
       *
       * <pre>
       * Metric alias - tied to name on birth and included in all later DATA messages
       * </pre>
       */
      public long getAlias() {
        return alias_;
      }

      public static final int TIMESTAMP_FIELD_NUMBER = 3;
      private long timestamp_;
      /**
       * <code>optional uint64 timestamp = 3;</code>
       *
       * <pre>
       * Timestamp associated with data acquisition time
       * </pre>
       */
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint64 timestamp = 3;</code>
       *
       * <pre>
       * Timestamp associated with data acquisition time
       * </pre>
       */
      public long getTimestamp() {
        return timestamp_;
      }

      public static final int DATATYPE_FIELD_NUMBER = 4;
      private com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataType datatype_;
      /**
       * <code>optional .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataType datatype = 4;</code>
       *
       * <pre>
       * DataType of the metric/tag value
       * </pre>
       */
      public boolean hasDatatype() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataType datatype = 4;</code>
       *
       * <pre>
       * DataType of the metric/tag value
       * </pre>
       */
      public com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataType getDatatype() {
        return datatype_;
      }

      public static final int HISTORICAL_FIELD_NUMBER = 5;
      private boolean historical_;
      /**
       * <code>optional bool historical = 5;</code>
       *
       * <pre>
       * If this is historical data and should not update real time tag
       * </pre>
       */
      public boolean hasHistorical() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional bool historical = 5;</code>
       *
       * <pre>
       * If this is historical data and should not update real time tag
       * </pre>
       */
      public boolean getHistorical() {
        return historical_;
      }

      public static final int METADATA_FIELD_NUMBER = 6;
      private com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaData metadata_;
      /**
       * <code>optional .com.cirruslink.sparkplug.protobuf.Payload.Metric.MetaData metadata = 6;</code>
       *
       * <pre>
       * Metadata for the payload
       * </pre>
       */
      public boolean hasMetadata() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .com.cirruslink.sparkplug.protobuf.Payload.Metric.MetaData metadata = 6;</code>
       *
       * <pre>
       * Metadata for the payload
       * </pre>
       */
      public com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaData getMetadata() {
        return metadata_;
      }
      /**
       * <code>optional .com.cirruslink.sparkplug.protobuf.Payload.Metric.MetaData metadata = 6;</code>
       *
       * <pre>
       * Metadata for the payload
       * </pre>
       */
      public com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaDataOrBuilder getMetadataOrBuilder() {
        return metadata_;
      }

      public static final int INT_VALUE_FIELD_NUMBER = 7;
      private int intValue_;
      /**
       * <code>optional uint32 int_value = 7;</code>
       *
       * <pre>
       * Int1, Int2, Int4
       * </pre>
       */
      public boolean hasIntValue() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional uint32 int_value = 7;</code>
       *
       * <pre>
       * Int1, Int2, Int4
       * </pre>
       */
      public int getIntValue() {
        return intValue_;
      }

      public static final int LONG_VALUE_FIELD_NUMBER = 8;
      private long longValue_;
      /**
       * <code>optional uint64 long_value = 8;</code>
       *
       * <pre>
       * Int8, DateTime
       * </pre>
       */
      public boolean hasLongValue() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional uint64 long_value = 8;</code>
       *
       * <pre>
       * Int8, DateTime
       * </pre>
       */
      public long getLongValue() {
        return longValue_;
      }

      public static final int FLOAT_VALUE_FIELD_NUMBER = 9;
      private float floatValue_;
      /**
       * <code>optional float float_value = 9;</code>
       *
       * <pre>
       * Float4
       * </pre>
       */
      public boolean hasFloatValue() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional float float_value = 9;</code>
       *
       * <pre>
       * Float4
       * </pre>
       */
      public float getFloatValue() {
        return floatValue_;
      }

      public static final int DOUBLE_VALUE_FIELD_NUMBER = 10;
      private double doubleValue_;
      /**
       * <code>optional double double_value = 10;</code>
       *
       * <pre>
       * Float8
       * </pre>
       */
      public boolean hasDoubleValue() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional double double_value = 10;</code>
       *
       * <pre>
       * Float8
       * </pre>
       */
      public double getDoubleValue() {
        return doubleValue_;
      }

      public static final int BOOLEAN_VALUE_FIELD_NUMBER = 11;
      private boolean booleanValue_;
      /**
       * <code>optional bool boolean_value = 11;</code>
       *
       * <pre>
       * Boolean
       * </pre>
       */
      public boolean hasBooleanValue() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional bool boolean_value = 11;</code>
       *
       * <pre>
       * Boolean
       * </pre>
       */
      public boolean getBooleanValue() {
        return booleanValue_;
      }

      public static final int STRING_VALUE_FIELD_NUMBER = 12;
      private java.lang.Object stringValue_;
      /**
       * <code>optional string string_value = 12;</code>
       *
       * <pre>
       * String, Text
       * </pre>
       */
      public boolean hasStringValue() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional string string_value = 12;</code>
       *
       * <pre>
       * String, Text
       * </pre>
       */
      public java.lang.String getStringValue() {
        java.lang.Object ref = stringValue_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            stringValue_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string string_value = 12;</code>
       *
       * <pre>
       * String, Text
       * </pre>
       */
      public com.google.protobuf.ByteString
          getStringValueBytes() {
        java.lang.Object ref = stringValue_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          stringValue_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int BYTES_VALUE_FIELD_NUMBER = 13;
      private com.google.protobuf.ByteString bytesValue_;
      /**
       * <code>optional bytes bytes_value = 13;</code>
       *
       * <pre>
       * Bytes, File, Script
       * </pre>
       */
      public boolean hasBytesValue() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional bytes bytes_value = 13;</code>
       *
       * <pre>
       * Bytes, File, Script
       * </pre>
       */
      public com.google.protobuf.ByteString getBytesValue() {
        return bytesValue_;
      }

      public static final int DATASET_VALUE_FIELD_NUMBER = 14;
      private com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet datasetValue_;
      /**
       * <code>optional .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet dataset_value = 14;</code>
       *
       * <pre>
       * DataSet
       * </pre>
       */
      public boolean hasDatasetValue() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet dataset_value = 14;</code>
       *
       * <pre>
       * DataSet
       * </pre>
       */
      public com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet getDatasetValue() {
        return datasetValue_;
      }
      /**
       * <code>optional .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet dataset_value = 14;</code>
       *
       * <pre>
       * DataSet
       * </pre>
       */
      public com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSetOrBuilder getDatasetValueOrBuilder() {
        return datasetValue_;
      }

      private void initFields() {
        name_ = "";
        alias_ = 0L;
        timestamp_ = 0L;
        datatype_ = com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataType.Unknown;
        historical_ = false;
        metadata_ = com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaData.getDefaultInstance();
        intValue_ = 0;
        longValue_ = 0L;
        floatValue_ = 0F;
        doubleValue_ = 0D;
        booleanValue_ = false;
        stringValue_ = "";
        bytesValue_ = com.google.protobuf.ByteString.EMPTY;
        datasetValue_ = com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.getDefaultInstance();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        if (hasMetadata()) {
          if (!getMetadata().isInitialized()) {
            memoizedIsInitialized = 0;
            return false;
          }
        }
        if (hasDatasetValue()) {
          if (!getDatasetValue().isInitialized()) {
            memoizedIsInitialized = 0;
            return false;
          }
        }
        if (!extensionsAreInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        com.google.protobuf.GeneratedMessage
          .ExtendableMessage<com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric>.ExtensionWriter extensionWriter =
            newExtensionWriter();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBytes(1, getNameBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeUInt64(2, alias_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeUInt64(3, timestamp_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeEnum(4, datatype_.getNumber());
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeBool(5, historical_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeMessage(6, metadata_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          output.writeUInt32(7, intValue_);
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          output.writeUInt64(8, longValue_);
        }
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          output.writeFloat(9, floatValue_);
        }
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          output.writeDouble(10, doubleValue_);
        }
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          output.writeBool(11, booleanValue_);
        }
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          output.writeBytes(12, getStringValueBytes());
        }
        if (((bitField0_ & 0x00001000) == 0x00001000)) {
          output.writeBytes(13, bytesValue_);
        }
        if (((bitField0_ & 0x00002000) == 0x00002000)) {
          output.writeMessage(14, datasetValue_);
        }
        extensionWriter.writeUntil(536870912, output);
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, getNameBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(2, alias_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(3, timestamp_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(4, datatype_.getNumber());
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(5, historical_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(6, metadata_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(7, intValue_);
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(8, longValue_);
        }
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(9, floatValue_);
        }
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(10, doubleValue_);
        }
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(11, booleanValue_);
        }
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(12, getStringValueBytes());
        }
        if (((bitField0_ & 0x00001000) == 0x00001000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(13, bytesValue_);
        }
        if (((bitField0_ & 0x00002000) == 0x00002000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(14, datasetValue_);
        }
        size += extensionsSerializedSize();
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code com.cirruslink.sparkplug.protobuf.Payload.Metric}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.ExtendableBuilder<
            com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric, Builder> implements
          // @@protoc_insertion_point(builder_implements:com.cirruslink.sparkplug.protobuf.Payload.Metric)
          com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.MetricOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.cirruslink.sparkplug.protobuf.SparkplugBProto.internal_static_com_cirruslink_sparkplug_protobuf_Payload_Metric_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.cirruslink.sparkplug.protobuf.SparkplugBProto.internal_static_com_cirruslink_sparkplug_protobuf_Payload_Metric_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.class, com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.Builder.class);
        }

        // Construct using com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getMetadataFieldBuilder();
            getDatasetValueFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          name_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          alias_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000002);
          timestamp_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000004);
          datatype_ = com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataType.Unknown;
          bitField0_ = (bitField0_ & ~0x00000008);
          historical_ = false;
          bitField0_ = (bitField0_ & ~0x00000010);
          if (metadataBuilder_ == null) {
            metadata_ = com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaData.getDefaultInstance();
          } else {
            metadataBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000020);
          intValue_ = 0;
          bitField0_ = (bitField0_ & ~0x00000040);
          longValue_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000080);
          floatValue_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000100);
          doubleValue_ = 0D;
          bitField0_ = (bitField0_ & ~0x00000200);
          booleanValue_ = false;
          bitField0_ = (bitField0_ & ~0x00000400);
          stringValue_ = "";
          bitField0_ = (bitField0_ & ~0x00000800);
          bytesValue_ = com.google.protobuf.ByteString.EMPTY;
          bitField0_ = (bitField0_ & ~0x00001000);
          if (datasetValueBuilder_ == null) {
            datasetValue_ = com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.getDefaultInstance();
          } else {
            datasetValueBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00002000);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.cirruslink.sparkplug.protobuf.SparkplugBProto.internal_static_com_cirruslink_sparkplug_protobuf_Payload_Metric_descriptor;
        }

        public com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric getDefaultInstanceForType() {
          return com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.getDefaultInstance();
        }

        public com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric build() {
          com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric buildPartial() {
          com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric result = new com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.name_ = name_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.alias_ = alias_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.timestamp_ = timestamp_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.datatype_ = datatype_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.historical_ = historical_;
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000020;
          }
          if (metadataBuilder_ == null) {
            result.metadata_ = metadata_;
          } else {
            result.metadata_ = metadataBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
            to_bitField0_ |= 0x00000040;
          }
          result.intValue_ = intValue_;
          if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
            to_bitField0_ |= 0x00000080;
          }
          result.longValue_ = longValue_;
          if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
            to_bitField0_ |= 0x00000100;
          }
          result.floatValue_ = floatValue_;
          if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
            to_bitField0_ |= 0x00000200;
          }
          result.doubleValue_ = doubleValue_;
          if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
            to_bitField0_ |= 0x00000400;
          }
          result.booleanValue_ = booleanValue_;
          if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
            to_bitField0_ |= 0x00000800;
          }
          result.stringValue_ = stringValue_;
          if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
            to_bitField0_ |= 0x00001000;
          }
          result.bytesValue_ = bytesValue_;
          if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
            to_bitField0_ |= 0x00002000;
          }
          if (datasetValueBuilder_ == null) {
            result.datasetValue_ = datasetValue_;
          } else {
            result.datasetValue_ = datasetValueBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric) {
            return mergeFrom((com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric other) {
          if (other == com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.getDefaultInstance()) return this;
          if (other.hasName()) {
            bitField0_ |= 0x00000001;
            name_ = other.name_;
            onChanged();
          }
          if (other.hasAlias()) {
            setAlias(other.getAlias());
          }
          if (other.hasTimestamp()) {
            setTimestamp(other.getTimestamp());
          }
          if (other.hasDatatype()) {
            setDatatype(other.getDatatype());
          }
          if (other.hasHistorical()) {
            setHistorical(other.getHistorical());
          }
          if (other.hasMetadata()) {
            mergeMetadata(other.getMetadata());
          }
          if (other.hasIntValue()) {
            setIntValue(other.getIntValue());
          }
          if (other.hasLongValue()) {
            setLongValue(other.getLongValue());
          }
          if (other.hasFloatValue()) {
            setFloatValue(other.getFloatValue());
          }
          if (other.hasDoubleValue()) {
            setDoubleValue(other.getDoubleValue());
          }
          if (other.hasBooleanValue()) {
            setBooleanValue(other.getBooleanValue());
          }
          if (other.hasStringValue()) {
            bitField0_ |= 0x00000800;
            stringValue_ = other.stringValue_;
            onChanged();
          }
          if (other.hasBytesValue()) {
            setBytesValue(other.getBytesValue());
          }
          if (other.hasDatasetValue()) {
            mergeDatasetValue(other.getDatasetValue());
          }
          this.mergeExtensionFields(other);
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (hasMetadata()) {
            if (!getMetadata().isInitialized()) {
              
              return false;
            }
          }
          if (hasDatasetValue()) {
            if (!getDatasetValue().isInitialized()) {
              
              return false;
            }
          }
          if (!extensionsAreInitialized()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.lang.Object name_ = "";
        /**
         * <code>optional string name = 1;</code>
         *
         * <pre>
         * Metric name - should only be included on birth
         * </pre>
         */
        public boolean hasName() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional string name = 1;</code>
         *
         * <pre>
         * Metric name - should only be included on birth
         * </pre>
         */
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              name_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string name = 1;</code>
         *
         * <pre>
         * Metric name - should only be included on birth
         * </pre>
         */
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string name = 1;</code>
         *
         * <pre>
         * Metric name - should only be included on birth
         * </pre>
         */
        public Builder setName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          name_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string name = 1;</code>
         *
         * <pre>
         * Metric name - should only be included on birth
         * </pre>
         */
        public Builder clearName() {
          bitField0_ = (bitField0_ & ~0x00000001);
          name_ = getDefaultInstance().getName();
          onChanged();
          return this;
        }
        /**
         * <code>optional string name = 1;</code>
         *
         * <pre>
         * Metric name - should only be included on birth
         * </pre>
         */
        public Builder setNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          name_ = value;
          onChanged();
          return this;
        }

        private long alias_ ;
        /**
         * <code>optional uint64 alias = 2;</code>
         *
         * <pre>
         * Metric alias - tied to name on birth and included in all later DATA messages
         * </pre>
         */
        public boolean hasAlias() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional uint64 alias = 2;</code>
         *
         * <pre>
         * Metric alias - tied to name on birth and included in all later DATA messages
         * </pre>
         */
        public long getAlias() {
          return alias_;
        }
        /**
         * <code>optional uint64 alias = 2;</code>
         *
         * <pre>
         * Metric alias - tied to name on birth and included in all later DATA messages
         * </pre>
         */
        public Builder setAlias(long value) {
          bitField0_ |= 0x00000002;
          alias_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint64 alias = 2;</code>
         *
         * <pre>
         * Metric alias - tied to name on birth and included in all later DATA messages
         * </pre>
         */
        public Builder clearAlias() {
          bitField0_ = (bitField0_ & ~0x00000002);
          alias_ = 0L;
          onChanged();
          return this;
        }

        private long timestamp_ ;
        /**
         * <code>optional uint64 timestamp = 3;</code>
         *
         * <pre>
         * Timestamp associated with data acquisition time
         * </pre>
         */
        public boolean hasTimestamp() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional uint64 timestamp = 3;</code>
         *
         * <pre>
         * Timestamp associated with data acquisition time
         * </pre>
         */
        public long getTimestamp() {
          return timestamp_;
        }
        /**
         * <code>optional uint64 timestamp = 3;</code>
         *
         * <pre>
         * Timestamp associated with data acquisition time
         * </pre>
         */
        public Builder setTimestamp(long value) {
          bitField0_ |= 0x00000004;
          timestamp_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint64 timestamp = 3;</code>
         *
         * <pre>
         * Timestamp associated with data acquisition time
         * </pre>
         */
        public Builder clearTimestamp() {
          bitField0_ = (bitField0_ & ~0x00000004);
          timestamp_ = 0L;
          onChanged();
          return this;
        }

        private com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataType datatype_ = com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataType.Unknown;
        /**
         * <code>optional .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataType datatype = 4;</code>
         *
         * <pre>
         * DataType of the metric/tag value
         * </pre>
         */
        public boolean hasDatatype() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataType datatype = 4;</code>
         *
         * <pre>
         * DataType of the metric/tag value
         * </pre>
         */
        public com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataType getDatatype() {
          return datatype_;
        }
        /**
         * <code>optional .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataType datatype = 4;</code>
         *
         * <pre>
         * DataType of the metric/tag value
         * </pre>
         */
        public Builder setDatatype(com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataType value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000008;
          datatype_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataType datatype = 4;</code>
         *
         * <pre>
         * DataType of the metric/tag value
         * </pre>
         */
        public Builder clearDatatype() {
          bitField0_ = (bitField0_ & ~0x00000008);
          datatype_ = com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataType.Unknown;
          onChanged();
          return this;
        }

        private boolean historical_ ;
        /**
         * <code>optional bool historical = 5;</code>
         *
         * <pre>
         * If this is historical data and should not update real time tag
         * </pre>
         */
        public boolean hasHistorical() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional bool historical = 5;</code>
         *
         * <pre>
         * If this is historical data and should not update real time tag
         * </pre>
         */
        public boolean getHistorical() {
          return historical_;
        }
        /**
         * <code>optional bool historical = 5;</code>
         *
         * <pre>
         * If this is historical data and should not update real time tag
         * </pre>
         */
        public Builder setHistorical(boolean value) {
          bitField0_ |= 0x00000010;
          historical_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool historical = 5;</code>
         *
         * <pre>
         * If this is historical data and should not update real time tag
         * </pre>
         */
        public Builder clearHistorical() {
          bitField0_ = (bitField0_ & ~0x00000010);
          historical_ = false;
          onChanged();
          return this;
        }

        private com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaData metadata_ = com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaData.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaData, com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaData.Builder, com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaDataOrBuilder> metadataBuilder_;
        /**
         * <code>optional .com.cirruslink.sparkplug.protobuf.Payload.Metric.MetaData metadata = 6;</code>
         *
         * <pre>
         * Metadata for the payload
         * </pre>
         */
        public boolean hasMetadata() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>optional .com.cirruslink.sparkplug.protobuf.Payload.Metric.MetaData metadata = 6;</code>
         *
         * <pre>
         * Metadata for the payload
         * </pre>
         */
        public com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaData getMetadata() {
          if (metadataBuilder_ == null) {
            return metadata_;
          } else {
            return metadataBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .com.cirruslink.sparkplug.protobuf.Payload.Metric.MetaData metadata = 6;</code>
         *
         * <pre>
         * Metadata for the payload
         * </pre>
         */
        public Builder setMetadata(com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaData value) {
          if (metadataBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            metadata_ = value;
            onChanged();
          } else {
            metadataBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000020;
          return this;
        }
        /**
         * <code>optional .com.cirruslink.sparkplug.protobuf.Payload.Metric.MetaData metadata = 6;</code>
         *
         * <pre>
         * Metadata for the payload
         * </pre>
         */
        public Builder setMetadata(
            com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaData.Builder builderForValue) {
          if (metadataBuilder_ == null) {
            metadata_ = builderForValue.build();
            onChanged();
          } else {
            metadataBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000020;
          return this;
        }
        /**
         * <code>optional .com.cirruslink.sparkplug.protobuf.Payload.Metric.MetaData metadata = 6;</code>
         *
         * <pre>
         * Metadata for the payload
         * </pre>
         */
        public Builder mergeMetadata(com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaData value) {
          if (metadataBuilder_ == null) {
            if (((bitField0_ & 0x00000020) == 0x00000020) &&
                metadata_ != com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaData.getDefaultInstance()) {
              metadata_ =
                com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaData.newBuilder(metadata_).mergeFrom(value).buildPartial();
            } else {
              metadata_ = value;
            }
            onChanged();
          } else {
            metadataBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000020;
          return this;
        }
        /**
         * <code>optional .com.cirruslink.sparkplug.protobuf.Payload.Metric.MetaData metadata = 6;</code>
         *
         * <pre>
         * Metadata for the payload
         * </pre>
         */
        public Builder clearMetadata() {
          if (metadataBuilder_ == null) {
            metadata_ = com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaData.getDefaultInstance();
            onChanged();
          } else {
            metadataBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000020);
          return this;
        }
        /**
         * <code>optional .com.cirruslink.sparkplug.protobuf.Payload.Metric.MetaData metadata = 6;</code>
         *
         * <pre>
         * Metadata for the payload
         * </pre>
         */
        public com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaData.Builder getMetadataBuilder() {
          bitField0_ |= 0x00000020;
          onChanged();
          return getMetadataFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .com.cirruslink.sparkplug.protobuf.Payload.Metric.MetaData metadata = 6;</code>
         *
         * <pre>
         * Metadata for the payload
         * </pre>
         */
        public com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaDataOrBuilder getMetadataOrBuilder() {
          if (metadataBuilder_ != null) {
            return metadataBuilder_.getMessageOrBuilder();
          } else {
            return metadata_;
          }
        }
        /**
         * <code>optional .com.cirruslink.sparkplug.protobuf.Payload.Metric.MetaData metadata = 6;</code>
         *
         * <pre>
         * Metadata for the payload
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaData, com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaData.Builder, com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaDataOrBuilder> 
            getMetadataFieldBuilder() {
          if (metadataBuilder_ == null) {
            metadataBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaData, com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaData.Builder, com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.MetaDataOrBuilder>(
                    getMetadata(),
                    getParentForChildren(),
                    isClean());
            metadata_ = null;
          }
          return metadataBuilder_;
        }

        private int intValue_ ;
        /**
         * <code>optional uint32 int_value = 7;</code>
         *
         * <pre>
         * Int1, Int2, Int4
         * </pre>
         */
        public boolean hasIntValue() {
          return ((bitField0_ & 0x00000040) == 0x00000040);
        }
        /**
         * <code>optional uint32 int_value = 7;</code>
         *
         * <pre>
         * Int1, Int2, Int4
         * </pre>
         */
        public int getIntValue() {
          return intValue_;
        }
        /**
         * <code>optional uint32 int_value = 7;</code>
         *
         * <pre>
         * Int1, Int2, Int4
         * </pre>
         */
        public Builder setIntValue(int value) {
          bitField0_ |= 0x00000040;
          intValue_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 int_value = 7;</code>
         *
         * <pre>
         * Int1, Int2, Int4
         * </pre>
         */
        public Builder clearIntValue() {
          bitField0_ = (bitField0_ & ~0x00000040);
          intValue_ = 0;
          onChanged();
          return this;
        }

        private long longValue_ ;
        /**
         * <code>optional uint64 long_value = 8;</code>
         *
         * <pre>
         * Int8, DateTime
         * </pre>
         */
        public boolean hasLongValue() {
          return ((bitField0_ & 0x00000080) == 0x00000080);
        }
        /**
         * <code>optional uint64 long_value = 8;</code>
         *
         * <pre>
         * Int8, DateTime
         * </pre>
         */
        public long getLongValue() {
          return longValue_;
        }
        /**
         * <code>optional uint64 long_value = 8;</code>
         *
         * <pre>
         * Int8, DateTime
         * </pre>
         */
        public Builder setLongValue(long value) {
          bitField0_ |= 0x00000080;
          longValue_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint64 long_value = 8;</code>
         *
         * <pre>
         * Int8, DateTime
         * </pre>
         */
        public Builder clearLongValue() {
          bitField0_ = (bitField0_ & ~0x00000080);
          longValue_ = 0L;
          onChanged();
          return this;
        }

        private float floatValue_ ;
        /**
         * <code>optional float float_value = 9;</code>
         *
         * <pre>
         * Float4
         * </pre>
         */
        public boolean hasFloatValue() {
          return ((bitField0_ & 0x00000100) == 0x00000100);
        }
        /**
         * <code>optional float float_value = 9;</code>
         *
         * <pre>
         * Float4
         * </pre>
         */
        public float getFloatValue() {
          return floatValue_;
        }
        /**
         * <code>optional float float_value = 9;</code>
         *
         * <pre>
         * Float4
         * </pre>
         */
        public Builder setFloatValue(float value) {
          bitField0_ |= 0x00000100;
          floatValue_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional float float_value = 9;</code>
         *
         * <pre>
         * Float4
         * </pre>
         */
        public Builder clearFloatValue() {
          bitField0_ = (bitField0_ & ~0x00000100);
          floatValue_ = 0F;
          onChanged();
          return this;
        }

        private double doubleValue_ ;
        /**
         * <code>optional double double_value = 10;</code>
         *
         * <pre>
         * Float8
         * </pre>
         */
        public boolean hasDoubleValue() {
          return ((bitField0_ & 0x00000200) == 0x00000200);
        }
        /**
         * <code>optional double double_value = 10;</code>
         *
         * <pre>
         * Float8
         * </pre>
         */
        public double getDoubleValue() {
          return doubleValue_;
        }
        /**
         * <code>optional double double_value = 10;</code>
         *
         * <pre>
         * Float8
         * </pre>
         */
        public Builder setDoubleValue(double value) {
          bitField0_ |= 0x00000200;
          doubleValue_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional double double_value = 10;</code>
         *
         * <pre>
         * Float8
         * </pre>
         */
        public Builder clearDoubleValue() {
          bitField0_ = (bitField0_ & ~0x00000200);
          doubleValue_ = 0D;
          onChanged();
          return this;
        }

        private boolean booleanValue_ ;
        /**
         * <code>optional bool boolean_value = 11;</code>
         *
         * <pre>
         * Boolean
         * </pre>
         */
        public boolean hasBooleanValue() {
          return ((bitField0_ & 0x00000400) == 0x00000400);
        }
        /**
         * <code>optional bool boolean_value = 11;</code>
         *
         * <pre>
         * Boolean
         * </pre>
         */
        public boolean getBooleanValue() {
          return booleanValue_;
        }
        /**
         * <code>optional bool boolean_value = 11;</code>
         *
         * <pre>
         * Boolean
         * </pre>
         */
        public Builder setBooleanValue(boolean value) {
          bitField0_ |= 0x00000400;
          booleanValue_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool boolean_value = 11;</code>
         *
         * <pre>
         * Boolean
         * </pre>
         */
        public Builder clearBooleanValue() {
          bitField0_ = (bitField0_ & ~0x00000400);
          booleanValue_ = false;
          onChanged();
          return this;
        }

        private java.lang.Object stringValue_ = "";
        /**
         * <code>optional string string_value = 12;</code>
         *
         * <pre>
         * String, Text
         * </pre>
         */
        public boolean hasStringValue() {
          return ((bitField0_ & 0x00000800) == 0x00000800);
        }
        /**
         * <code>optional string string_value = 12;</code>
         *
         * <pre>
         * String, Text
         * </pre>
         */
        public java.lang.String getStringValue() {
          java.lang.Object ref = stringValue_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              stringValue_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string string_value = 12;</code>
         *
         * <pre>
         * String, Text
         * </pre>
         */
        public com.google.protobuf.ByteString
            getStringValueBytes() {
          java.lang.Object ref = stringValue_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            stringValue_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string string_value = 12;</code>
         *
         * <pre>
         * String, Text
         * </pre>
         */
        public Builder setStringValue(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
          stringValue_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string string_value = 12;</code>
         *
         * <pre>
         * String, Text
         * </pre>
         */
        public Builder clearStringValue() {
          bitField0_ = (bitField0_ & ~0x00000800);
          stringValue_ = getDefaultInstance().getStringValue();
          onChanged();
          return this;
        }
        /**
         * <code>optional string string_value = 12;</code>
         *
         * <pre>
         * String, Text
         * </pre>
         */
        public Builder setStringValueBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
          stringValue_ = value;
          onChanged();
          return this;
        }

        private com.google.protobuf.ByteString bytesValue_ = com.google.protobuf.ByteString.EMPTY;
        /**
         * <code>optional bytes bytes_value = 13;</code>
         *
         * <pre>
         * Bytes, File, Script
         * </pre>
         */
        public boolean hasBytesValue() {
          return ((bitField0_ & 0x00001000) == 0x00001000);
        }
        /**
         * <code>optional bytes bytes_value = 13;</code>
         *
         * <pre>
         * Bytes, File, Script
         * </pre>
         */
        public com.google.protobuf.ByteString getBytesValue() {
          return bytesValue_;
        }
        /**
         * <code>optional bytes bytes_value = 13;</code>
         *
         * <pre>
         * Bytes, File, Script
         * </pre>
         */
        public Builder setBytesValue(com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00001000;
          bytesValue_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bytes bytes_value = 13;</code>
         *
         * <pre>
         * Bytes, File, Script
         * </pre>
         */
        public Builder clearBytesValue() {
          bitField0_ = (bitField0_ & ~0x00001000);
          bytesValue_ = getDefaultInstance().getBytesValue();
          onChanged();
          return this;
        }

        private com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet datasetValue_ = com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet, com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Builder, com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSetOrBuilder> datasetValueBuilder_;
        /**
         * <code>optional .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet dataset_value = 14;</code>
         *
         * <pre>
         * DataSet
         * </pre>
         */
        public boolean hasDatasetValue() {
          return ((bitField0_ & 0x00002000) == 0x00002000);
        }
        /**
         * <code>optional .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet dataset_value = 14;</code>
         *
         * <pre>
         * DataSet
         * </pre>
         */
        public com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet getDatasetValue() {
          if (datasetValueBuilder_ == null) {
            return datasetValue_;
          } else {
            return datasetValueBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet dataset_value = 14;</code>
         *
         * <pre>
         * DataSet
         * </pre>
         */
        public Builder setDatasetValue(com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet value) {
          if (datasetValueBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            datasetValue_ = value;
            onChanged();
          } else {
            datasetValueBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00002000;
          return this;
        }
        /**
         * <code>optional .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet dataset_value = 14;</code>
         *
         * <pre>
         * DataSet
         * </pre>
         */
        public Builder setDatasetValue(
            com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Builder builderForValue) {
          if (datasetValueBuilder_ == null) {
            datasetValue_ = builderForValue.build();
            onChanged();
          } else {
            datasetValueBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00002000;
          return this;
        }
        /**
         * <code>optional .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet dataset_value = 14;</code>
         *
         * <pre>
         * DataSet
         * </pre>
         */
        public Builder mergeDatasetValue(com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet value) {
          if (datasetValueBuilder_ == null) {
            if (((bitField0_ & 0x00002000) == 0x00002000) &&
                datasetValue_ != com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.getDefaultInstance()) {
              datasetValue_ =
                com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.newBuilder(datasetValue_).mergeFrom(value).buildPartial();
            } else {
              datasetValue_ = value;
            }
            onChanged();
          } else {
            datasetValueBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00002000;
          return this;
        }
        /**
         * <code>optional .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet dataset_value = 14;</code>
         *
         * <pre>
         * DataSet
         * </pre>
         */
        public Builder clearDatasetValue() {
          if (datasetValueBuilder_ == null) {
            datasetValue_ = com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.getDefaultInstance();
            onChanged();
          } else {
            datasetValueBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00002000);
          return this;
        }
        /**
         * <code>optional .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet dataset_value = 14;</code>
         *
         * <pre>
         * DataSet
         * </pre>
         */
        public com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Builder getDatasetValueBuilder() {
          bitField0_ |= 0x00002000;
          onChanged();
          return getDatasetValueFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet dataset_value = 14;</code>
         *
         * <pre>
         * DataSet
         * </pre>
         */
        public com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSetOrBuilder getDatasetValueOrBuilder() {
          if (datasetValueBuilder_ != null) {
            return datasetValueBuilder_.getMessageOrBuilder();
          } else {
            return datasetValue_;
          }
        }
        /**
         * <code>optional .com.cirruslink.sparkplug.protobuf.Payload.Metric.DataSet dataset_value = 14;</code>
         *
         * <pre>
         * DataSet
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet, com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Builder, com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSetOrBuilder> 
            getDatasetValueFieldBuilder() {
          if (datasetValueBuilder_ == null) {
            datasetValueBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet, com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSet.Builder, com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.DataSetOrBuilder>(
                    getDatasetValue(),
                    getParentForChildren(),
                    isClean());
            datasetValue_ = null;
          }
          return datasetValueBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:com.cirruslink.sparkplug.protobuf.Payload.Metric)
      }

      static {
        defaultInstance = new Metric(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:com.cirruslink.sparkplug.protobuf.Payload.Metric)
    }

    public interface UdtDefinitionOrBuilder extends
        // @@protoc_insertion_point(interface_extends:com.cirruslink.sparkplug.protobuf.Payload.UdtDefinition)
        com.google.protobuf.GeneratedMessage.
            ExtendableMessageOrBuilder<UdtDefinition> {

      /**
       * <code>optional string name = 1;</code>
       *
       * <pre>
       * The name of the UDT definition
       * </pre>
       */
      boolean hasName();
      /**
       * <code>optional string name = 1;</code>
       *
       * <pre>
       * The name of the UDT definition
       * </pre>
       */
      java.lang.String getName();
      /**
       * <code>optional string name = 1;</code>
       *
       * <pre>
       * The name of the UDT definition
       * </pre>
       */
      com.google.protobuf.ByteString
          getNameBytes();

      /**
       * <code>optional string version = 2;</code>
       *
       * <pre>
       * The version of the UDT definition to prevent mismatches
       * </pre>
       */
      boolean hasVersion();
      /**
       * <code>optional string version = 2;</code>
       *
       * <pre>
       * The version of the UDT definition to prevent mismatches
       * </pre>
       */
      java.lang.String getVersion();
      /**
       * <code>optional string version = 2;</code>
       *
       * <pre>
       * The version of the UDT definition to prevent mismatches
       * </pre>
       */
      com.google.protobuf.ByteString
          getVersionBytes();

      /**
       * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric members = 3;</code>
       *
       * <pre>
       * Each metric is the name of the member and the datatype of the member but does not contain a value
       * </pre>
       */
      java.util.List<com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric> 
          getMembersList();
      /**
       * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric members = 3;</code>
       *
       * <pre>
       * Each metric is the name of the member and the datatype of the member but does not contain a value
       * </pre>
       */
      com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric getMembers(int index);
      /**
       * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric members = 3;</code>
       *
       * <pre>
       * Each metric is the name of the member and the datatype of the member but does not contain a value
       * </pre>
       */
      int getMembersCount();
      /**
       * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric members = 3;</code>
       *
       * <pre>
       * Each metric is the name of the member and the datatype of the member but does not contain a value
       * </pre>
       */
      java.util.List<? extends com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.MetricOrBuilder> 
          getMembersOrBuilderList();
      /**
       * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric members = 3;</code>
       *
       * <pre>
       * Each metric is the name of the member and the datatype of the member but does not contain a value
       * </pre>
       */
      com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.MetricOrBuilder getMembersOrBuilder(
          int index);
    }
    /**
     * Protobuf type {@code com.cirruslink.sparkplug.protobuf.Payload.UdtDefinition}
     */
    public static final class UdtDefinition extends
        com.google.protobuf.GeneratedMessage.ExtendableMessage<
          UdtDefinition> implements
        // @@protoc_insertion_point(message_implements:com.cirruslink.sparkplug.protobuf.Payload.UdtDefinition)
        UdtDefinitionOrBuilder {
      // Use UdtDefinition.newBuilder() to construct.
      private UdtDefinition(com.google.protobuf.GeneratedMessage.ExtendableBuilder<com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.UdtDefinition, ?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private UdtDefinition(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final UdtDefinition defaultInstance;
      public static UdtDefinition getDefaultInstance() {
        return defaultInstance;
      }

      public UdtDefinition getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private UdtDefinition(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000001;
                name_ = bs;
                break;
              }
              case 18: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000002;
                version_ = bs;
                break;
              }
              case 26: {
                if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                  members_ = new java.util.ArrayList<com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric>();
                  mutable_bitField0_ |= 0x00000004;
                }
                members_.add(input.readMessage(com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.PARSER, extensionRegistry));
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
            members_ = java.util.Collections.unmodifiableList(members_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.cirruslink.sparkplug.protobuf.SparkplugBProto.internal_static_com_cirruslink_sparkplug_protobuf_Payload_UdtDefinition_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.cirruslink.sparkplug.protobuf.SparkplugBProto.internal_static_com_cirruslink_sparkplug_protobuf_Payload_UdtDefinition_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.UdtDefinition.class, com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.UdtDefinition.Builder.class);
      }

      public static com.google.protobuf.Parser<UdtDefinition> PARSER =
          new com.google.protobuf.AbstractParser<UdtDefinition>() {
        public UdtDefinition parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new UdtDefinition(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<UdtDefinition> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int NAME_FIELD_NUMBER = 1;
      private java.lang.Object name_;
      /**
       * <code>optional string name = 1;</code>
       *
       * <pre>
       * The name of the UDT definition
       * </pre>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string name = 1;</code>
       *
       * <pre>
       * The name of the UDT definition
       * </pre>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string name = 1;</code>
       *
       * <pre>
       * The name of the UDT definition
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int VERSION_FIELD_NUMBER = 2;
      private java.lang.Object version_;
      /**
       * <code>optional string version = 2;</code>
       *
       * <pre>
       * The version of the UDT definition to prevent mismatches
       * </pre>
       */
      public boolean hasVersion() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string version = 2;</code>
       *
       * <pre>
       * The version of the UDT definition to prevent mismatches
       * </pre>
       */
      public java.lang.String getVersion() {
        java.lang.Object ref = version_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            version_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string version = 2;</code>
       *
       * <pre>
       * The version of the UDT definition to prevent mismatches
       * </pre>
       */
      public com.google.protobuf.ByteString
          getVersionBytes() {
        java.lang.Object ref = version_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          version_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int MEMBERS_FIELD_NUMBER = 3;
      private java.util.List<com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric> members_;
      /**
       * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric members = 3;</code>
       *
       * <pre>
       * Each metric is the name of the member and the datatype of the member but does not contain a value
       * </pre>
       */
      public java.util.List<com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric> getMembersList() {
        return members_;
      }
      /**
       * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric members = 3;</code>
       *
       * <pre>
       * Each metric is the name of the member and the datatype of the member but does not contain a value
       * </pre>
       */
      public java.util.List<? extends com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.MetricOrBuilder> 
          getMembersOrBuilderList() {
        return members_;
      }
      /**
       * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric members = 3;</code>
       *
       * <pre>
       * Each metric is the name of the member and the datatype of the member but does not contain a value
       * </pre>
       */
      public int getMembersCount() {
        return members_.size();
      }
      /**
       * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric members = 3;</code>
       *
       * <pre>
       * Each metric is the name of the member and the datatype of the member but does not contain a value
       * </pre>
       */
      public com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric getMembers(int index) {
        return members_.get(index);
      }
      /**
       * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric members = 3;</code>
       *
       * <pre>
       * Each metric is the name of the member and the datatype of the member but does not contain a value
       * </pre>
       */
      public com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.MetricOrBuilder getMembersOrBuilder(
          int index) {
        return members_.get(index);
      }

      private void initFields() {
        name_ = "";
        version_ = "";
        members_ = java.util.Collections.emptyList();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        for (int i = 0; i < getMembersCount(); i++) {
          if (!getMembers(i).isInitialized()) {
            memoizedIsInitialized = 0;
            return false;
          }
        }
        if (!extensionsAreInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        com.google.protobuf.GeneratedMessage
          .ExtendableMessage<com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.UdtDefinition>.ExtensionWriter extensionWriter =
            newExtensionWriter();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBytes(1, getNameBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBytes(2, getVersionBytes());
        }
        for (int i = 0; i < members_.size(); i++) {
          output.writeMessage(3, members_.get(i));
        }
        extensionWriter.writeUntil(536870912, output);
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, getNameBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(2, getVersionBytes());
        }
        for (int i = 0; i < members_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, members_.get(i));
        }
        size += extensionsSerializedSize();
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.UdtDefinition parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.UdtDefinition parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.UdtDefinition parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.UdtDefinition parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.UdtDefinition parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.UdtDefinition parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.UdtDefinition parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.UdtDefinition parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.UdtDefinition parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.UdtDefinition parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.UdtDefinition prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code com.cirruslink.sparkplug.protobuf.Payload.UdtDefinition}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.ExtendableBuilder<
            com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.UdtDefinition, Builder> implements
          // @@protoc_insertion_point(builder_implements:com.cirruslink.sparkplug.protobuf.Payload.UdtDefinition)
          com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.UdtDefinitionOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.cirruslink.sparkplug.protobuf.SparkplugBProto.internal_static_com_cirruslink_sparkplug_protobuf_Payload_UdtDefinition_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.cirruslink.sparkplug.protobuf.SparkplugBProto.internal_static_com_cirruslink_sparkplug_protobuf_Payload_UdtDefinition_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.UdtDefinition.class, com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.UdtDefinition.Builder.class);
        }

        // Construct using com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.UdtDefinition.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getMembersFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          name_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          version_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          if (membersBuilder_ == null) {
            members_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            membersBuilder_.clear();
          }
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.cirruslink.sparkplug.protobuf.SparkplugBProto.internal_static_com_cirruslink_sparkplug_protobuf_Payload_UdtDefinition_descriptor;
        }

        public com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.UdtDefinition getDefaultInstanceForType() {
          return com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.UdtDefinition.getDefaultInstance();
        }

        public com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.UdtDefinition build() {
          com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.UdtDefinition result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.UdtDefinition buildPartial() {
          com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.UdtDefinition result = new com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.UdtDefinition(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.name_ = name_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.version_ = version_;
          if (membersBuilder_ == null) {
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
              members_ = java.util.Collections.unmodifiableList(members_);
              bitField0_ = (bitField0_ & ~0x00000004);
            }
            result.members_ = members_;
          } else {
            result.members_ = membersBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.UdtDefinition) {
            return mergeFrom((com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.UdtDefinition)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.UdtDefinition other) {
          if (other == com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.UdtDefinition.getDefaultInstance()) return this;
          if (other.hasName()) {
            bitField0_ |= 0x00000001;
            name_ = other.name_;
            onChanged();
          }
          if (other.hasVersion()) {
            bitField0_ |= 0x00000002;
            version_ = other.version_;
            onChanged();
          }
          if (membersBuilder_ == null) {
            if (!other.members_.isEmpty()) {
              if (members_.isEmpty()) {
                members_ = other.members_;
                bitField0_ = (bitField0_ & ~0x00000004);
              } else {
                ensureMembersIsMutable();
                members_.addAll(other.members_);
              }
              onChanged();
            }
          } else {
            if (!other.members_.isEmpty()) {
              if (membersBuilder_.isEmpty()) {
                membersBuilder_.dispose();
                membersBuilder_ = null;
                members_ = other.members_;
                bitField0_ = (bitField0_ & ~0x00000004);
                membersBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getMembersFieldBuilder() : null;
              } else {
                membersBuilder_.addAllMessages(other.members_);
              }
            }
          }
          this.mergeExtensionFields(other);
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          for (int i = 0; i < getMembersCount(); i++) {
            if (!getMembers(i).isInitialized()) {
              
              return false;
            }
          }
          if (!extensionsAreInitialized()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.UdtDefinition parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.UdtDefinition) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.lang.Object name_ = "";
        /**
         * <code>optional string name = 1;</code>
         *
         * <pre>
         * The name of the UDT definition
         * </pre>
         */
        public boolean hasName() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional string name = 1;</code>
         *
         * <pre>
         * The name of the UDT definition
         * </pre>
         */
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              name_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string name = 1;</code>
         *
         * <pre>
         * The name of the UDT definition
         * </pre>
         */
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string name = 1;</code>
         *
         * <pre>
         * The name of the UDT definition
         * </pre>
         */
        public Builder setName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          name_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string name = 1;</code>
         *
         * <pre>
         * The name of the UDT definition
         * </pre>
         */
        public Builder clearName() {
          bitField0_ = (bitField0_ & ~0x00000001);
          name_ = getDefaultInstance().getName();
          onChanged();
          return this;
        }
        /**
         * <code>optional string name = 1;</code>
         *
         * <pre>
         * The name of the UDT definition
         * </pre>
         */
        public Builder setNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          name_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object version_ = "";
        /**
         * <code>optional string version = 2;</code>
         *
         * <pre>
         * The version of the UDT definition to prevent mismatches
         * </pre>
         */
        public boolean hasVersion() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional string version = 2;</code>
         *
         * <pre>
         * The version of the UDT definition to prevent mismatches
         * </pre>
         */
        public java.lang.String getVersion() {
          java.lang.Object ref = version_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              version_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string version = 2;</code>
         *
         * <pre>
         * The version of the UDT definition to prevent mismatches
         * </pre>
         */
        public com.google.protobuf.ByteString
            getVersionBytes() {
          java.lang.Object ref = version_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            version_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string version = 2;</code>
         *
         * <pre>
         * The version of the UDT definition to prevent mismatches
         * </pre>
         */
        public Builder setVersion(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          version_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string version = 2;</code>
         *
         * <pre>
         * The version of the UDT definition to prevent mismatches
         * </pre>
         */
        public Builder clearVersion() {
          bitField0_ = (bitField0_ & ~0x00000002);
          version_ = getDefaultInstance().getVersion();
          onChanged();
          return this;
        }
        /**
         * <code>optional string version = 2;</code>
         *
         * <pre>
         * The version of the UDT definition to prevent mismatches
         * </pre>
         */
        public Builder setVersionBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          version_ = value;
          onChanged();
          return this;
        }

        private java.util.List<com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric> members_ =
          java.util.Collections.emptyList();
        private void ensureMembersIsMutable() {
          if (!((bitField0_ & 0x00000004) == 0x00000004)) {
            members_ = new java.util.ArrayList<com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric>(members_);
            bitField0_ |= 0x00000004;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric, com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.Builder, com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.MetricOrBuilder> membersBuilder_;

        /**
         * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric members = 3;</code>
         *
         * <pre>
         * Each metric is the name of the member and the datatype of the member but does not contain a value
         * </pre>
         */
        public java.util.List<com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric> getMembersList() {
          if (membersBuilder_ == null) {
            return java.util.Collections.unmodifiableList(members_);
          } else {
            return membersBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric members = 3;</code>
         *
         * <pre>
         * Each metric is the name of the member and the datatype of the member but does not contain a value
         * </pre>
         */
        public int getMembersCount() {
          if (membersBuilder_ == null) {
            return members_.size();
          } else {
            return membersBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric members = 3;</code>
         *
         * <pre>
         * Each metric is the name of the member and the datatype of the member but does not contain a value
         * </pre>
         */
        public com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric getMembers(int index) {
          if (membersBuilder_ == null) {
            return members_.get(index);
          } else {
            return membersBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric members = 3;</code>
         *
         * <pre>
         * Each metric is the name of the member and the datatype of the member but does not contain a value
         * </pre>
         */
        public Builder setMembers(
            int index, com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric value) {
          if (membersBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureMembersIsMutable();
            members_.set(index, value);
            onChanged();
          } else {
            membersBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric members = 3;</code>
         *
         * <pre>
         * Each metric is the name of the member and the datatype of the member but does not contain a value
         * </pre>
         */
        public Builder setMembers(
            int index, com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.Builder builderForValue) {
          if (membersBuilder_ == null) {
            ensureMembersIsMutable();
            members_.set(index, builderForValue.build());
            onChanged();
          } else {
            membersBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric members = 3;</code>
         *
         * <pre>
         * Each metric is the name of the member and the datatype of the member but does not contain a value
         * </pre>
         */
        public Builder addMembers(com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric value) {
          if (membersBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureMembersIsMutable();
            members_.add(value);
            onChanged();
          } else {
            membersBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric members = 3;</code>
         *
         * <pre>
         * Each metric is the name of the member and the datatype of the member but does not contain a value
         * </pre>
         */
        public Builder addMembers(
            int index, com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric value) {
          if (membersBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureMembersIsMutable();
            members_.add(index, value);
            onChanged();
          } else {
            membersBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric members = 3;</code>
         *
         * <pre>
         * Each metric is the name of the member and the datatype of the member but does not contain a value
         * </pre>
         */
        public Builder addMembers(
            com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.Builder builderForValue) {
          if (membersBuilder_ == null) {
            ensureMembersIsMutable();
            members_.add(builderForValue.build());
            onChanged();
          } else {
            membersBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric members = 3;</code>
         *
         * <pre>
         * Each metric is the name of the member and the datatype of the member but does not contain a value
         * </pre>
         */
        public Builder addMembers(
            int index, com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.Builder builderForValue) {
          if (membersBuilder_ == null) {
            ensureMembersIsMutable();
            members_.add(index, builderForValue.build());
            onChanged();
          } else {
            membersBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric members = 3;</code>
         *
         * <pre>
         * Each metric is the name of the member and the datatype of the member but does not contain a value
         * </pre>
         */
        public Builder addAllMembers(
            java.lang.Iterable<? extends com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric> values) {
          if (membersBuilder_ == null) {
            ensureMembersIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, members_);
            onChanged();
          } else {
            membersBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric members = 3;</code>
         *
         * <pre>
         * Each metric is the name of the member and the datatype of the member but does not contain a value
         * </pre>
         */
        public Builder clearMembers() {
          if (membersBuilder_ == null) {
            members_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000004);
            onChanged();
          } else {
            membersBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric members = 3;</code>
         *
         * <pre>
         * Each metric is the name of the member and the datatype of the member but does not contain a value
         * </pre>
         */
        public Builder removeMembers(int index) {
          if (membersBuilder_ == null) {
            ensureMembersIsMutable();
            members_.remove(index);
            onChanged();
          } else {
            membersBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric members = 3;</code>
         *
         * <pre>
         * Each metric is the name of the member and the datatype of the member but does not contain a value
         * </pre>
         */
        public com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.Builder getMembersBuilder(
            int index) {
          return getMembersFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric members = 3;</code>
         *
         * <pre>
         * Each metric is the name of the member and the datatype of the member but does not contain a value
         * </pre>
         */
        public com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.MetricOrBuilder getMembersOrBuilder(
            int index) {
          if (membersBuilder_ == null) {
            return members_.get(index);  } else {
            return membersBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric members = 3;</code>
         *
         * <pre>
         * Each metric is the name of the member and the datatype of the member but does not contain a value
         * </pre>
         */
        public java.util.List<? extends com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.MetricOrBuilder> 
             getMembersOrBuilderList() {
          if (membersBuilder_ != null) {
            return membersBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(members_);
          }
        }
        /**
         * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric members = 3;</code>
         *
         * <pre>
         * Each metric is the name of the member and the datatype of the member but does not contain a value
         * </pre>
         */
        public com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.Builder addMembersBuilder() {
          return getMembersFieldBuilder().addBuilder(
              com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.getDefaultInstance());
        }
        /**
         * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric members = 3;</code>
         *
         * <pre>
         * Each metric is the name of the member and the datatype of the member but does not contain a value
         * </pre>
         */
        public com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.Builder addMembersBuilder(
            int index) {
          return getMembersFieldBuilder().addBuilder(
              index, com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.getDefaultInstance());
        }
        /**
         * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric members = 3;</code>
         *
         * <pre>
         * Each metric is the name of the member and the datatype of the member but does not contain a value
         * </pre>
         */
        public java.util.List<com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.Builder> 
             getMembersBuilderList() {
          return getMembersFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric, com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.Builder, com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.MetricOrBuilder> 
            getMembersFieldBuilder() {
          if (membersBuilder_ == null) {
            membersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric, com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.Builder, com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.MetricOrBuilder>(
                    members_,
                    ((bitField0_ & 0x00000004) == 0x00000004),
                    getParentForChildren(),
                    isClean());
            members_ = null;
          }
          return membersBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:com.cirruslink.sparkplug.protobuf.Payload.UdtDefinition)
      }

      static {
        defaultInstance = new UdtDefinition(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:com.cirruslink.sparkplug.protobuf.Payload.UdtDefinition)
    }

    private int bitField0_;
    public static final int TIMESTAMP_FIELD_NUMBER = 1;
    private long timestamp_;
    /**
     * <code>optional uint64 timestamp = 1;</code>
     *
     * <pre>
     * Timestamp at message sending time
     * </pre>
     */
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint64 timestamp = 1;</code>
     *
     * <pre>
     * Timestamp at message sending time
     * </pre>
     */
    public long getTimestamp() {
      return timestamp_;
    }

    public static final int METRIC_FIELD_NUMBER = 2;
    private java.util.List<com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric> metric_;
    /**
     * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric metric = 2;</code>
     *
     * <pre>
     * Repeated forever - no limit in Google Protobufs
     * </pre>
     */
    public java.util.List<com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric> getMetricList() {
      return metric_;
    }
    /**
     * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric metric = 2;</code>
     *
     * <pre>
     * Repeated forever - no limit in Google Protobufs
     * </pre>
     */
    public java.util.List<? extends com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.MetricOrBuilder> 
        getMetricOrBuilderList() {
      return metric_;
    }
    /**
     * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric metric = 2;</code>
     *
     * <pre>
     * Repeated forever - no limit in Google Protobufs
     * </pre>
     */
    public int getMetricCount() {
      return metric_.size();
    }
    /**
     * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric metric = 2;</code>
     *
     * <pre>
     * Repeated forever - no limit in Google Protobufs
     * </pre>
     */
    public com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric getMetric(int index) {
      return metric_.get(index);
    }
    /**
     * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric metric = 2;</code>
     *
     * <pre>
     * Repeated forever - no limit in Google Protobufs
     * </pre>
     */
    public com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.MetricOrBuilder getMetricOrBuilder(
        int index) {
      return metric_.get(index);
    }

    public static final int SEQ_FIELD_NUMBER = 3;
    private long seq_;
    /**
     * <code>optional uint64 seq = 3;</code>
     *
     * <pre>
     * Sequence number
     * </pre>
     */
    public boolean hasSeq() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint64 seq = 3;</code>
     *
     * <pre>
     * Sequence number
     * </pre>
     */
    public long getSeq() {
      return seq_;
    }

    public static final int UUID_FIELD_NUMBER = 4;
    private java.lang.Object uuid_;
    /**
     * <code>optional string uuid = 4;</code>
     *
     * <pre>
     * UUID to track message type in terms of schema definitions
     * </pre>
     */
    public boolean hasUuid() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string uuid = 4;</code>
     *
     * <pre>
     * UUID to track message type in terms of schema definitions
     * </pre>
     */
    public java.lang.String getUuid() {
      java.lang.Object ref = uuid_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          uuid_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string uuid = 4;</code>
     *
     * <pre>
     * UUID to track message type in terms of schema definitions
     * </pre>
     */
    public com.google.protobuf.ByteString
        getUuidBytes() {
      java.lang.Object ref = uuid_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        uuid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BODY_FIELD_NUMBER = 5;
    private com.google.protobuf.ByteString body_;
    /**
     * <code>optional bytes body = 5;</code>
     *
     * <pre>
     * To optionally bypass the whole definition above
     * </pre>
     */
    public boolean hasBody() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional bytes body = 5;</code>
     *
     * <pre>
     * To optionally bypass the whole definition above
     * </pre>
     */
    public com.google.protobuf.ByteString getBody() {
      return body_;
    }

    private void initFields() {
      timestamp_ = 0L;
      metric_ = java.util.Collections.emptyList();
      seq_ = 0L;
      uuid_ = "";
      body_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      for (int i = 0; i < getMetricCount(); i++) {
        if (!getMetric(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (!extensionsAreInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      com.google.protobuf.GeneratedMessage
        .ExtendableMessage<com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload>.ExtensionWriter extensionWriter =
          newExtensionWriter();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, timestamp_);
      }
      for (int i = 0; i < metric_.size(); i++) {
        output.writeMessage(2, metric_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(3, seq_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(4, getUuidBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(5, body_);
      }
      extensionWriter.writeUntil(536870912, output);
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, timestamp_);
      }
      for (int i = 0; i < metric_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, metric_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, seq_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getUuidBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, body_);
      }
      size += extensionsSerializedSize();
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.cirruslink.sparkplug.protobuf.Payload}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.ExtendableBuilder<
          com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload, Builder> implements
        // @@protoc_insertion_point(builder_implements:com.cirruslink.sparkplug.protobuf.Payload)
        com.cirruslink.sparkplug.protobuf.SparkplugBProto.PayloadOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.cirruslink.sparkplug.protobuf.SparkplugBProto.internal_static_com_cirruslink_sparkplug_protobuf_Payload_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.cirruslink.sparkplug.protobuf.SparkplugBProto.internal_static_com_cirruslink_sparkplug_protobuf_Payload_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.class, com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Builder.class);
      }

      // Construct using com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMetricFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        timestamp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (metricBuilder_ == null) {
          metric_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          metricBuilder_.clear();
        }
        seq_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        uuid_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        body_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.cirruslink.sparkplug.protobuf.SparkplugBProto.internal_static_com_cirruslink_sparkplug_protobuf_Payload_descriptor;
      }

      public com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload getDefaultInstanceForType() {
        return com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.getDefaultInstance();
      }

      public com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload build() {
        com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload buildPartial() {
        com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload result = new com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.timestamp_ = timestamp_;
        if (metricBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            metric_ = java.util.Collections.unmodifiableList(metric_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.metric_ = metric_;
        } else {
          result.metric_ = metricBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.seq_ = seq_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.uuid_ = uuid_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.body_ = body_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload) {
          return mergeFrom((com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload other) {
        if (other == com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.getDefaultInstance()) return this;
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        if (metricBuilder_ == null) {
          if (!other.metric_.isEmpty()) {
            if (metric_.isEmpty()) {
              metric_ = other.metric_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureMetricIsMutable();
              metric_.addAll(other.metric_);
            }
            onChanged();
          }
        } else {
          if (!other.metric_.isEmpty()) {
            if (metricBuilder_.isEmpty()) {
              metricBuilder_.dispose();
              metricBuilder_ = null;
              metric_ = other.metric_;
              bitField0_ = (bitField0_ & ~0x00000002);
              metricBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMetricFieldBuilder() : null;
            } else {
              metricBuilder_.addAllMessages(other.metric_);
            }
          }
        }
        if (other.hasSeq()) {
          setSeq(other.getSeq());
        }
        if (other.hasUuid()) {
          bitField0_ |= 0x00000008;
          uuid_ = other.uuid_;
          onChanged();
        }
        if (other.hasBody()) {
          setBody(other.getBody());
        }
        this.mergeExtensionFields(other);
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getMetricCount(); i++) {
          if (!getMetric(i).isInitialized()) {
            
            return false;
          }
        }
        if (!extensionsAreInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long timestamp_ ;
      /**
       * <code>optional uint64 timestamp = 1;</code>
       *
       * <pre>
       * Timestamp at message sending time
       * </pre>
       */
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint64 timestamp = 1;</code>
       *
       * <pre>
       * Timestamp at message sending time
       * </pre>
       */
      public long getTimestamp() {
        return timestamp_;
      }
      /**
       * <code>optional uint64 timestamp = 1;</code>
       *
       * <pre>
       * Timestamp at message sending time
       * </pre>
       */
      public Builder setTimestamp(long value) {
        bitField0_ |= 0x00000001;
        timestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 timestamp = 1;</code>
       *
       * <pre>
       * Timestamp at message sending time
       * </pre>
       */
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000001);
        timestamp_ = 0L;
        onChanged();
        return this;
      }

      private java.util.List<com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric> metric_ =
        java.util.Collections.emptyList();
      private void ensureMetricIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          metric_ = new java.util.ArrayList<com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric>(metric_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric, com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.Builder, com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.MetricOrBuilder> metricBuilder_;

      /**
       * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric metric = 2;</code>
       *
       * <pre>
       * Repeated forever - no limit in Google Protobufs
       * </pre>
       */
      public java.util.List<com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric> getMetricList() {
        if (metricBuilder_ == null) {
          return java.util.Collections.unmodifiableList(metric_);
        } else {
          return metricBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric metric = 2;</code>
       *
       * <pre>
       * Repeated forever - no limit in Google Protobufs
       * </pre>
       */
      public int getMetricCount() {
        if (metricBuilder_ == null) {
          return metric_.size();
        } else {
          return metricBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric metric = 2;</code>
       *
       * <pre>
       * Repeated forever - no limit in Google Protobufs
       * </pre>
       */
      public com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric getMetric(int index) {
        if (metricBuilder_ == null) {
          return metric_.get(index);
        } else {
          return metricBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric metric = 2;</code>
       *
       * <pre>
       * Repeated forever - no limit in Google Protobufs
       * </pre>
       */
      public Builder setMetric(
          int index, com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric value) {
        if (metricBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetricIsMutable();
          metric_.set(index, value);
          onChanged();
        } else {
          metricBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric metric = 2;</code>
       *
       * <pre>
       * Repeated forever - no limit in Google Protobufs
       * </pre>
       */
      public Builder setMetric(
          int index, com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.Builder builderForValue) {
        if (metricBuilder_ == null) {
          ensureMetricIsMutable();
          metric_.set(index, builderForValue.build());
          onChanged();
        } else {
          metricBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric metric = 2;</code>
       *
       * <pre>
       * Repeated forever - no limit in Google Protobufs
       * </pre>
       */
      public Builder addMetric(com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric value) {
        if (metricBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetricIsMutable();
          metric_.add(value);
          onChanged();
        } else {
          metricBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric metric = 2;</code>
       *
       * <pre>
       * Repeated forever - no limit in Google Protobufs
       * </pre>
       */
      public Builder addMetric(
          int index, com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric value) {
        if (metricBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetricIsMutable();
          metric_.add(index, value);
          onChanged();
        } else {
          metricBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric metric = 2;</code>
       *
       * <pre>
       * Repeated forever - no limit in Google Protobufs
       * </pre>
       */
      public Builder addMetric(
          com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.Builder builderForValue) {
        if (metricBuilder_ == null) {
          ensureMetricIsMutable();
          metric_.add(builderForValue.build());
          onChanged();
        } else {
          metricBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric metric = 2;</code>
       *
       * <pre>
       * Repeated forever - no limit in Google Protobufs
       * </pre>
       */
      public Builder addMetric(
          int index, com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.Builder builderForValue) {
        if (metricBuilder_ == null) {
          ensureMetricIsMutable();
          metric_.add(index, builderForValue.build());
          onChanged();
        } else {
          metricBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric metric = 2;</code>
       *
       * <pre>
       * Repeated forever - no limit in Google Protobufs
       * </pre>
       */
      public Builder addAllMetric(
          java.lang.Iterable<? extends com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric> values) {
        if (metricBuilder_ == null) {
          ensureMetricIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, metric_);
          onChanged();
        } else {
          metricBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric metric = 2;</code>
       *
       * <pre>
       * Repeated forever - no limit in Google Protobufs
       * </pre>
       */
      public Builder clearMetric() {
        if (metricBuilder_ == null) {
          metric_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          metricBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric metric = 2;</code>
       *
       * <pre>
       * Repeated forever - no limit in Google Protobufs
       * </pre>
       */
      public Builder removeMetric(int index) {
        if (metricBuilder_ == null) {
          ensureMetricIsMutable();
          metric_.remove(index);
          onChanged();
        } else {
          metricBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric metric = 2;</code>
       *
       * <pre>
       * Repeated forever - no limit in Google Protobufs
       * </pre>
       */
      public com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.Builder getMetricBuilder(
          int index) {
        return getMetricFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric metric = 2;</code>
       *
       * <pre>
       * Repeated forever - no limit in Google Protobufs
       * </pre>
       */
      public com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.MetricOrBuilder getMetricOrBuilder(
          int index) {
        if (metricBuilder_ == null) {
          return metric_.get(index);  } else {
          return metricBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric metric = 2;</code>
       *
       * <pre>
       * Repeated forever - no limit in Google Protobufs
       * </pre>
       */
      public java.util.List<? extends com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.MetricOrBuilder> 
           getMetricOrBuilderList() {
        if (metricBuilder_ != null) {
          return metricBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(metric_);
        }
      }
      /**
       * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric metric = 2;</code>
       *
       * <pre>
       * Repeated forever - no limit in Google Protobufs
       * </pre>
       */
      public com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.Builder addMetricBuilder() {
        return getMetricFieldBuilder().addBuilder(
            com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.getDefaultInstance());
      }
      /**
       * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric metric = 2;</code>
       *
       * <pre>
       * Repeated forever - no limit in Google Protobufs
       * </pre>
       */
      public com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.Builder addMetricBuilder(
          int index) {
        return getMetricFieldBuilder().addBuilder(
            index, com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.getDefaultInstance());
      }
      /**
       * <code>repeated .com.cirruslink.sparkplug.protobuf.Payload.Metric metric = 2;</code>
       *
       * <pre>
       * Repeated forever - no limit in Google Protobufs
       * </pre>
       */
      public java.util.List<com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.Builder> 
           getMetricBuilderList() {
        return getMetricFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric, com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.Builder, com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.MetricOrBuilder> 
          getMetricFieldBuilder() {
        if (metricBuilder_ == null) {
          metricBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric, com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.Metric.Builder, com.cirruslink.sparkplug.protobuf.SparkplugBProto.Payload.MetricOrBuilder>(
                  metric_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          metric_ = null;
        }
        return metricBuilder_;
      }

      private long seq_ ;
      /**
       * <code>optional uint64 seq = 3;</code>
       *
       * <pre>
       * Sequence number
       * </pre>
       */
      public boolean hasSeq() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint64 seq = 3;</code>
       *
       * <pre>
       * Sequence number
       * </pre>
       */
      public long getSeq() {
        return seq_;
      }
      /**
       * <code>optional uint64 seq = 3;</code>
       *
       * <pre>
       * Sequence number
       * </pre>
       */
      public Builder setSeq(long value) {
        bitField0_ |= 0x00000004;
        seq_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 seq = 3;</code>
       *
       * <pre>
       * Sequence number
       * </pre>
       */
      public Builder clearSeq() {
        bitField0_ = (bitField0_ & ~0x00000004);
        seq_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object uuid_ = "";
      /**
       * <code>optional string uuid = 4;</code>
       *
       * <pre>
       * UUID to track message type in terms of schema definitions
       * </pre>
       */
      public boolean hasUuid() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string uuid = 4;</code>
       *
       * <pre>
       * UUID to track message type in terms of schema definitions
       * </pre>
       */
      public java.lang.String getUuid() {
        java.lang.Object ref = uuid_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            uuid_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string uuid = 4;</code>
       *
       * <pre>
       * UUID to track message type in terms of schema definitions
       * </pre>
       */
      public com.google.protobuf.ByteString
          getUuidBytes() {
        java.lang.Object ref = uuid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          uuid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string uuid = 4;</code>
       *
       * <pre>
       * UUID to track message type in terms of schema definitions
       * </pre>
       */
      public Builder setUuid(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        uuid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string uuid = 4;</code>
       *
       * <pre>
       * UUID to track message type in terms of schema definitions
       * </pre>
       */
      public Builder clearUuid() {
        bitField0_ = (bitField0_ & ~0x00000008);
        uuid_ = getDefaultInstance().getUuid();
        onChanged();
        return this;
      }
      /**
       * <code>optional string uuid = 4;</code>
       *
       * <pre>
       * UUID to track message type in terms of schema definitions
       * </pre>
       */
      public Builder setUuidBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        uuid_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString body_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes body = 5;</code>
       *
       * <pre>
       * To optionally bypass the whole definition above
       * </pre>
       */
      public boolean hasBody() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional bytes body = 5;</code>
       *
       * <pre>
       * To optionally bypass the whole definition above
       * </pre>
       */
      public com.google.protobuf.ByteString getBody() {
        return body_;
      }
      /**
       * <code>optional bytes body = 5;</code>
       *
       * <pre>
       * To optionally bypass the whole definition above
       * </pre>
       */
      public Builder setBody(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        body_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes body = 5;</code>
       *
       * <pre>
       * To optionally bypass the whole definition above
       * </pre>
       */
      public Builder clearBody() {
        bitField0_ = (bitField0_ & ~0x00000010);
        body_ = getDefaultInstance().getBody();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.cirruslink.sparkplug.protobuf.Payload)
    }

    static {
      defaultInstance = new Payload(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.cirruslink.sparkplug.protobuf.Payload)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_cirruslink_sparkplug_protobuf_Payload_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_cirruslink_sparkplug_protobuf_Payload_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_cirruslink_sparkplug_protobuf_Payload_Metric_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_cirruslink_sparkplug_protobuf_Payload_Metric_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_cirruslink_sparkplug_protobuf_Payload_Metric_MetaData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_cirruslink_sparkplug_protobuf_Payload_Metric_MetaData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_cirruslink_sparkplug_protobuf_Payload_Metric_MetaField_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_cirruslink_sparkplug_protobuf_Payload_Metric_MetaField_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_cirruslink_sparkplug_protobuf_Payload_Metric_DataSet_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_cirruslink_sparkplug_protobuf_Payload_Metric_DataSet_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_cirruslink_sparkplug_protobuf_Payload_Metric_DataSet_Value_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_cirruslink_sparkplug_protobuf_Payload_Metric_DataSet_Value_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_cirruslink_sparkplug_protobuf_Payload_Metric_DataSet_Row_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_cirruslink_sparkplug_protobuf_Payload_Metric_DataSet_Row_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_cirruslink_sparkplug_protobuf_Payload_UdtDefinition_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_cirruslink_sparkplug_protobuf_Payload_UdtDefinition_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\021sparkplug_b.proto\022!com.cirruslink.spar" +
      "kplug.protobuf\"\350\020\n\007Payload\022\021\n\ttimestamp\030" +
      "\001 \001(\004\022A\n\006metric\030\002 \003(\01321.com.cirruslink.s" +
      "parkplug.protobuf.Payload.Metric\022\013\n\003seq\030" +
      "\003 \001(\004\022\014\n\004uuid\030\004 \001(\t\022\014\n\004body\030\005 \001(\014\032\325\016\n\006Me" +
      "tric\022\014\n\004name\030\001 \001(\t\022\r\n\005alias\030\002 \001(\004\022\021\n\ttim" +
      "estamp\030\003 \001(\004\022L\n\010datatype\030\004 \001(\0162:.com.cir" +
      "ruslink.sparkplug.protobuf.Payload.Metri" +
      "c.DataType\022\022\n\nhistorical\030\005 \001(\010\022L\n\010metada" +
      "ta\030\006 \001(\0132:.com.cirruslink.sparkplug.prot",
      "obuf.Payload.Metric.MetaData\022\021\n\tint_valu" +
      "e\030\007 \001(\r\022\022\n\nlong_value\030\010 \001(\004\022\023\n\013float_val" +
      "ue\030\t \001(\002\022\024\n\014double_value\030\n \001(\001\022\025\n\rboolea" +
      "n_value\030\013 \001(\010\022\024\n\014string_value\030\014 \001(\t\022\023\n\013b" +
      "ytes_value\030\r \001(\014\022P\n\rdataset_value\030\016 \001(\0132" +
      "9.com.cirruslink.sparkplug.protobuf.Payl" +
      "oad.Metric.DataSet\032\200\002\n\010MetaData\022\023\n\013isMul" +
      "tiPart\030\001 \001(\010\022\024\n\014content_type\030\002 \001(\t\022\014\n\004si" +
      "ze\030\003 \001(\004\022\013\n\003seq\030\004 \001(\004\022\021\n\tfile_name\030\005 \001(\t" +
      "\022\021\n\tfile_type\030\006 \001(\t\022\013\n\003md5\030\007 \001(\t\022\016\n\006type",
      "Id\030\010 \001(\t\022\023\n\013description\030\t \001(\t\022L\n\007members" +
      "\030\n \003(\0132;.com.cirruslink.sparkplug.protob" +
      "uf.Payload.Metric.MetaField*\010\010\013\020\200\200\200\200\002\032\327\002" +
      "\n\tMetaField\022\014\n\004name\030\001 \001(\t\022L\n\010datatype\030\002 " +
      "\001(\0162:.com.cirruslink.sparkplug.protobuf." +
      "Payload.Metric.DataType\022\021\n\tint_value\030\003 \001" +
      "(\r\022\022\n\nlong_value\030\004 \001(\004\022\023\n\013float_value\030\005 " +
      "\001(\002\022\024\n\014double_value\030\006 \001(\001\022\025\n\rboolean_val" +
      "ue\030\007 \001(\010\022\024\n\014string_value\030\010 \001(\t\022\023\n\013bytes_" +
      "value\030\t \001(\014\022P\n\rdataset_value\030\n \001(\01329.com",
      ".cirruslink.sparkplug.protobuf.Payload.M" +
      "etric.DataSet*\010\010\013\020\200\200\200\200\002\032\347\004\n\007DataSet\022\026\n\016n" +
      "um_of_columns\030\001 \001(\004\022\017\n\007columns\030\002 \003(\t\022Q\n\005" +
      "types\030\003 \003(\0162B.com.cirruslink.sparkplug.p" +
      "rotobuf.Payload.Metric.DataSet.DataType\022" +
      "K\n\004rows\030\004 \003(\0132=.com.cirruslink.sparkplug" +
      ".protobuf.Payload.Metric.DataSet.Row\032\220\001\n" +
      "\005Value\022\021\n\tint_value\030\001 \001(\r\022\022\n\nlong_value\030" +
      "\002 \001(\004\022\023\n\013float_value\030\003 \001(\002\022\024\n\014double_val" +
      "ue\030\004 \001(\001\022\025\n\rboolean_value\030\005 \001(\010\022\024\n\014strin",
      "g_value\030\006 \001(\t*\010\010\007\020\200\200\200\200\002\032a\n\003Row\022P\n\007elemen" +
      "t\030\001 \003(\0132?.com.cirruslink.sparkplug.proto" +
      "buf.Payload.Metric.DataSet.Value*\010\010\002\020\200\200\200" +
      "\200\002\"\222\001\n\010DataType\022\013\n\007Unknown\020\000\022\010\n\004Int1\020\001\022\010" +
      "\n\004Int2\020\002\022\010\n\004Int4\020\003\022\010\n\004Int8\020\004\022\n\n\006Float4\020\005" +
      "\022\n\n\006Float8\020\006\022\013\n\007Boolean\020\007\022\n\n\006String\020\010\022\014\n" +
      "\010DateTime\020\t\022\010\n\004Text\020\n\022\010\n\004Null\020\013*\010\010\005\020\200\200\200\200" +
      "\002\"\263\001\n\010DataType\022\013\n\007Unknown\020\000\022\010\n\004Int1\020\001\022\010\n" +
      "\004Int2\020\002\022\010\n\004Int4\020\003\022\010\n\004Int8\020\004\022\n\n\006Float4\020\005\022" +
      "\n\n\006Float8\020\006\022\013\n\007Boolean\020\007\022\n\n\006String\020\010\022\014\n\010",
      "DateTime\020\t\022\013\n\007Dataset\020\n\022\010\n\004Text\020\013\022\t\n\005Byt" +
      "es\020\014\022\010\n\004File\020\r\022\007\n\003UDT\020\016*\010\010\021\020\200\200\200\200\002\032|\n\rUdt" +
      "Definition\022\014\n\004name\030\001 \001(\t\022\017\n\007version\030\002 \001(" +
      "\t\022B\n\007members\030\003 \003(\01321.com.cirruslink.spar" +
      "kplug.protobuf.Payload.Metric*\010\010\004\020\200\200\200\200\002*" +
      "\010\010\006\020\200\200\200\200\002B4\n!com.cirruslink.sparkplug.pr" +
      "otobufB\017SparkplugBProto"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_com_cirruslink_sparkplug_protobuf_Payload_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_com_cirruslink_sparkplug_protobuf_Payload_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_cirruslink_sparkplug_protobuf_Payload_descriptor,
        new java.lang.String[] { "Timestamp", "Metric", "Seq", "Uuid", "Body", });
    internal_static_com_cirruslink_sparkplug_protobuf_Payload_Metric_descriptor =
      internal_static_com_cirruslink_sparkplug_protobuf_Payload_descriptor.getNestedTypes().get(0);
    internal_static_com_cirruslink_sparkplug_protobuf_Payload_Metric_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_cirruslink_sparkplug_protobuf_Payload_Metric_descriptor,
        new java.lang.String[] { "Name", "Alias", "Timestamp", "Datatype", "Historical", "Metadata", "IntValue", "LongValue", "FloatValue", "DoubleValue", "BooleanValue", "StringValue", "BytesValue", "DatasetValue", });
    internal_static_com_cirruslink_sparkplug_protobuf_Payload_Metric_MetaData_descriptor =
      internal_static_com_cirruslink_sparkplug_protobuf_Payload_Metric_descriptor.getNestedTypes().get(0);
    internal_static_com_cirruslink_sparkplug_protobuf_Payload_Metric_MetaData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_cirruslink_sparkplug_protobuf_Payload_Metric_MetaData_descriptor,
        new java.lang.String[] { "IsMultiPart", "ContentType", "Size", "Seq", "FileName", "FileType", "Md5", "TypeId", "Description", "Members", });
    internal_static_com_cirruslink_sparkplug_protobuf_Payload_Metric_MetaField_descriptor =
      internal_static_com_cirruslink_sparkplug_protobuf_Payload_Metric_descriptor.getNestedTypes().get(1);
    internal_static_com_cirruslink_sparkplug_protobuf_Payload_Metric_MetaField_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_cirruslink_sparkplug_protobuf_Payload_Metric_MetaField_descriptor,
        new java.lang.String[] { "Name", "Datatype", "IntValue", "LongValue", "FloatValue", "DoubleValue", "BooleanValue", "StringValue", "BytesValue", "DatasetValue", });
    internal_static_com_cirruslink_sparkplug_protobuf_Payload_Metric_DataSet_descriptor =
      internal_static_com_cirruslink_sparkplug_protobuf_Payload_Metric_descriptor.getNestedTypes().get(2);
    internal_static_com_cirruslink_sparkplug_protobuf_Payload_Metric_DataSet_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_cirruslink_sparkplug_protobuf_Payload_Metric_DataSet_descriptor,
        new java.lang.String[] { "NumOfColumns", "Columns", "Types", "Rows", });
    internal_static_com_cirruslink_sparkplug_protobuf_Payload_Metric_DataSet_Value_descriptor =
      internal_static_com_cirruslink_sparkplug_protobuf_Payload_Metric_DataSet_descriptor.getNestedTypes().get(0);
    internal_static_com_cirruslink_sparkplug_protobuf_Payload_Metric_DataSet_Value_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_cirruslink_sparkplug_protobuf_Payload_Metric_DataSet_Value_descriptor,
        new java.lang.String[] { "IntValue", "LongValue", "FloatValue", "DoubleValue", "BooleanValue", "StringValue", });
    internal_static_com_cirruslink_sparkplug_protobuf_Payload_Metric_DataSet_Row_descriptor =
      internal_static_com_cirruslink_sparkplug_protobuf_Payload_Metric_DataSet_descriptor.getNestedTypes().get(1);
    internal_static_com_cirruslink_sparkplug_protobuf_Payload_Metric_DataSet_Row_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_cirruslink_sparkplug_protobuf_Payload_Metric_DataSet_Row_descriptor,
        new java.lang.String[] { "Element", });
    internal_static_com_cirruslink_sparkplug_protobuf_Payload_UdtDefinition_descriptor =
      internal_static_com_cirruslink_sparkplug_protobuf_Payload_descriptor.getNestedTypes().get(1);
    internal_static_com_cirruslink_sparkplug_protobuf_Payload_UdtDefinition_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_cirruslink_sparkplug_protobuf_Payload_UdtDefinition_descriptor,
        new java.lang.String[] { "Name", "Version", "Members", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
